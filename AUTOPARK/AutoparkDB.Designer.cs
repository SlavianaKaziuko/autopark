//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace AUTOPARK {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("AutoparkDB")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class AutoparkDB : global::System.Data.DataSet {
        
        private Подвижной_составDataTable tableПодвижной_состав;
        
        private _Нормы_расхода_ГСМ_на_авто_тракторыDataTable _tableНормы_расхода_ГСМ_на_авто_тракторы;
        
        private VoditeliAutoDataTable tableVoditeliAuto;
        
        private Путевые_листы_легковыеDataTable tableПутевые_листы_легковые;
        
        private Путевые_листы_грузовыеDataTable tableПутевые_листы_грузовые;
        
        private Путевой_лист_Грузового_автоDataTable tableПутевой_лист_Грузового_авто;
        
        private PutevoiListLegkTableDataTable tablePutevoiListLegkTable;
        
        private Данные_Путевой_лист_легкового_автоDataTable tableДанные_Путевой_лист_легкового_авто;
        
        private Личный_составDataTable tableЛичный_состав;
        
        private Задание_водителюDataTable tableЗадание_водителю;
        
        private DanieJournalLegkovieDataTable tableDanieJournalLegkovie;
        
        private DanieJournalGruzovieDataTable tableDanieJournalGruzovie;
        
        private BannerJornalGruzovieDataTable tableBannerJornalGruzovie;
        
        private Движение_ТСМDataTable tableДвижение_ТСМ;
        
        private Заправка_ТСМDataTable tableЗаправка_ТСМ;
        
        private Работа_водителя_и_автомобиляDataTable tableРабота_водителя_и_автомобиля;
        
        private ОтделыDataTable tableОтделы;
        
        private global::System.Data.DataRelation relationFK_Путевой_лист_Грузового_авто_Подвижной_состав;
        
        private global::System.Data.DataRelation relationFK_Путевой_лист_легкового_автомобиля_Подвижной_состав1;
        
        private global::System.Data.DataRelation relationFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_легкового_автомобиля1;
        
        private global::System.Data.DataRelation relationFK_Путевой_лист_Грузового_авто_личный_состав2;
        
        private global::System.Data.DataRelation relationFK_Путевой_лист_легкового_автомобиля_личный_состав4;
        
        private global::System.Data.DataRelation relationFK_Путевой_лист_легкового_автомобиля_личный_состав2;
        
        private global::System.Data.DataRelation relationFK_Задание_водителю_Путевой_лист_Грузового_авто;
        
        private global::System.Data.DataRelation relationFK_Движение_ТСМ_Путевой_лист_Грузового_авто;
        
        private global::System.Data.DataRelation relationFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_грузового_автомобиля;
        
        private global::System.Data.DataRelation relationFK_Путевой_лист_Грузового_авто_личный_состав1;
        
        private global::System.Data.DataRelation relationFK_Путевой_лист_Грузового_авто_личный_состав;
        
        private global::System.Data.DataRelation relationFK_Путевой_лист_легкового_id_отдела;
        
        private global::System.Data.DataRelation relationFK_Путевой_лист_Грузового_авто_личный_состав3;
        
        private global::System.Data.DataRelation relationFK_Путевой_лист_легкового_автомобиля_личный_состав;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AutoparkDB() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected AutoparkDB(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Подвижной состав"] != null)) {
                    base.Tables.Add(new Подвижной_составDataTable(ds.Tables["Подвижной состав"]));
                }
                if ((ds.Tables["Нормы расхода ГСМ на авто,тракторы"] != null)) {
                    base.Tables.Add(new _Нормы_расхода_ГСМ_на_авто_тракторыDataTable(ds.Tables["Нормы расхода ГСМ на авто,тракторы"]));
                }
                if ((ds.Tables["VoditeliAuto"] != null)) {
                    base.Tables.Add(new VoditeliAutoDataTable(ds.Tables["VoditeliAuto"]));
                }
                if ((ds.Tables["Путевые листы легковые"] != null)) {
                    base.Tables.Add(new Путевые_листы_легковыеDataTable(ds.Tables["Путевые листы легковые"]));
                }
                if ((ds.Tables["Путевые листы грузовые"] != null)) {
                    base.Tables.Add(new Путевые_листы_грузовыеDataTable(ds.Tables["Путевые листы грузовые"]));
                }
                if ((ds.Tables["Путевой лист Грузового авто"] != null)) {
                    base.Tables.Add(new Путевой_лист_Грузового_автоDataTable(ds.Tables["Путевой лист Грузового авто"]));
                }
                if ((ds.Tables["PutevoiListLegkTable"] != null)) {
                    base.Tables.Add(new PutevoiListLegkTableDataTable(ds.Tables["PutevoiListLegkTable"]));
                }
                if ((ds.Tables["Данные Путевой лист легкового авто"] != null)) {
                    base.Tables.Add(new Данные_Путевой_лист_легкового_автоDataTable(ds.Tables["Данные Путевой лист легкового авто"]));
                }
                if ((ds.Tables["Личный состав"] != null)) {
                    base.Tables.Add(new Личный_составDataTable(ds.Tables["Личный состав"]));
                }
                if ((ds.Tables["Задание водителю"] != null)) {
                    base.Tables.Add(new Задание_водителюDataTable(ds.Tables["Задание водителю"]));
                }
                if ((ds.Tables["DanieJournalLegkovie"] != null)) {
                    base.Tables.Add(new DanieJournalLegkovieDataTable(ds.Tables["DanieJournalLegkovie"]));
                }
                if ((ds.Tables["DanieJournalGruzovie"] != null)) {
                    base.Tables.Add(new DanieJournalGruzovieDataTable(ds.Tables["DanieJournalGruzovie"]));
                }
                if ((ds.Tables["BannerJornalGruzovie"] != null)) {
                    base.Tables.Add(new BannerJornalGruzovieDataTable(ds.Tables["BannerJornalGruzovie"]));
                }
                if ((ds.Tables["Движение ТСМ"] != null)) {
                    base.Tables.Add(new Движение_ТСМDataTable(ds.Tables["Движение ТСМ"]));
                }
                if ((ds.Tables["Заправка ТСМ"] != null)) {
                    base.Tables.Add(new Заправка_ТСМDataTable(ds.Tables["Заправка ТСМ"]));
                }
                if ((ds.Tables["Работа водителя и автомобиля"] != null)) {
                    base.Tables.Add(new Работа_водителя_и_автомобиляDataTable(ds.Tables["Работа водителя и автомобиля"]));
                }
                if ((ds.Tables["Отделы"] != null)) {
                    base.Tables.Add(new ОтделыDataTable(ds.Tables["Отделы"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Подвижной_составDataTable Подвижной_состав {
            get {
                return this.tableПодвижной_состав;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _Нормы_расхода_ГСМ_на_авто_тракторыDataTable _Нормы_расхода_ГСМ_на_авто_тракторы {
            get {
                return this._tableНормы_расхода_ГСМ_на_авто_тракторы;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VoditeliAutoDataTable VoditeliAuto {
            get {
                return this.tableVoditeliAuto;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Путевые_листы_легковыеDataTable Путевые_листы_легковые {
            get {
                return this.tableПутевые_листы_легковые;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Путевые_листы_грузовыеDataTable Путевые_листы_грузовые {
            get {
                return this.tableПутевые_листы_грузовые;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Путевой_лист_Грузового_автоDataTable Путевой_лист_Грузового_авто {
            get {
                return this.tableПутевой_лист_Грузового_авто;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PutevoiListLegkTableDataTable PutevoiListLegkTable {
            get {
                return this.tablePutevoiListLegkTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Данные_Путевой_лист_легкового_автоDataTable Данные_Путевой_лист_легкового_авто {
            get {
                return this.tableДанные_Путевой_лист_легкового_авто;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Личный_составDataTable Личный_состав {
            get {
                return this.tableЛичный_состав;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Задание_водителюDataTable Задание_водителю {
            get {
                return this.tableЗадание_водителю;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DanieJournalLegkovieDataTable DanieJournalLegkovie {
            get {
                return this.tableDanieJournalLegkovie;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DanieJournalGruzovieDataTable DanieJournalGruzovie {
            get {
                return this.tableDanieJournalGruzovie;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BannerJornalGruzovieDataTable BannerJornalGruzovie {
            get {
                return this.tableBannerJornalGruzovie;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Движение_ТСМDataTable Движение_ТСМ {
            get {
                return this.tableДвижение_ТСМ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Заправка_ТСМDataTable Заправка_ТСМ {
            get {
                return this.tableЗаправка_ТСМ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Работа_водителя_и_автомобиляDataTable Работа_водителя_и_автомобиля {
            get {
                return this.tableРабота_водителя_и_автомобиля;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ОтделыDataTable Отделы {
            get {
                return this.tableОтделы;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            AutoparkDB cln = ((AutoparkDB)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Подвижной состав"] != null)) {
                    base.Tables.Add(new Подвижной_составDataTable(ds.Tables["Подвижной состав"]));
                }
                if ((ds.Tables["Нормы расхода ГСМ на авто,тракторы"] != null)) {
                    base.Tables.Add(new _Нормы_расхода_ГСМ_на_авто_тракторыDataTable(ds.Tables["Нормы расхода ГСМ на авто,тракторы"]));
                }
                if ((ds.Tables["VoditeliAuto"] != null)) {
                    base.Tables.Add(new VoditeliAutoDataTable(ds.Tables["VoditeliAuto"]));
                }
                if ((ds.Tables["Путевые листы легковые"] != null)) {
                    base.Tables.Add(new Путевые_листы_легковыеDataTable(ds.Tables["Путевые листы легковые"]));
                }
                if ((ds.Tables["Путевые листы грузовые"] != null)) {
                    base.Tables.Add(new Путевые_листы_грузовыеDataTable(ds.Tables["Путевые листы грузовые"]));
                }
                if ((ds.Tables["Путевой лист Грузового авто"] != null)) {
                    base.Tables.Add(new Путевой_лист_Грузового_автоDataTable(ds.Tables["Путевой лист Грузового авто"]));
                }
                if ((ds.Tables["PutevoiListLegkTable"] != null)) {
                    base.Tables.Add(new PutevoiListLegkTableDataTable(ds.Tables["PutevoiListLegkTable"]));
                }
                if ((ds.Tables["Данные Путевой лист легкового авто"] != null)) {
                    base.Tables.Add(new Данные_Путевой_лист_легкового_автоDataTable(ds.Tables["Данные Путевой лист легкового авто"]));
                }
                if ((ds.Tables["Личный состав"] != null)) {
                    base.Tables.Add(new Личный_составDataTable(ds.Tables["Личный состав"]));
                }
                if ((ds.Tables["Задание водителю"] != null)) {
                    base.Tables.Add(new Задание_водителюDataTable(ds.Tables["Задание водителю"]));
                }
                if ((ds.Tables["DanieJournalLegkovie"] != null)) {
                    base.Tables.Add(new DanieJournalLegkovieDataTable(ds.Tables["DanieJournalLegkovie"]));
                }
                if ((ds.Tables["DanieJournalGruzovie"] != null)) {
                    base.Tables.Add(new DanieJournalGruzovieDataTable(ds.Tables["DanieJournalGruzovie"]));
                }
                if ((ds.Tables["BannerJornalGruzovie"] != null)) {
                    base.Tables.Add(new BannerJornalGruzovieDataTable(ds.Tables["BannerJornalGruzovie"]));
                }
                if ((ds.Tables["Движение ТСМ"] != null)) {
                    base.Tables.Add(new Движение_ТСМDataTable(ds.Tables["Движение ТСМ"]));
                }
                if ((ds.Tables["Заправка ТСМ"] != null)) {
                    base.Tables.Add(new Заправка_ТСМDataTable(ds.Tables["Заправка ТСМ"]));
                }
                if ((ds.Tables["Работа водителя и автомобиля"] != null)) {
                    base.Tables.Add(new Работа_водителя_и_автомобиляDataTable(ds.Tables["Работа водителя и автомобиля"]));
                }
                if ((ds.Tables["Отделы"] != null)) {
                    base.Tables.Add(new ОтделыDataTable(ds.Tables["Отделы"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableПодвижной_состав = ((Подвижной_составDataTable)(base.Tables["Подвижной состав"]));
            if ((initTable == true)) {
                if ((this.tableПодвижной_состав != null)) {
                    this.tableПодвижной_состав.InitVars();
                }
            }
            this._tableНормы_расхода_ГСМ_на_авто_тракторы = ((_Нормы_расхода_ГСМ_на_авто_тракторыDataTable)(base.Tables["Нормы расхода ГСМ на авто,тракторы"]));
            if ((initTable == true)) {
                if ((this._tableНормы_расхода_ГСМ_на_авто_тракторы != null)) {
                    this._tableНормы_расхода_ГСМ_на_авто_тракторы.InitVars();
                }
            }
            this.tableVoditeliAuto = ((VoditeliAutoDataTable)(base.Tables["VoditeliAuto"]));
            if ((initTable == true)) {
                if ((this.tableVoditeliAuto != null)) {
                    this.tableVoditeliAuto.InitVars();
                }
            }
            this.tableПутевые_листы_легковые = ((Путевые_листы_легковыеDataTable)(base.Tables["Путевые листы легковые"]));
            if ((initTable == true)) {
                if ((this.tableПутевые_листы_легковые != null)) {
                    this.tableПутевые_листы_легковые.InitVars();
                }
            }
            this.tableПутевые_листы_грузовые = ((Путевые_листы_грузовыеDataTable)(base.Tables["Путевые листы грузовые"]));
            if ((initTable == true)) {
                if ((this.tableПутевые_листы_грузовые != null)) {
                    this.tableПутевые_листы_грузовые.InitVars();
                }
            }
            this.tableПутевой_лист_Грузового_авто = ((Путевой_лист_Грузового_автоDataTable)(base.Tables["Путевой лист Грузового авто"]));
            if ((initTable == true)) {
                if ((this.tableПутевой_лист_Грузового_авто != null)) {
                    this.tableПутевой_лист_Грузового_авто.InitVars();
                }
            }
            this.tablePutevoiListLegkTable = ((PutevoiListLegkTableDataTable)(base.Tables["PutevoiListLegkTable"]));
            if ((initTable == true)) {
                if ((this.tablePutevoiListLegkTable != null)) {
                    this.tablePutevoiListLegkTable.InitVars();
                }
            }
            this.tableДанные_Путевой_лист_легкового_авто = ((Данные_Путевой_лист_легкового_автоDataTable)(base.Tables["Данные Путевой лист легкового авто"]));
            if ((initTable == true)) {
                if ((this.tableДанные_Путевой_лист_легкового_авто != null)) {
                    this.tableДанные_Путевой_лист_легкового_авто.InitVars();
                }
            }
            this.tableЛичный_состав = ((Личный_составDataTable)(base.Tables["Личный состав"]));
            if ((initTable == true)) {
                if ((this.tableЛичный_состав != null)) {
                    this.tableЛичный_состав.InitVars();
                }
            }
            this.tableЗадание_водителю = ((Задание_водителюDataTable)(base.Tables["Задание водителю"]));
            if ((initTable == true)) {
                if ((this.tableЗадание_водителю != null)) {
                    this.tableЗадание_водителю.InitVars();
                }
            }
            this.tableDanieJournalLegkovie = ((DanieJournalLegkovieDataTable)(base.Tables["DanieJournalLegkovie"]));
            if ((initTable == true)) {
                if ((this.tableDanieJournalLegkovie != null)) {
                    this.tableDanieJournalLegkovie.InitVars();
                }
            }
            this.tableDanieJournalGruzovie = ((DanieJournalGruzovieDataTable)(base.Tables["DanieJournalGruzovie"]));
            if ((initTable == true)) {
                if ((this.tableDanieJournalGruzovie != null)) {
                    this.tableDanieJournalGruzovie.InitVars();
                }
            }
            this.tableBannerJornalGruzovie = ((BannerJornalGruzovieDataTable)(base.Tables["BannerJornalGruzovie"]));
            if ((initTable == true)) {
                if ((this.tableBannerJornalGruzovie != null)) {
                    this.tableBannerJornalGruzovie.InitVars();
                }
            }
            this.tableДвижение_ТСМ = ((Движение_ТСМDataTable)(base.Tables["Движение ТСМ"]));
            if ((initTable == true)) {
                if ((this.tableДвижение_ТСМ != null)) {
                    this.tableДвижение_ТСМ.InitVars();
                }
            }
            this.tableЗаправка_ТСМ = ((Заправка_ТСМDataTable)(base.Tables["Заправка ТСМ"]));
            if ((initTable == true)) {
                if ((this.tableЗаправка_ТСМ != null)) {
                    this.tableЗаправка_ТСМ.InitVars();
                }
            }
            this.tableРабота_водителя_и_автомобиля = ((Работа_водителя_и_автомобиляDataTable)(base.Tables["Работа водителя и автомобиля"]));
            if ((initTable == true)) {
                if ((this.tableРабота_водителя_и_автомобиля != null)) {
                    this.tableРабота_водителя_и_автомобиля.InitVars();
                }
            }
            this.tableОтделы = ((ОтделыDataTable)(base.Tables["Отделы"]));
            if ((initTable == true)) {
                if ((this.tableОтделы != null)) {
                    this.tableОтделы.InitVars();
                }
            }
            this.relationFK_Путевой_лист_Грузового_авто_Подвижной_состав = this.Relations["FK_Путевой лист Грузового авто_Подвижной состав"];
            this.relationFK_Путевой_лист_легкового_автомобиля_Подвижной_состав1 = this.Relations["FK_Путевой лист легкового автомобиля_Подвижной состав1"];
            this.relationFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_легкового_автомобиля1 = this.Relations["FK_Данные Путевой лист легкового авто_Путевой лист легкового автомобиля1"];
            this.relationFK_Путевой_лист_Грузового_авто_личный_состав2 = this.Relations["FK_Путевой лист Грузового авто_личный состав2"];
            this.relationFK_Путевой_лист_легкового_автомобиля_личный_состав4 = this.Relations["FK_Путевой лист легкового автомобиля_личный состав4"];
            this.relationFK_Путевой_лист_легкового_автомобиля_личный_состав2 = this.Relations["FK_Путевой лист легкового автомобиля_личный состав2"];
            this.relationFK_Задание_водителю_Путевой_лист_Грузового_авто = this.Relations["FK_Задание водителю_Путевой лист Грузового авто"];
            this.relationFK_Движение_ТСМ_Путевой_лист_Грузового_авто = this.Relations["FK_Движение ТСМ_Путевой лист Грузового авто"];
            this.relationFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_грузового_автомобиля = this.Relations["FK_Данные Путевой лист легкового авто_Путевой лист грузового автомобиля"];
            this.relationFK_Путевой_лист_Грузового_авто_личный_состав1 = this.Relations["FK_Путевой лист Грузового авто_личный состав1"];
            this.relationFK_Путевой_лист_Грузового_авто_личный_состав = this.Relations["FK_Путевой лист Грузового авто_личный состав"];
            this.relationFK_Путевой_лист_легкового_id_отдела = this.Relations["FK_Путевой лист легкового_id_отдела"];
            this.relationFK_Путевой_лист_Грузового_авто_личный_состав3 = this.Relations["FK_Путевой лист Грузового авто_личный состав3"];
            this.relationFK_Путевой_лист_легкового_автомобиля_личный_состав = this.Relations["FK_Путевой лист легкового автомобиля_личный состав"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "AutoparkDB";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/AutoparkDB.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableПодвижной_состав = new Подвижной_составDataTable();
            base.Tables.Add(this.tableПодвижной_состав);
            this._tableНормы_расхода_ГСМ_на_авто_тракторы = new _Нормы_расхода_ГСМ_на_авто_тракторыDataTable();
            base.Tables.Add(this._tableНормы_расхода_ГСМ_на_авто_тракторы);
            this.tableVoditeliAuto = new VoditeliAutoDataTable();
            base.Tables.Add(this.tableVoditeliAuto);
            this.tableПутевые_листы_легковые = new Путевые_листы_легковыеDataTable();
            base.Tables.Add(this.tableПутевые_листы_легковые);
            this.tableПутевые_листы_грузовые = new Путевые_листы_грузовыеDataTable();
            base.Tables.Add(this.tableПутевые_листы_грузовые);
            this.tableПутевой_лист_Грузового_авто = new Путевой_лист_Грузового_автоDataTable();
            base.Tables.Add(this.tableПутевой_лист_Грузового_авто);
            this.tablePutevoiListLegkTable = new PutevoiListLegkTableDataTable();
            base.Tables.Add(this.tablePutevoiListLegkTable);
            this.tableДанные_Путевой_лист_легкового_авто = new Данные_Путевой_лист_легкового_автоDataTable();
            base.Tables.Add(this.tableДанные_Путевой_лист_легкового_авто);
            this.tableЛичный_состав = new Личный_составDataTable();
            base.Tables.Add(this.tableЛичный_состав);
            this.tableЗадание_водителю = new Задание_водителюDataTable();
            base.Tables.Add(this.tableЗадание_водителю);
            this.tableDanieJournalLegkovie = new DanieJournalLegkovieDataTable();
            base.Tables.Add(this.tableDanieJournalLegkovie);
            this.tableDanieJournalGruzovie = new DanieJournalGruzovieDataTable();
            base.Tables.Add(this.tableDanieJournalGruzovie);
            this.tableBannerJornalGruzovie = new BannerJornalGruzovieDataTable();
            base.Tables.Add(this.tableBannerJornalGruzovie);
            this.tableДвижение_ТСМ = new Движение_ТСМDataTable();
            base.Tables.Add(this.tableДвижение_ТСМ);
            this.tableЗаправка_ТСМ = new Заправка_ТСМDataTable();
            base.Tables.Add(this.tableЗаправка_ТСМ);
            this.tableРабота_водителя_и_автомобиля = new Работа_водителя_и_автомобиляDataTable();
            base.Tables.Add(this.tableРабота_водителя_и_автомобиля);
            this.tableОтделы = new ОтделыDataTable();
            base.Tables.Add(this.tableОтделы);
            this.relationFK_Путевой_лист_Грузового_авто_Подвижной_состав = new global::System.Data.DataRelation("FK_Путевой лист Грузового авто_Подвижной состав", new global::System.Data.DataColumn[] {
                        this.tableПодвижной_состав.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableПутевой_лист_Грузового_авто.ID_АвтомобиляColumn}, false);
            this.Relations.Add(this.relationFK_Путевой_лист_Грузового_авто_Подвижной_состав);
            this.relationFK_Путевой_лист_легкового_автомобиля_Подвижной_состав1 = new global::System.Data.DataRelation("FK_Путевой лист легкового автомобиля_Подвижной состав1", new global::System.Data.DataColumn[] {
                        this.tableПодвижной_состав.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tablePutevoiListLegkTable.ID_АвтомобильColumn}, false);
            this.Relations.Add(this.relationFK_Путевой_лист_легкового_автомобиля_Подвижной_состав1);
            this.relationFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_легкового_автомобиля1 = new global::System.Data.DataRelation("FK_Данные Путевой лист легкового авто_Путевой лист легкового автомобиля1", new global::System.Data.DataColumn[] {
                        this.tablePutevoiListLegkTable.ID_Путевого_листаColumn}, new global::System.Data.DataColumn[] {
                        this.tableДанные_Путевой_лист_легкового_авто.ID_Путевого_листаColumn}, false);
            this.Relations.Add(this.relationFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_легкового_автомобиля1);
            this.relationFK_Путевой_лист_Грузового_авто_личный_состав2 = new global::System.Data.DataRelation("FK_Путевой лист Грузового авто_личный состав2", new global::System.Data.DataColumn[] {
                        this.tableЛичный_состав.табельный_номерColumn}, new global::System.Data.DataColumn[] {
                        this.tableПутевой_лист_Грузового_авто.ID_ВодителяColumn}, false);
            this.Relations.Add(this.relationFK_Путевой_лист_Грузового_авто_личный_состав2);
            this.relationFK_Путевой_лист_легкового_автомобиля_личный_состав4 = new global::System.Data.DataRelation("FK_Путевой лист легкового автомобиля_личный состав4", new global::System.Data.DataColumn[] {
                        this.tableЛичный_состав.табельный_номерColumn}, new global::System.Data.DataColumn[] {
                        this.tablePutevoiListLegkTable.ID_ВодительColumn}, false);
            this.Relations.Add(this.relationFK_Путевой_лист_легкового_автомобиля_личный_состав4);
            this.relationFK_Путевой_лист_легкового_автомобиля_личный_состав2 = new global::System.Data.DataRelation("FK_Путевой лист легкового автомобиля_личный состав2", new global::System.Data.DataColumn[] {
                        this.tableПутевые_листы_грузовые.табельный__номерColumn}, new global::System.Data.DataColumn[] {
                        this.tablePutevoiListLegkTable.ID_ВодительColumn}, false);
            this.Relations.Add(this.relationFK_Путевой_лист_легкового_автомобиля_личный_состав2);
            this.relationFK_Задание_водителю_Путевой_лист_Грузового_авто = new global::System.Data.DataRelation("FK_Задание водителю_Путевой лист Грузового авто", new global::System.Data.DataColumn[] {
                        this.tableПутевой_лист_Грузового_авто.ID_Путевого_листаColumn}, new global::System.Data.DataColumn[] {
                        this.tableЗадание_водителю.ID_Путевого_листаColumn}, false);
            this.Relations.Add(this.relationFK_Задание_водителю_Путевой_лист_Грузового_авто);
            this.relationFK_Движение_ТСМ_Путевой_лист_Грузового_авто = new global::System.Data.DataRelation("FK_Движение ТСМ_Путевой лист Грузового авто", new global::System.Data.DataColumn[] {
                        this.tableПутевой_лист_Грузового_авто.ID_Путевого_листаColumn}, new global::System.Data.DataColumn[] {
                        this.tableДвижение_ТСМ.ID_Путевого_листаColumn}, false);
            this.Relations.Add(this.relationFK_Движение_ТСМ_Путевой_лист_Грузового_авто);
            this.relationFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_грузового_автомобиля = new global::System.Data.DataRelation("FK_Данные Путевой лист легкового авто_Путевой лист грузового автомобиля", new global::System.Data.DataColumn[] {
                        this.tableПутевой_лист_Грузового_авто.ID_Путевого_листаColumn}, new global::System.Data.DataColumn[] {
                        this.tableРабота_водителя_и_автомобиля.ID_Путевого_листаColumn}, false);
            this.Relations.Add(this.relationFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_грузового_автомобиля);
            this.relationFK_Путевой_лист_Грузового_авто_личный_состав1 = new global::System.Data.DataRelation("FK_Путевой лист Грузового авто_личный состав1", new global::System.Data.DataColumn[] {
                        this.tableЛичный_состав.табельный_номерColumn}, new global::System.Data.DataColumn[] {
                        this.tableПутевые_листы_легковые.табельный__номерColumn}, false);
            this.Relations.Add(this.relationFK_Путевой_лист_Грузового_авто_личный_состав1);
            this.relationFK_Путевой_лист_Грузового_авто_личный_состав = new global::System.Data.DataRelation("FK_Путевой лист Грузового авто_личный состав", new global::System.Data.DataColumn[] {
                        this.tableЛичный_состав.табельный_номерColumn}, new global::System.Data.DataColumn[] {
                        this.tableПутевые_листы_грузовые.табельный__номерColumn}, false);
            this.Relations.Add(this.relationFK_Путевой_лист_Грузового_авто_личный_состав);
            this.relationFK_Путевой_лист_легкового_id_отдела = new global::System.Data.DataRelation("FK_Путевой лист легкового_id_отдела", new global::System.Data.DataColumn[] {
                        this.tableОтделы.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tablePutevoiListLegkTable.ID_ОтделаColumn}, false);
            this.Relations.Add(this.relationFK_Путевой_лист_легкового_id_отдела);
            this.relationFK_Путевой_лист_Грузового_авто_личный_состав3 = new global::System.Data.DataRelation("FK_Путевой лист Грузового авто_личный состав3", new global::System.Data.DataColumn[] {
                        this.tableПутевые_листы_легковые.табельный__номерColumn}, new global::System.Data.DataColumn[] {
                        this.tableПутевой_лист_Грузового_авто.ID_ВодителяColumn}, false);
            this.Relations.Add(this.relationFK_Путевой_лист_Грузового_авто_личный_состав3);
            this.relationFK_Путевой_лист_легкового_автомобиля_личный_состав = new global::System.Data.DataRelation("FK_Путевой лист легкового автомобиля_личный состав", new global::System.Data.DataColumn[] {
                        this.tableПутевые_листы_легковые.табельный__номерColumn}, new global::System.Data.DataColumn[] {
                        this.tablePutevoiListLegkTable.ID_ВодительColumn}, false);
            this.Relations.Add(this.relationFK_Путевой_лист_легкового_автомобиля_личный_состав);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeПодвижной_состав() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerialize_Нормы_расхода_ГСМ_на_авто_тракторы() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeVoditeliAuto() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeПутевые_листы_легковые() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeПутевые_листы_грузовые() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeПутевой_лист_Грузового_авто() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePutevoiListLegkTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeДанные_Путевой_лист_легкового_авто() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeЛичный_состав() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeЗадание_водителю() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDanieJournalLegkovie() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDanieJournalGruzovie() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeBannerJornalGruzovie() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeДвижение_ТСМ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeЗаправка_ТСМ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeРабота_водителя_и_автомобиля() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeОтделы() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            AutoparkDB ds = new AutoparkDB();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Подвижной_составRowChangeEventHandler(object sender, Подвижной_составRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void _Нормы_расхода_ГСМ_на_авто_тракторыRowChangeEventHandler(object sender, _Нормы_расхода_ГСМ_на_авто_тракторыRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void VoditeliAutoRowChangeEventHandler(object sender, VoditeliAutoRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Путевые_листы_легковыеRowChangeEventHandler(object sender, Путевые_листы_легковыеRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Путевые_листы_грузовыеRowChangeEventHandler(object sender, Путевые_листы_грузовыеRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Путевой_лист_Грузового_автоRowChangeEventHandler(object sender, Путевой_лист_Грузового_автоRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PutevoiListLegkTableRowChangeEventHandler(object sender, PutevoiListLegkTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Данные_Путевой_лист_легкового_автоRowChangeEventHandler(object sender, Данные_Путевой_лист_легкового_автоRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Личный_составRowChangeEventHandler(object sender, Личный_составRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Задание_водителюRowChangeEventHandler(object sender, Задание_водителюRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DanieJournalLegkovieRowChangeEventHandler(object sender, DanieJournalLegkovieRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DanieJournalGruzovieRowChangeEventHandler(object sender, DanieJournalGruzovieRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void BannerJornalGruzovieRowChangeEventHandler(object sender, BannerJornalGruzovieRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Движение_ТСМRowChangeEventHandler(object sender, Движение_ТСМRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Заправка_ТСМRowChangeEventHandler(object sender, Заправка_ТСМRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Работа_водителя_и_автомобиляRowChangeEventHandler(object sender, Работа_водителя_и_автомобиляRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ОтделыRowChangeEventHandler(object sender, ОтделыRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Подвижной_составDataTable : global::System.Data.TypedTableBase<Подвижной_составRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnМарка_и_модель;
            
            private global::System.Data.DataColumn columnГаражный_номер;
            
            private global::System.Data.DataColumn columnТип_двигателя;
            
            private global::System.Data.DataColumn columnГод_выпуска;
            
            private global::System.Data.DataColumn columnИнвентарный_номер;
            
            private global::System.Data.DataColumn columnВид_топлива;
            
            private global::System.Data.DataColumn columnдата_окончания_страховки;
            
            private global::System.Data.DataColumn columnТип_назначения_авто;
            
            private global::System.Data.DataColumn columnГос_номер;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Подвижной_составDataTable() {
                this.TableName = "Подвижной состав";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Подвижной_составDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Подвижной_составDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Марка_и_модельColumn {
                get {
                    return this.columnМарка_и_модель;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Гаражный_номерColumn {
                get {
                    return this.columnГаражный_номер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Тип_двигателяColumn {
                get {
                    return this.columnТип_двигателя;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Год_выпускаColumn {
                get {
                    return this.columnГод_выпуска;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Инвентарный_номерColumn {
                get {
                    return this.columnИнвентарный_номер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Вид_топливаColumn {
                get {
                    return this.columnВид_топлива;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn дата_окончания_страховкиColumn {
                get {
                    return this.columnдата_окончания_страховки;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Тип_назначения_автоColumn {
                get {
                    return this.columnТип_назначения_авто;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Гос_номерColumn {
                get {
                    return this.columnГос_номер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Подвижной_составRow this[int index] {
                get {
                    return ((Подвижной_составRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Подвижной_составRowChangeEventHandler Подвижной_составRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Подвижной_составRowChangeEventHandler Подвижной_составRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Подвижной_составRowChangeEventHandler Подвижной_составRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Подвижной_составRowChangeEventHandler Подвижной_составRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddПодвижной_составRow(Подвижной_составRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Подвижной_составRow AddПодвижной_составRow(string Марка_и_модель, string Гаражный_номер, string Тип_двигателя, int Год_выпуска, string Инвентарный_номер, string Вид_топлива, System.DateTime дата_окончания_страховки, string Тип_назначения_авто, string Гос_номер) {
                Подвижной_составRow rowПодвижной_составRow = ((Подвижной_составRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Марка_и_модель,
                        Гаражный_номер,
                        Тип_двигателя,
                        Год_выпуска,
                        Инвентарный_номер,
                        Вид_топлива,
                        дата_окончания_страховки,
                        Тип_назначения_авто,
                        Гос_номер};
                rowПодвижной_составRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowПодвижной_составRow);
                return rowПодвижной_составRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Подвижной_составRow FindByID(int ID) {
                return ((Подвижной_составRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Подвижной_составDataTable cln = ((Подвижной_составDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Подвижной_составDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnМарка_и_модель = base.Columns["Марка и модель"];
                this.columnГаражный_номер = base.Columns["Гаражный номер"];
                this.columnТип_двигателя = base.Columns["Тип двигателя"];
                this.columnГод_выпуска = base.Columns["Год выпуска"];
                this.columnИнвентарный_номер = base.Columns["Инвентарный номер"];
                this.columnВид_топлива = base.Columns["Вид топлива"];
                this.columnдата_окончания_страховки = base.Columns["дата окончания страховки"];
                this.columnТип_назначения_авто = base.Columns["Тип назначения авто"];
                this.columnГос_номер = base.Columns["Гос_номер"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnМарка_и_модель = new global::System.Data.DataColumn("Марка и модель", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМарка_и_модель);
                this.columnГаражный_номер = new global::System.Data.DataColumn("Гаражный номер", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnГаражный_номер);
                this.columnТип_двигателя = new global::System.Data.DataColumn("Тип двигателя", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТип_двигателя);
                this.columnГод_выпуска = new global::System.Data.DataColumn("Год выпуска", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnГод_выпуска);
                this.columnИнвентарный_номер = new global::System.Data.DataColumn("Инвентарный номер", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИнвентарный_номер);
                this.columnВид_топлива = new global::System.Data.DataColumn("Вид топлива", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВид_топлива);
                this.columnдата_окончания_страховки = new global::System.Data.DataColumn("дата окончания страховки", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnдата_окончания_страховки);
                this.columnТип_назначения_авто = new global::System.Data.DataColumn("Тип назначения авто", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТип_назначения_авто);
                this.columnГос_номер = new global::System.Data.DataColumn("Гос_номер", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnГос_номер);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnМарка_и_модель.AllowDBNull = false;
                this.columnМарка_и_модель.MaxLength = 50;
                this.columnГаражный_номер.MaxLength = 50;
                this.columnТип_двигателя.MaxLength = 50;
                this.columnИнвентарный_номер.MaxLength = 50;
                this.columnВид_топлива.MaxLength = 50;
                this.columnТип_назначения_авто.MaxLength = 1;
                this.columnГос_номер.AllowDBNull = false;
                this.columnГос_номер.Caption = "Гос.номер";
                this.columnГос_номер.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Подвижной_составRow NewПодвижной_составRow() {
                return ((Подвижной_составRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Подвижной_составRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Подвижной_составRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Подвижной_составRowChanged != null)) {
                    this.Подвижной_составRowChanged(this, new Подвижной_составRowChangeEvent(((Подвижной_составRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Подвижной_составRowChanging != null)) {
                    this.Подвижной_составRowChanging(this, new Подвижной_составRowChangeEvent(((Подвижной_составRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Подвижной_составRowDeleted != null)) {
                    this.Подвижной_составRowDeleted(this, new Подвижной_составRowChangeEvent(((Подвижной_составRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Подвижной_составRowDeleting != null)) {
                    this.Подвижной_составRowDeleting(this, new Подвижной_составRowChangeEvent(((Подвижной_составRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveПодвижной_составRow(Подвижной_составRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutoparkDB ds = new AutoparkDB();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Подвижной_составDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _Нормы_расхода_ГСМ_на_авто_тракторыDataTable : global::System.Data.TypedTableBase<_Нормы_расхода_ГСМ_на_авто_тракторыRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnМарка_автомобиля;
            
            private global::System.Data.DataColumn columnВид_топлива;
            
            private global::System.Data.DataColumn _columnНорма_расхода_на_100_км_летняя_6_;
            
            private global::System.Data.DataColumn columnМарка_двигателя;
            
            private global::System.Data.DataColumn columnНорма_на_машино_час_летняя;
            
            private global::System.Data.DataColumn _columnН_ма_расх_масел_на_100л_р_да_топлива_моторное_л;
            
            private global::System.Data.DataColumn _columnН_ма_расх_масел_на_100л_р_да_трансмиссионное_л;
            
            private global::System.Data.DataColumn _columnН_ма_расх_масел_на_100л_р_да_топлива_специальное_л;
            
            private global::System.Data.DataColumn _columnН_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_л;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _Нормы_расхода_ГСМ_на_авто_тракторыDataTable() {
                this.TableName = "Нормы расхода ГСМ на авто,тракторы";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal _Нормы_расхода_ГСМ_на_авто_тракторыDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected _Нормы_расхода_ГСМ_на_авто_тракторыDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Марка_автомобиляColumn {
                get {
                    return this.columnМарка_автомобиля;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Вид_топливаColumn {
                get {
                    return this.columnВид_топлива;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _Норма_расхода_на_100_км_летняя_6_Column {
                get {
                    return this._columnНорма_расхода_на_100_км_летняя_6_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Марка_двигателяColumn {
                get {
                    return this.columnМарка_двигателя;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Норма_на_машино_час_летняяColumn {
                get {
                    return this.columnНорма_на_машино_час_летняя;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _Н_ма_расх_масел_на_100л_р_да_топлива_моторное_лColumn {
                get {
                    return this._columnН_ма_расх_масел_на_100л_р_да_топлива_моторное_л;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _Н_ма_расх_масел_на_100л_р_да_трансмиссионное_лColumn {
                get {
                    return this._columnН_ма_расх_масел_на_100л_р_да_трансмиссионное_л;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _Н_ма_расх_масел_на_100л_р_да_топлива_специальное_лColumn {
                get {
                    return this._columnН_ма_расх_масел_на_100л_р_да_топлива_специальное_л;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _Н_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_лColumn {
                get {
                    return this._columnН_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_л;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _Нормы_расхода_ГСМ_на_авто_тракторыRow this[int index] {
                get {
                    return ((_Нормы_расхода_ГСМ_на_авто_тракторыRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _Нормы_расхода_ГСМ_на_авто_тракторыRowChangeEventHandler _Нормы_расхода_ГСМ_на_авто_тракторыRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _Нормы_расхода_ГСМ_на_авто_тракторыRowChangeEventHandler _Нормы_расхода_ГСМ_на_авто_тракторыRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _Нормы_расхода_ГСМ_на_авто_тракторыRowChangeEventHandler _Нормы_расхода_ГСМ_на_авто_тракторыRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _Нормы_расхода_ГСМ_на_авто_тракторыRowChangeEventHandler _Нормы_расхода_ГСМ_на_авто_тракторыRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Add_Нормы_расхода_ГСМ_на_авто_тракторыRow(_Нормы_расхода_ГСМ_на_авто_тракторыRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _Нормы_расхода_ГСМ_на_авто_тракторыRow Add_Нормы_расхода_ГСМ_на_авто_тракторыRow(string Марка_автомобиля, string Вид_топлива, double _Норма_расхода_на_100_км_летняя_6_, string Марка_двигателя, double Норма_на_машино_час_летняя, double _Н_ма_расх_масел_на_100л_р_да_топлива_моторное_л, double _Н_ма_расх_масел_на_100л_р_да_трансмиссионное_л, double _Н_ма_расх_масел_на_100л_р_да_топлива_специальное_л, double _Н_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_л) {
                _Нормы_расхода_ГСМ_на_авто_тракторыRow row_Нормы_расхода_ГСМ_на_авто_тракторыRow = ((_Нормы_расхода_ГСМ_на_авто_тракторыRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Марка_автомобиля,
                        Вид_топлива,
                        _Норма_расхода_на_100_км_летняя_6_,
                        Марка_двигателя,
                        Норма_на_машино_час_летняя,
                        _Н_ма_расх_масел_на_100л_р_да_топлива_моторное_л,
                        _Н_ма_расх_масел_на_100л_р_да_трансмиссионное_л,
                        _Н_ма_расх_масел_на_100л_р_да_топлива_специальное_л,
                        _Н_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_л};
                row_Нормы_расхода_ГСМ_на_авто_тракторыRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_Нормы_расхода_ГСМ_на_авто_тракторыRow);
                return row_Нормы_расхода_ГСМ_на_авто_тракторыRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _Нормы_расхода_ГСМ_на_авто_тракторыRow FindByID(int ID) {
                return ((_Нормы_расхода_ГСМ_на_авто_тракторыRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                _Нормы_расхода_ГСМ_на_авто_тракторыDataTable cln = ((_Нормы_расхода_ГСМ_на_авто_тракторыDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _Нормы_расхода_ГСМ_на_авто_тракторыDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnМарка_автомобиля = base.Columns["Марка автомобиля"];
                this.columnВид_топлива = base.Columns["Вид топлива"];
                this._columnНорма_расхода_на_100_км_летняя_6_ = base.Columns["Норма расхода на 100 км летняя 6%"];
                this.columnМарка_двигателя = base.Columns["Марка двигателя"];
                this.columnНорма_на_машино_час_летняя = base.Columns["Норма на машино час летняя"];
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_моторное_л = base.Columns["Н-ма расх_масел на 100л р-да топлива моторное,л"];
                this._columnН_ма_расх_масел_на_100л_р_да_трансмиссионное_л = base.Columns["Н-ма расх_масел на 100л р-да трансмиссионное,л"];
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_специальное_л = base.Columns["Н-ма расх_масел на 100л р-да топлива специальное,л"];
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_л = base.Columns["Н-ма расх_масел на 100л р-да топлива пластичные смазки,л"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnМарка_автомобиля = new global::System.Data.DataColumn("Марка автомобиля", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМарка_автомобиля);
                this.columnВид_топлива = new global::System.Data.DataColumn("Вид топлива", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВид_топлива);
                this._columnНорма_расхода_на_100_км_летняя_6_ = new global::System.Data.DataColumn("Норма расхода на 100 км летняя 6%", typeof(double), null, global::System.Data.MappingType.Element);
                this._columnНорма_расхода_на_100_км_летняя_6_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnНорма_расхода_на_100_км_летняя_6_");
                this._columnНорма_расхода_на_100_км_летняя_6_.ExtendedProperties.Add("Generator_UserColumnName", "Норма расхода на 100 км летняя 6%");
                base.Columns.Add(this._columnНорма_расхода_на_100_км_летняя_6_);
                this.columnМарка_двигателя = new global::System.Data.DataColumn("Марка двигателя", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМарка_двигателя);
                this.columnНорма_на_машино_час_летняя = new global::System.Data.DataColumn("Норма на машино час летняя", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНорма_на_машино_час_летняя);
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_моторное_л = new global::System.Data.DataColumn("Н-ма расх_масел на 100л р-да топлива моторное,л", typeof(double), null, global::System.Data.MappingType.Element);
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_моторное_л.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnН_ма_расх_масел_на_100л_р_да_топлива_моторное_л");
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_моторное_л.ExtendedProperties.Add("Generator_UserColumnName", "Н-ма расх_масел на 100л р-да топлива моторное,л");
                base.Columns.Add(this._columnН_ма_расх_масел_на_100л_р_да_топлива_моторное_л);
                this._columnН_ма_расх_масел_на_100л_р_да_трансмиссионное_л = new global::System.Data.DataColumn("Н-ма расх_масел на 100л р-да трансмиссионное,л", typeof(double), null, global::System.Data.MappingType.Element);
                this._columnН_ма_расх_масел_на_100л_р_да_трансмиссионное_л.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnН_ма_расх_масел_на_100л_р_да_трансмиссионное_л");
                this._columnН_ма_расх_масел_на_100л_р_да_трансмиссионное_л.ExtendedProperties.Add("Generator_UserColumnName", "Н-ма расх_масел на 100л р-да трансмиссионное,л");
                base.Columns.Add(this._columnН_ма_расх_масел_на_100л_р_да_трансмиссионное_л);
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_специальное_л = new global::System.Data.DataColumn("Н-ма расх_масел на 100л р-да топлива специальное,л", typeof(double), null, global::System.Data.MappingType.Element);
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_специальное_л.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnН_ма_расх_масел_на_100л_р_да_топлива_специальное_л");
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_специальное_л.ExtendedProperties.Add("Generator_UserColumnName", "Н-ма расх_масел на 100л р-да топлива специальное,л");
                base.Columns.Add(this._columnН_ма_расх_масел_на_100л_р_да_топлива_специальное_л);
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_л = new global::System.Data.DataColumn("Н-ма расх_масел на 100л р-да топлива пластичные смазки,л", typeof(double), null, global::System.Data.MappingType.Element);
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_л.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnН_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_л");
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_л.ExtendedProperties.Add("Generator_UserColumnName", "Н-ма расх_масел на 100л р-да топлива пластичные смазки,л");
                base.Columns.Add(this._columnН_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_л);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnМарка_автомобиля.AllowDBNull = false;
                this.columnМарка_автомобиля.MaxLength = 30;
                this.columnВид_топлива.MaxLength = 10;
                this.columnМарка_двигателя.MaxLength = 30;
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_моторное_л.Caption = "Н-ма расх.масел на 100л р-да топлива моторное,л";
                this._columnН_ма_расх_масел_на_100л_р_да_трансмиссионное_л.Caption = "Н-ма расх.масел на 100л р-да трансмиссионное,л";
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_специальное_л.Caption = "Н-ма расх.масел на 100л р-да топлива специальное,л";
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_л.Caption = "Н-ма расх.масел на 100л р-да топлива пластичные смазки,л";
                this.ExtendedProperties.Add("Generator_TableVarName", "_tableНормы_расхода_ГСМ_на_авто_тракторы");
                this.ExtendedProperties.Add("Generator_UserTableName", "Нормы расхода ГСМ на авто,тракторы");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _Нормы_расхода_ГСМ_на_авто_тракторыRow New_Нормы_расхода_ГСМ_на_авто_тракторыRow() {
                return ((_Нормы_расхода_ГСМ_на_авто_тракторыRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _Нормы_расхода_ГСМ_на_авто_тракторыRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(_Нормы_расхода_ГСМ_на_авто_тракторыRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._Нормы_расхода_ГСМ_на_авто_тракторыRowChanged != null)) {
                    this._Нормы_расхода_ГСМ_на_авто_тракторыRowChanged(this, new _Нормы_расхода_ГСМ_на_авто_тракторыRowChangeEvent(((_Нормы_расхода_ГСМ_на_авто_тракторыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._Нормы_расхода_ГСМ_на_авто_тракторыRowChanging != null)) {
                    this._Нормы_расхода_ГСМ_на_авто_тракторыRowChanging(this, new _Нормы_расхода_ГСМ_на_авто_тракторыRowChangeEvent(((_Нормы_расхода_ГСМ_на_авто_тракторыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._Нормы_расхода_ГСМ_на_авто_тракторыRowDeleted != null)) {
                    this._Нормы_расхода_ГСМ_на_авто_тракторыRowDeleted(this, new _Нормы_расхода_ГСМ_на_авто_тракторыRowChangeEvent(((_Нормы_расхода_ГСМ_на_авто_тракторыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._Нормы_расхода_ГСМ_на_авто_тракторыRowDeleting != null)) {
                    this._Нормы_расхода_ГСМ_на_авто_тракторыRowDeleting(this, new _Нормы_расхода_ГСМ_на_авто_тракторыRowChangeEvent(((_Нормы_расхода_ГСМ_на_авто_тракторыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Remove_Нормы_расхода_ГСМ_на_авто_тракторыRow(_Нормы_расхода_ГСМ_на_авто_тракторыRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutoparkDB ds = new AutoparkDB();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_Нормы_расхода_ГСМ_на_авто_тракторыDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VoditeliAutoDataTable : global::System.Data.TypedTableBase<VoditeliAutoRow> {
            
            private global::System.Data.DataColumn columnФИО;
            
            private global::System.Data.DataColumn columnтабельный__номер;
            
            private global::System.Data.DataColumn columnсерия_водительского_удостоверения;
            
            private global::System.Data.DataColumn columnномер_водительского_удостоверения;
            
            private global::System.Data.DataColumn columnклассность;
            
            private global::System.Data.DataColumn columnсрок_действия_мед__справки;
            
            private global::System.Data.DataColumn columnМарка_и_модель;
            
            private global::System.Data.DataColumn columnГос_номер;
            
            private global::System.Data.DataColumn columnГаражный_номер;
            
            private global::System.Data.DataColumn columnТип_двигателя;
            
            private global::System.Data.DataColumn columnГод_выпуска;
            
            private global::System.Data.DataColumn columnИнвентарный_номер;
            
            private global::System.Data.DataColumn columnВид_топлива;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnдата_окончания_страховки;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VoditeliAutoDataTable() {
                this.TableName = "VoditeliAuto";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal VoditeliAutoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected VoditeliAutoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ФИОColumn {
                get {
                    return this.columnФИО;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn табельный__номерColumn {
                get {
                    return this.columnтабельный__номер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn серия_водительского_удостоверенияColumn {
                get {
                    return this.columnсерия_водительского_удостоверения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn номер_водительского_удостоверенияColumn {
                get {
                    return this.columnномер_водительского_удостоверения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn классностьColumn {
                get {
                    return this.columnклассность;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn срок_действия_мед__справкиColumn {
                get {
                    return this.columnсрок_действия_мед__справки;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Марка_и_модельColumn {
                get {
                    return this.columnМарка_и_модель;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Гос_номерColumn {
                get {
                    return this.columnГос_номер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Гаражный_номерColumn {
                get {
                    return this.columnГаражный_номер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Тип_двигателяColumn {
                get {
                    return this.columnТип_двигателя;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Год_выпускаColumn {
                get {
                    return this.columnГод_выпуска;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Инвентарный_номерColumn {
                get {
                    return this.columnИнвентарный_номер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Вид_топливаColumn {
                get {
                    return this.columnВид_топлива;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn дата_окончания_страховкиColumn {
                get {
                    return this.columnдата_окончания_страховки;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VoditeliAutoRow this[int index] {
                get {
                    return ((VoditeliAutoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VoditeliAutoRowChangeEventHandler VoditeliAutoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VoditeliAutoRowChangeEventHandler VoditeliAutoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VoditeliAutoRowChangeEventHandler VoditeliAutoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VoditeliAutoRowChangeEventHandler VoditeliAutoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddVoditeliAutoRow(VoditeliAutoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VoditeliAutoRow AddVoditeliAutoRow(string ФИО, int табельный__номер, string серия_водительского_удостоверения, int номер_водительского_удостоверения, int классность, System.DateTime срок_действия_мед__справки, string Марка_и_модель, string Гос_номер, string Гаражный_номер, string Тип_двигателя, System.DateTime Год_выпуска, string Инвентарный_номер, string Вид_топлива, System.DateTime дата_окончания_страховки) {
                VoditeliAutoRow rowVoditeliAutoRow = ((VoditeliAutoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ФИО,
                        табельный__номер,
                        серия_водительского_удостоверения,
                        номер_водительского_удостоверения,
                        классность,
                        срок_действия_мед__справки,
                        Марка_и_модель,
                        Гос_номер,
                        Гаражный_номер,
                        Тип_двигателя,
                        Год_выпуска,
                        Инвентарный_номер,
                        Вид_топлива,
                        null,
                        дата_окончания_страховки};
                rowVoditeliAutoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVoditeliAutoRow);
                return rowVoditeliAutoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                VoditeliAutoDataTable cln = ((VoditeliAutoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VoditeliAutoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnФИО = base.Columns["ФИО"];
                this.columnтабельный__номер = base.Columns["табельный  номер"];
                this.columnсерия_водительского_удостоверения = base.Columns["серия водительского удостоверения"];
                this.columnномер_водительского_удостоверения = base.Columns["номер водительского удостоверения"];
                this.columnклассность = base.Columns["классность"];
                this.columnсрок_действия_мед__справки = base.Columns["срок действия мед_ справки"];
                this.columnМарка_и_модель = base.Columns["Марка и модель"];
                this.columnГос_номер = base.Columns["Гос_номер"];
                this.columnГаражный_номер = base.Columns["Гаражный номер"];
                this.columnТип_двигателя = base.Columns["Тип двигателя"];
                this.columnГод_выпуска = base.Columns["Год выпуска"];
                this.columnИнвентарный_номер = base.Columns["Инвентарный номер"];
                this.columnВид_топлива = base.Columns["Вид топлива"];
                this.columnID = base.Columns["ID"];
                this.columnдата_окончания_страховки = base.Columns["дата окончания страховки"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnФИО = new global::System.Data.DataColumn("ФИО", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФИО);
                this.columnтабельный__номер = new global::System.Data.DataColumn("табельный  номер", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnтабельный__номер);
                this.columnсерия_водительского_удостоверения = new global::System.Data.DataColumn("серия водительского удостоверения", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnсерия_водительского_удостоверения);
                this.columnномер_водительского_удостоверения = new global::System.Data.DataColumn("номер водительского удостоверения", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnномер_водительского_удостоверения);
                this.columnклассность = new global::System.Data.DataColumn("классность", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnклассность);
                this.columnсрок_действия_мед__справки = new global::System.Data.DataColumn("срок действия мед_ справки", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnсрок_действия_мед__справки);
                this.columnМарка_и_модель = new global::System.Data.DataColumn("Марка и модель", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМарка_и_модель);
                this.columnГос_номер = new global::System.Data.DataColumn("Гос_номер", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnГос_номер);
                this.columnГаражный_номер = new global::System.Data.DataColumn("Гаражный номер", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnГаражный_номер);
                this.columnТип_двигателя = new global::System.Data.DataColumn("Тип двигателя", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТип_двигателя);
                this.columnГод_выпуска = new global::System.Data.DataColumn("Год выпуска", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnГод_выпуска);
                this.columnИнвентарный_номер = new global::System.Data.DataColumn("Инвентарный номер", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИнвентарный_номер);
                this.columnВид_топлива = new global::System.Data.DataColumn("Вид топлива", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВид_топлива);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnдата_окончания_страховки = new global::System.Data.DataColumn("дата окончания страховки", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnдата_окончания_страховки);
                this.columnФИО.AllowDBNull = false;
                this.columnФИО.MaxLength = 50;
                this.columnтабельный__номер.AllowDBNull = false;
                this.columnсерия_водительского_удостоверения.AllowDBNull = false;
                this.columnсерия_водительского_удостоверения.MaxLength = 50;
                this.columnномер_водительского_удостоверения.AllowDBNull = false;
                this.columnклассность.AllowDBNull = false;
                this.columnсрок_действия_мед__справки.AllowDBNull = false;
                this.columnсрок_действия_мед__справки.Caption = "срок действия мед. справки";
                this.columnМарка_и_модель.AllowDBNull = false;
                this.columnМарка_и_модель.MaxLength = 50;
                this.columnГос_номер.AllowDBNull = false;
                this.columnГос_номер.Caption = "Гос.номер";
                this.columnГос_номер.MaxLength = 50;
                this.columnГаражный_номер.AllowDBNull = false;
                this.columnГаражный_номер.MaxLength = 50;
                this.columnТип_двигателя.AllowDBNull = false;
                this.columnТип_двигателя.MaxLength = 50;
                this.columnГод_выпуска.AllowDBNull = false;
                this.columnИнвентарный_номер.AllowDBNull = false;
                this.columnИнвентарный_номер.MaxLength = 50;
                this.columnВид_топлива.AllowDBNull = false;
                this.columnВид_топлива.MaxLength = 50;
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnдата_окончания_страховки.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VoditeliAutoRow NewVoditeliAutoRow() {
                return ((VoditeliAutoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VoditeliAutoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(VoditeliAutoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VoditeliAutoRowChanged != null)) {
                    this.VoditeliAutoRowChanged(this, new VoditeliAutoRowChangeEvent(((VoditeliAutoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VoditeliAutoRowChanging != null)) {
                    this.VoditeliAutoRowChanging(this, new VoditeliAutoRowChangeEvent(((VoditeliAutoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VoditeliAutoRowDeleted != null)) {
                    this.VoditeliAutoRowDeleted(this, new VoditeliAutoRowChangeEvent(((VoditeliAutoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VoditeliAutoRowDeleting != null)) {
                    this.VoditeliAutoRowDeleting(this, new VoditeliAutoRowChangeEvent(((VoditeliAutoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveVoditeliAutoRow(VoditeliAutoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutoparkDB ds = new AutoparkDB();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VoditeliAutoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Путевые_листы_легковыеDataTable : global::System.Data.TypedTableBase<Путевые_листы_легковыеRow> {
            
            private global::System.Data.DataColumn columnID_Путевого_листа;
            
            private global::System.Data.DataColumn columnНомер_путевого_листа;
            
            private global::System.Data.DataColumn columnЗа_период_с;
            
            private global::System.Data.DataColumn columnЗа_период_по;
            
            private global::System.Data.DataColumn columnтабельный__номер;
            
            private global::System.Data.DataColumn columnФИО;
            
            private global::System.Data.DataColumn columnМарка_и_модель;
            
            private global::System.Data.DataColumn columnГос_номер;
            
            private global::System.Data.DataColumn columnВодительское_удостоверение;
            
            private global::System.Data.DataColumn columnГаражный_номер;
            
            private global::System.Data.DataColumn columnID_Автомобиль;
            
            private global::System.Data.DataColumn columnID_Водитель;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевые_листы_легковыеDataTable() {
                this.TableName = "Путевые листы легковые";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Путевые_листы_легковыеDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Путевые_листы_легковыеDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_Путевого_листаColumn {
                get {
                    return this.columnID_Путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Номер_путевого_листаColumn {
                get {
                    return this.columnНомер_путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn За_период_сColumn {
                get {
                    return this.columnЗа_период_с;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn За_период_поColumn {
                get {
                    return this.columnЗа_период_по;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn табельный__номерColumn {
                get {
                    return this.columnтабельный__номер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ФИОColumn {
                get {
                    return this.columnФИО;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Марка_и_модельColumn {
                get {
                    return this.columnМарка_и_модель;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Гос_номерColumn {
                get {
                    return this.columnГос_номер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Водительское_удостоверениеColumn {
                get {
                    return this.columnВодительское_удостоверение;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Гаражный_номерColumn {
                get {
                    return this.columnГаражный_номер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_АвтомобильColumn {
                get {
                    return this.columnID_Автомобиль;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_ВодительColumn {
                get {
                    return this.columnID_Водитель;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевые_листы_легковыеRow this[int index] {
                get {
                    return ((Путевые_листы_легковыеRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Путевые_листы_легковыеRowChangeEventHandler Путевые_листы_легковыеRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Путевые_листы_легковыеRowChangeEventHandler Путевые_листы_легковыеRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Путевые_листы_легковыеRowChangeEventHandler Путевые_листы_легковыеRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Путевые_листы_легковыеRowChangeEventHandler Путевые_листы_легковыеRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddПутевые_листы_легковыеRow(Путевые_листы_легковыеRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевые_листы_легковыеRow AddПутевые_листы_легковыеRow(int Номер_путевого_листа, System.DateTime За_период_с, System.DateTime За_период_по, Личный_составRow parentЛичный_составRowByFK_Путевой_лист_Грузового_авто_личный_состав1, string ФИО, string Марка_и_модель, string Гос_номер, string Водительское_удостоверение, string Гаражный_номер, int ID_Автомобиль, int ID_Водитель) {
                Путевые_листы_легковыеRow rowПутевые_листы_легковыеRow = ((Путевые_листы_легковыеRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Номер_путевого_листа,
                        За_период_с,
                        За_период_по,
                        null,
                        ФИО,
                        Марка_и_модель,
                        Гос_номер,
                        Водительское_удостоверение,
                        Гаражный_номер,
                        ID_Автомобиль,
                        ID_Водитель};
                if ((parentЛичный_составRowByFK_Путевой_лист_Грузового_авто_личный_состав1 != null)) {
                    columnValuesArray[4] = parentЛичный_составRowByFK_Путевой_лист_Грузового_авто_личный_состав1[0];
                }
                rowПутевые_листы_легковыеRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowПутевые_листы_легковыеRow);
                return rowПутевые_листы_легковыеRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевые_листы_легковыеRow FindByID_Путевого_листа(int ID_Путевого_листа) {
                return ((Путевые_листы_легковыеRow)(this.Rows.Find(new object[] {
                            ID_Путевого_листа})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Путевые_листы_легковыеDataTable cln = ((Путевые_листы_легковыеDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Путевые_листы_легковыеDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID_Путевого_листа = base.Columns["ID_Путевого листа"];
                this.columnНомер_путевого_листа = base.Columns["Номер путевого листа"];
                this.columnЗа_период_с = base.Columns["За период с"];
                this.columnЗа_период_по = base.Columns["За период по"];
                this.columnтабельный__номер = base.Columns["табельный  номер"];
                this.columnФИО = base.Columns["ФИО"];
                this.columnМарка_и_модель = base.Columns["Марка и модель"];
                this.columnГос_номер = base.Columns["Гос_номер"];
                this.columnВодительское_удостоверение = base.Columns["Водительское удостоверение"];
                this.columnГаражный_номер = base.Columns["Гаражный номер"];
                this.columnID_Автомобиль = base.Columns["ID_Автомобиль"];
                this.columnID_Водитель = base.Columns["ID_Водитель"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID_Путевого_листа = new global::System.Data.DataColumn("ID_Путевого листа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Путевого_листа);
                this.columnНомер_путевого_листа = new global::System.Data.DataColumn("Номер путевого листа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНомер_путевого_листа);
                this.columnЗа_период_с = new global::System.Data.DataColumn("За период с", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗа_период_с);
                this.columnЗа_период_по = new global::System.Data.DataColumn("За период по", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗа_период_по);
                this.columnтабельный__номер = new global::System.Data.DataColumn("табельный  номер", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnтабельный__номер);
                this.columnФИО = new global::System.Data.DataColumn("ФИО", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФИО);
                this.columnМарка_и_модель = new global::System.Data.DataColumn("Марка и модель", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМарка_и_модель);
                this.columnГос_номер = new global::System.Data.DataColumn("Гос_номер", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnГос_номер);
                this.columnВодительское_удостоверение = new global::System.Data.DataColumn("Водительское удостоверение", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВодительское_удостоверение);
                this.columnГаражный_номер = new global::System.Data.DataColumn("Гаражный номер", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnГаражный_номер);
                this.columnID_Автомобиль = new global::System.Data.DataColumn("ID_Автомобиль", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Автомобиль);
                this.columnID_Водитель = new global::System.Data.DataColumn("ID_Водитель", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Водитель);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Путевого_листа}, true));
                this.columnID_Путевого_листа.AutoIncrement = true;
                this.columnID_Путевого_листа.AutoIncrementSeed = -1;
                this.columnID_Путевого_листа.AutoIncrementStep = -1;
                this.columnID_Путевого_листа.AllowDBNull = false;
                this.columnID_Путевого_листа.ReadOnly = true;
                this.columnID_Путевого_листа.Unique = true;
                this.columnтабельный__номер.AllowDBNull = false;
                this.columnФИО.MaxLength = 50;
                this.columnМарка_и_модель.AllowDBNull = false;
                this.columnМарка_и_модель.MaxLength = 50;
                this.columnГос_номер.AllowDBNull = false;
                this.columnГос_номер.Caption = "Гос.номер";
                this.columnГос_номер.MaxLength = 50;
                this.columnГаражный_номер.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевые_листы_легковыеRow NewПутевые_листы_легковыеRow() {
                return ((Путевые_листы_легковыеRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Путевые_листы_легковыеRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Путевые_листы_легковыеRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Путевые_листы_легковыеRowChanged != null)) {
                    this.Путевые_листы_легковыеRowChanged(this, new Путевые_листы_легковыеRowChangeEvent(((Путевые_листы_легковыеRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Путевые_листы_легковыеRowChanging != null)) {
                    this.Путевые_листы_легковыеRowChanging(this, new Путевые_листы_легковыеRowChangeEvent(((Путевые_листы_легковыеRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Путевые_листы_легковыеRowDeleted != null)) {
                    this.Путевые_листы_легковыеRowDeleted(this, new Путевые_листы_легковыеRowChangeEvent(((Путевые_листы_легковыеRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Путевые_листы_легковыеRowDeleting != null)) {
                    this.Путевые_листы_легковыеRowDeleting(this, new Путевые_листы_легковыеRowChangeEvent(((Путевые_листы_легковыеRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveПутевые_листы_легковыеRow(Путевые_листы_легковыеRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutoparkDB ds = new AutoparkDB();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Путевые_листы_легковыеDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Путевые_листы_грузовыеDataTable : global::System.Data.TypedTableBase<Путевые_листы_грузовыеRow> {
            
            private global::System.Data.DataColumn columnID_Путевого_листа;
            
            private global::System.Data.DataColumn columnНомер_путевого_листа;
            
            private global::System.Data.DataColumn columnДата_путевого_листа;
            
            private global::System.Data.DataColumn columnтабельный__номер;
            
            private global::System.Data.DataColumn columnФИО;
            
            private global::System.Data.DataColumn columnМарка_и_модель;
            
            private global::System.Data.DataColumn columnГаражный_номер;
            
            private global::System.Data.DataColumn columnГос_номер;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевые_листы_грузовыеDataTable() {
                this.TableName = "Путевые листы грузовые";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Путевые_листы_грузовыеDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Путевые_листы_грузовыеDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_Путевого_листаColumn {
                get {
                    return this.columnID_Путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Номер_путевого_листаColumn {
                get {
                    return this.columnНомер_путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Дата_путевого_листаColumn {
                get {
                    return this.columnДата_путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn табельный__номерColumn {
                get {
                    return this.columnтабельный__номер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ФИОColumn {
                get {
                    return this.columnФИО;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Марка_и_модельColumn {
                get {
                    return this.columnМарка_и_модель;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Гаражный_номерColumn {
                get {
                    return this.columnГаражный_номер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Гос_номерColumn {
                get {
                    return this.columnГос_номер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевые_листы_грузовыеRow this[int index] {
                get {
                    return ((Путевые_листы_грузовыеRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Путевые_листы_грузовыеRowChangeEventHandler Путевые_листы_грузовыеRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Путевые_листы_грузовыеRowChangeEventHandler Путевые_листы_грузовыеRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Путевые_листы_грузовыеRowChangeEventHandler Путевые_листы_грузовыеRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Путевые_листы_грузовыеRowChangeEventHandler Путевые_листы_грузовыеRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddПутевые_листы_грузовыеRow(Путевые_листы_грузовыеRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевые_листы_грузовыеRow AddПутевые_листы_грузовыеRow(int Номер_путевого_листа, System.DateTime Дата_путевого_листа, Личный_составRow parentЛичный_составRowByFK_Путевой_лист_Грузового_авто_личный_состав, string ФИО, string Марка_и_модель, string Гаражный_номер, string Гос_номер) {
                Путевые_листы_грузовыеRow rowПутевые_листы_грузовыеRow = ((Путевые_листы_грузовыеRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Номер_путевого_листа,
                        Дата_путевого_листа,
                        null,
                        ФИО,
                        Марка_и_модель,
                        Гаражный_номер,
                        Гос_номер};
                if ((parentЛичный_составRowByFK_Путевой_лист_Грузового_авто_личный_состав != null)) {
                    columnValuesArray[3] = parentЛичный_составRowByFK_Путевой_лист_Грузового_авто_личный_состав[0];
                }
                rowПутевые_листы_грузовыеRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowПутевые_листы_грузовыеRow);
                return rowПутевые_листы_грузовыеRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Путевые_листы_грузовыеDataTable cln = ((Путевые_листы_грузовыеDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Путевые_листы_грузовыеDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID_Путевого_листа = base.Columns["ID_Путевого листа"];
                this.columnНомер_путевого_листа = base.Columns["Номер путевого листа"];
                this.columnДата_путевого_листа = base.Columns["Дата путевого листа"];
                this.columnтабельный__номер = base.Columns["табельный  номер"];
                this.columnФИО = base.Columns["ФИО"];
                this.columnМарка_и_модель = base.Columns["Марка и модель"];
                this.columnГаражный_номер = base.Columns["Гаражный номер"];
                this.columnГос_номер = base.Columns["Гос_номер"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID_Путевого_листа = new global::System.Data.DataColumn("ID_Путевого листа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Путевого_листа);
                this.columnНомер_путевого_листа = new global::System.Data.DataColumn("Номер путевого листа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНомер_путевого_листа);
                this.columnДата_путевого_листа = new global::System.Data.DataColumn("Дата путевого листа", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_путевого_листа);
                this.columnтабельный__номер = new global::System.Data.DataColumn("табельный  номер", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnтабельный__номер);
                this.columnФИО = new global::System.Data.DataColumn("ФИО", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФИО);
                this.columnМарка_и_модель = new global::System.Data.DataColumn("Марка и модель", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМарка_и_модель);
                this.columnГаражный_номер = new global::System.Data.DataColumn("Гаражный номер", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnГаражный_номер);
                this.columnГос_номер = new global::System.Data.DataColumn("Гос_номер", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnГос_номер);
                this.columnID_Путевого_листа.AutoIncrement = true;
                this.columnID_Путевого_листа.AutoIncrementSeed = -1;
                this.columnID_Путевого_листа.AutoIncrementStep = -1;
                this.columnID_Путевого_листа.AllowDBNull = false;
                this.columnID_Путевого_листа.ReadOnly = true;
                this.columnНомер_путевого_листа.AllowDBNull = false;
                this.columnДата_путевого_листа.AllowDBNull = false;
                this.columnтабельный__номер.AllowDBNull = false;
                this.columnФИО.MaxLength = 50;
                this.columnМарка_и_модель.AllowDBNull = false;
                this.columnМарка_и_модель.MaxLength = 50;
                this.columnГаражный_номер.MaxLength = 50;
                this.columnГос_номер.AllowDBNull = false;
                this.columnГос_номер.Caption = "Гос.номер";
                this.columnГос_номер.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевые_листы_грузовыеRow NewПутевые_листы_грузовыеRow() {
                return ((Путевые_листы_грузовыеRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Путевые_листы_грузовыеRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Путевые_листы_грузовыеRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Путевые_листы_грузовыеRowChanged != null)) {
                    this.Путевые_листы_грузовыеRowChanged(this, new Путевые_листы_грузовыеRowChangeEvent(((Путевые_листы_грузовыеRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Путевые_листы_грузовыеRowChanging != null)) {
                    this.Путевые_листы_грузовыеRowChanging(this, new Путевые_листы_грузовыеRowChangeEvent(((Путевые_листы_грузовыеRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Путевые_листы_грузовыеRowDeleted != null)) {
                    this.Путевые_листы_грузовыеRowDeleted(this, new Путевые_листы_грузовыеRowChangeEvent(((Путевые_листы_грузовыеRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Путевые_листы_грузовыеRowDeleting != null)) {
                    this.Путевые_листы_грузовыеRowDeleting(this, new Путевые_листы_грузовыеRowChangeEvent(((Путевые_листы_грузовыеRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveПутевые_листы_грузовыеRow(Путевые_листы_грузовыеRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutoparkDB ds = new AutoparkDB();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Путевые_листы_грузовыеDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Путевой_лист_Грузового_автоDataTable : global::System.Data.TypedTableBase<Путевой_лист_Грузового_автоRow> {
            
            private global::System.Data.DataColumn columnID_Путевого_листа;
            
            private global::System.Data.DataColumn columnНомер_путевого_листа;
            
            private global::System.Data.DataColumn columnДата_путевого_листа;
            
            private global::System.Data.DataColumn columnID_Водителя;
            
            private global::System.Data.DataColumn columnID_Автомобиля;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоDataTable() {
                this.TableName = "Путевой лист Грузового авто";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Путевой_лист_Грузового_автоDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Путевой_лист_Грузового_автоDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_Путевого_листаColumn {
                get {
                    return this.columnID_Путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Номер_путевого_листаColumn {
                get {
                    return this.columnНомер_путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Дата_путевого_листаColumn {
                get {
                    return this.columnДата_путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_ВодителяColumn {
                get {
                    return this.columnID_Водителя;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_АвтомобиляColumn {
                get {
                    return this.columnID_Автомобиля;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоRow this[int index] {
                get {
                    return ((Путевой_лист_Грузового_автоRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Путевой_лист_Грузового_автоRowChangeEventHandler Путевой_лист_Грузового_автоRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Путевой_лист_Грузового_автоRowChangeEventHandler Путевой_лист_Грузового_автоRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Путевой_лист_Грузового_автоRowChangeEventHandler Путевой_лист_Грузового_автоRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Путевой_лист_Грузового_автоRowChangeEventHandler Путевой_лист_Грузового_автоRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddПутевой_лист_Грузового_автоRow(Путевой_лист_Грузового_автоRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоRow AddПутевой_лист_Грузового_автоRow(int Номер_путевого_листа, System.DateTime Дата_путевого_листа, Личный_составRow parentЛичный_составRowByFK_Путевой_лист_Грузового_авто_личный_состав2, Подвижной_составRow parentПодвижной_составRowByFK_Путевой_лист_Грузового_авто_Подвижной_состав) {
                Путевой_лист_Грузового_автоRow rowПутевой_лист_Грузового_автоRow = ((Путевой_лист_Грузового_автоRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Номер_путевого_листа,
                        Дата_путевого_листа,
                        null,
                        null};
                if ((parentЛичный_составRowByFK_Путевой_лист_Грузового_авто_личный_состав2 != null)) {
                    columnValuesArray[3] = parentЛичный_составRowByFK_Путевой_лист_Грузового_авто_личный_состав2[0];
                }
                if ((parentПодвижной_составRowByFK_Путевой_лист_Грузового_авто_Подвижной_состав != null)) {
                    columnValuesArray[4] = parentПодвижной_составRowByFK_Путевой_лист_Грузового_авто_Подвижной_состав[0];
                }
                rowПутевой_лист_Грузового_автоRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowПутевой_лист_Грузового_автоRow);
                return rowПутевой_лист_Грузового_автоRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоRow FindByID_Путевого_листа(int ID_Путевого_листа) {
                return ((Путевой_лист_Грузового_автоRow)(this.Rows.Find(new object[] {
                            ID_Путевого_листа})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Путевой_лист_Грузового_автоDataTable cln = ((Путевой_лист_Грузового_автоDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Путевой_лист_Грузового_автоDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID_Путевого_листа = base.Columns["ID_Путевого листа"];
                this.columnНомер_путевого_листа = base.Columns["Номер путевого листа"];
                this.columnДата_путевого_листа = base.Columns["Дата путевого листа"];
                this.columnID_Водителя = base.Columns["ID_Водителя"];
                this.columnID_Автомобиля = base.Columns["ID_Автомобиля"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID_Путевого_листа = new global::System.Data.DataColumn("ID_Путевого листа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Путевого_листа);
                this.columnНомер_путевого_листа = new global::System.Data.DataColumn("Номер путевого листа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНомер_путевого_листа);
                this.columnДата_путевого_листа = new global::System.Data.DataColumn("Дата путевого листа", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_путевого_листа);
                this.columnID_Водителя = new global::System.Data.DataColumn("ID_Водителя", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Водителя);
                this.columnID_Автомобиля = new global::System.Data.DataColumn("ID_Автомобиля", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Автомобиля);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Путевого_листа}, true));
                this.columnID_Путевого_листа.AutoIncrement = true;
                this.columnID_Путевого_листа.AutoIncrementSeed = -1;
                this.columnID_Путевого_листа.AutoIncrementStep = -1;
                this.columnID_Путевого_листа.AllowDBNull = false;
                this.columnID_Путевого_листа.ReadOnly = true;
                this.columnID_Путевого_листа.Unique = true;
                this.columnНомер_путевого_листа.AllowDBNull = false;
                this.columnДата_путевого_листа.AllowDBNull = false;
                this.columnID_Водителя.AllowDBNull = false;
                this.columnID_Автомобиля.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоRow NewПутевой_лист_Грузового_автоRow() {
                return ((Путевой_лист_Грузового_автоRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Путевой_лист_Грузового_автоRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Путевой_лист_Грузового_автоRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Путевой_лист_Грузового_автоRowChanged != null)) {
                    this.Путевой_лист_Грузового_автоRowChanged(this, new Путевой_лист_Грузового_автоRowChangeEvent(((Путевой_лист_Грузового_автоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Путевой_лист_Грузового_автоRowChanging != null)) {
                    this.Путевой_лист_Грузового_автоRowChanging(this, new Путевой_лист_Грузового_автоRowChangeEvent(((Путевой_лист_Грузового_автоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Путевой_лист_Грузового_автоRowDeleted != null)) {
                    this.Путевой_лист_Грузового_автоRowDeleted(this, new Путевой_лист_Грузового_автоRowChangeEvent(((Путевой_лист_Грузового_автоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Путевой_лист_Грузового_автоRowDeleting != null)) {
                    this.Путевой_лист_Грузового_автоRowDeleting(this, new Путевой_лист_Грузового_автоRowChangeEvent(((Путевой_лист_Грузового_автоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveПутевой_лист_Грузового_автоRow(Путевой_лист_Грузового_автоRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutoparkDB ds = new AutoparkDB();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Путевой_лист_Грузового_автоDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PutevoiListLegkTableDataTable : global::System.Data.TypedTableBase<PutevoiListLegkTableRow> {
            
            private global::System.Data.DataColumn columnID_Путевого_листа;
            
            private global::System.Data.DataColumn columnНомер_путевого_листа;
            
            private global::System.Data.DataColumn columnЗа_период_с;
            
            private global::System.Data.DataColumn columnЗа_период_по;
            
            private global::System.Data.DataColumn columnID_Автомобиль;
            
            private global::System.Data.DataColumn columnID_Водитель;
            
            private global::System.Data.DataColumn columnID_Отдела;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PutevoiListLegkTableDataTable() {
                this.TableName = "PutevoiListLegkTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PutevoiListLegkTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PutevoiListLegkTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_Путевого_листаColumn {
                get {
                    return this.columnID_Путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Номер_путевого_листаColumn {
                get {
                    return this.columnНомер_путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn За_период_сColumn {
                get {
                    return this.columnЗа_период_с;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn За_период_поColumn {
                get {
                    return this.columnЗа_период_по;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_АвтомобильColumn {
                get {
                    return this.columnID_Автомобиль;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_ВодительColumn {
                get {
                    return this.columnID_Водитель;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_ОтделаColumn {
                get {
                    return this.columnID_Отдела;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PutevoiListLegkTableRow this[int index] {
                get {
                    return ((PutevoiListLegkTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PutevoiListLegkTableRowChangeEventHandler PutevoiListLegkTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PutevoiListLegkTableRowChangeEventHandler PutevoiListLegkTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PutevoiListLegkTableRowChangeEventHandler PutevoiListLegkTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PutevoiListLegkTableRowChangeEventHandler PutevoiListLegkTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPutevoiListLegkTableRow(PutevoiListLegkTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PutevoiListLegkTableRow AddPutevoiListLegkTableRow(int Номер_путевого_листа, System.DateTime За_период_с, System.DateTime За_период_по, Подвижной_составRow parentПодвижной_составRowByFK_Путевой_лист_легкового_автомобиля_Подвижной_состав1, Личный_составRow parentЛичный_составRowByFK_Путевой_лист_легкового_автомобиля_личный_состав4, ОтделыRow parentОтделыRowByFK_Путевой_лист_легкового_id_отдела) {
                PutevoiListLegkTableRow rowPutevoiListLegkTableRow = ((PutevoiListLegkTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Номер_путевого_листа,
                        За_период_с,
                        За_период_по,
                        null,
                        null,
                        null};
                if ((parentПодвижной_составRowByFK_Путевой_лист_легкового_автомобиля_Подвижной_состав1 != null)) {
                    columnValuesArray[4] = parentПодвижной_составRowByFK_Путевой_лист_легкового_автомобиля_Подвижной_состав1[0];
                }
                if ((parentЛичный_составRowByFK_Путевой_лист_легкового_автомобиля_личный_состав4 != null)) {
                    columnValuesArray[5] = parentЛичный_составRowByFK_Путевой_лист_легкового_автомобиля_личный_состав4[0];
                }
                if ((parentОтделыRowByFK_Путевой_лист_легкового_id_отдела != null)) {
                    columnValuesArray[6] = parentОтделыRowByFK_Путевой_лист_легкового_id_отдела[0];
                }
                rowPutevoiListLegkTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPutevoiListLegkTableRow);
                return rowPutevoiListLegkTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PutevoiListLegkTableRow FindByID_Путевого_листа(int ID_Путевого_листа) {
                return ((PutevoiListLegkTableRow)(this.Rows.Find(new object[] {
                            ID_Путевого_листа})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PutevoiListLegkTableDataTable cln = ((PutevoiListLegkTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PutevoiListLegkTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID_Путевого_листа = base.Columns["ID_Путевого листа"];
                this.columnНомер_путевого_листа = base.Columns["Номер путевого листа"];
                this.columnЗа_период_с = base.Columns["За период с"];
                this.columnЗа_период_по = base.Columns["За период по"];
                this.columnID_Автомобиль = base.Columns["ID_Автомобиль"];
                this.columnID_Водитель = base.Columns["ID_Водитель"];
                this.columnID_Отдела = base.Columns["ID_Отдела"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID_Путевого_листа = new global::System.Data.DataColumn("ID_Путевого листа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Путевого_листа);
                this.columnНомер_путевого_листа = new global::System.Data.DataColumn("Номер путевого листа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНомер_путевого_листа);
                this.columnЗа_период_с = new global::System.Data.DataColumn("За период с", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗа_период_с);
                this.columnЗа_период_по = new global::System.Data.DataColumn("За период по", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗа_период_по);
                this.columnID_Автомобиль = new global::System.Data.DataColumn("ID_Автомобиль", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Автомобиль);
                this.columnID_Водитель = new global::System.Data.DataColumn("ID_Водитель", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Водитель);
                this.columnID_Отдела = new global::System.Data.DataColumn("ID_Отдела", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Отдела);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Путевого_листа}, true));
                this.columnID_Путевого_листа.AutoIncrement = true;
                this.columnID_Путевого_листа.AutoIncrementSeed = -1;
                this.columnID_Путевого_листа.AutoIncrementStep = -1;
                this.columnID_Путевого_листа.AllowDBNull = false;
                this.columnID_Путевого_листа.ReadOnly = true;
                this.columnID_Путевого_листа.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PutevoiListLegkTableRow NewPutevoiListLegkTableRow() {
                return ((PutevoiListLegkTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PutevoiListLegkTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PutevoiListLegkTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PutevoiListLegkTableRowChanged != null)) {
                    this.PutevoiListLegkTableRowChanged(this, new PutevoiListLegkTableRowChangeEvent(((PutevoiListLegkTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PutevoiListLegkTableRowChanging != null)) {
                    this.PutevoiListLegkTableRowChanging(this, new PutevoiListLegkTableRowChangeEvent(((PutevoiListLegkTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PutevoiListLegkTableRowDeleted != null)) {
                    this.PutevoiListLegkTableRowDeleted(this, new PutevoiListLegkTableRowChangeEvent(((PutevoiListLegkTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PutevoiListLegkTableRowDeleting != null)) {
                    this.PutevoiListLegkTableRowDeleting(this, new PutevoiListLegkTableRowChangeEvent(((PutevoiListLegkTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePutevoiListLegkTableRow(PutevoiListLegkTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutoparkDB ds = new AutoparkDB();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PutevoiListLegkTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Данные_Путевой_лист_легкового_автоDataTable : global::System.Data.TypedTableBase<Данные_Путевой_лист_легкового_автоRow> {
            
            private global::System.Data.DataColumn columnid_Данных;
            
            private global::System.Data.DataColumn columnID_Путевого_листа;
            
            private global::System.Data.DataColumn columnЧисло;
            
            private global::System.Data.DataColumn columnВремя_выезда;
            
            private global::System.Data.DataColumn columnВремя_возвращения;
            
            private global::System.Data.DataColumn columnВремя_в_наряде;
            
            private global::System.Data.DataColumn columnПоказания_спидометра_при_выезде;
            
            private global::System.Data.DataColumn columnПоказания_спидометра_при_возвращении;
            
            private global::System.Data.DataColumn columnПробег_км;
            
            private global::System.Data.DataColumn columnОстаток_топлива_при_выезде;
            
            private global::System.Data.DataColumn columnОстаток_топлива_при_возвращении;
            
            private global::System.Data.DataColumn columnЗаправлено_топлива_л;
            
            private global::System.Data.DataColumn _columnДата_и___чека_АЗС;
            
            private global::System.Data.DataColumn columnРасход_топлива_по_норме;
            
            private global::System.Data.DataColumn columnРасход_топлива_фактически;
            
            private global::System.Data.DataColumn columnРасход_топлива_экономия_перерасход;
            
            private global::System.Data.DataColumn columnМаршрут_перевозки_откуда;
            
            private global::System.Data.DataColumn columnМаршрут_перевозки_куда;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Данные_Путевой_лист_легкового_автоDataTable() {
                this.TableName = "Данные Путевой лист легкового авто";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Данные_Путевой_лист_легкового_автоDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Данные_Путевой_лист_легкового_автоDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn id_ДанныхColumn {
                get {
                    return this.columnid_Данных;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_Путевого_листаColumn {
                get {
                    return this.columnID_Путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ЧислоColumn {
                get {
                    return this.columnЧисло;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Время_выездаColumn {
                get {
                    return this.columnВремя_выезда;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Время_возвращенияColumn {
                get {
                    return this.columnВремя_возвращения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Время_в_нарядеColumn {
                get {
                    return this.columnВремя_в_наряде;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Показания_спидометра_при_выездеColumn {
                get {
                    return this.columnПоказания_спидометра_при_выезде;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Показания_спидометра_при_возвращенииColumn {
                get {
                    return this.columnПоказания_спидометра_при_возвращении;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Пробег_кмColumn {
                get {
                    return this.columnПробег_км;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Остаток_топлива_при_выездеColumn {
                get {
                    return this.columnОстаток_топлива_при_выезде;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Остаток_топлива_при_возвращенииColumn {
                get {
                    return this.columnОстаток_топлива_при_возвращении;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Заправлено_топлива_лColumn {
                get {
                    return this.columnЗаправлено_топлива_л;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _Дата_и___чека_АЗСColumn {
                get {
                    return this._columnДата_и___чека_АЗС;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Расход_топлива_по_нормеColumn {
                get {
                    return this.columnРасход_топлива_по_норме;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Расход_топлива_фактическиColumn {
                get {
                    return this.columnРасход_топлива_фактически;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Расход_топлива_экономия_перерасходColumn {
                get {
                    return this.columnРасход_топлива_экономия_перерасход;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Маршрут_перевозки_откудаColumn {
                get {
                    return this.columnМаршрут_перевозки_откуда;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Маршрут_перевозки_кудаColumn {
                get {
                    return this.columnМаршрут_перевозки_куда;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Данные_Путевой_лист_легкового_автоRow this[int index] {
                get {
                    return ((Данные_Путевой_лист_легкового_автоRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Данные_Путевой_лист_легкового_автоRowChangeEventHandler Данные_Путевой_лист_легкового_автоRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Данные_Путевой_лист_легкового_автоRowChangeEventHandler Данные_Путевой_лист_легкового_автоRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Данные_Путевой_лист_легкового_автоRowChangeEventHandler Данные_Путевой_лист_легкового_автоRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Данные_Путевой_лист_легкового_автоRowChangeEventHandler Данные_Путевой_лист_легкового_автоRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddДанные_Путевой_лист_легкового_автоRow(Данные_Путевой_лист_легкового_автоRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Данные_Путевой_лист_легкового_автоRow AddДанные_Путевой_лист_легкового_автоRow(
                        PutevoiListLegkTableRow parentPutevoiListLegkTableRowByFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_легкового_автомобиля1, 
                        System.DateTime Число, 
                        System.TimeSpan Время_выезда, 
                        System.TimeSpan Время_возвращения, 
                        System.TimeSpan Время_в_наряде, 
                        int Показания_спидометра_при_выезде, 
                        int Показания_спидометра_при_возвращении, 
                        int Пробег_км, 
                        double Остаток_топлива_при_выезде, 
                        double Остаток_топлива_при_возвращении, 
                        double Заправлено_топлива_л, 
                        string _Дата_и___чека_АЗС, 
                        double Расход_топлива_по_норме, 
                        double Расход_топлива_фактически, 
                        double Расход_топлива_экономия_перерасход, 
                        string Маршрут_перевозки_откуда, 
                        string Маршрут_перевозки_куда) {
                Данные_Путевой_лист_легкового_автоRow rowДанные_Путевой_лист_легкового_автоRow = ((Данные_Путевой_лист_легкового_автоRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Число,
                        Время_выезда,
                        Время_возвращения,
                        Время_в_наряде,
                        Показания_спидометра_при_выезде,
                        Показания_спидометра_при_возвращении,
                        Пробег_км,
                        Остаток_топлива_при_выезде,
                        Остаток_топлива_при_возвращении,
                        Заправлено_топлива_л,
                        _Дата_и___чека_АЗС,
                        Расход_топлива_по_норме,
                        Расход_топлива_фактически,
                        Расход_топлива_экономия_перерасход,
                        Маршрут_перевозки_откуда,
                        Маршрут_перевозки_куда};
                if ((parentPutevoiListLegkTableRowByFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_легкового_автомобиля1 != null)) {
                    columnValuesArray[1] = parentPutevoiListLegkTableRowByFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_легкового_автомобиля1[0];
                }
                rowДанные_Путевой_лист_легкового_автоRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowДанные_Путевой_лист_легкового_автоRow);
                return rowДанные_Путевой_лист_легкового_автоRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Данные_Путевой_лист_легкового_автоRow FindByid_Данных(int id_Данных) {
                return ((Данные_Путевой_лист_легкового_автоRow)(this.Rows.Find(new object[] {
                            id_Данных})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Данные_Путевой_лист_легкового_автоDataTable cln = ((Данные_Путевой_лист_легкового_автоDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Данные_Путевой_лист_легкового_автоDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid_Данных = base.Columns["id_Данных"];
                this.columnID_Путевого_листа = base.Columns["ID_Путевого листа"];
                this.columnЧисло = base.Columns["Число"];
                this.columnВремя_выезда = base.Columns["Время выезда"];
                this.columnВремя_возвращения = base.Columns["Время возвращения"];
                this.columnВремя_в_наряде = base.Columns["Время в наряде"];
                this.columnПоказания_спидометра_при_выезде = base.Columns["Показания спидометра при выезде"];
                this.columnПоказания_спидометра_при_возвращении = base.Columns["Показания спидометра при возвращении"];
                this.columnПробег_км = base.Columns["Пробег км"];
                this.columnОстаток_топлива_при_выезде = base.Columns["Остаток топлива при выезде"];
                this.columnОстаток_топлива_при_возвращении = base.Columns["Остаток топлива при возвращении"];
                this.columnЗаправлено_топлива_л = base.Columns["Заправлено топлива л"];
                this._columnДата_и___чека_АЗС = base.Columns["Дата и № чека АЗС"];
                this.columnРасход_топлива_по_норме = base.Columns["Расход топлива по норме"];
                this.columnРасход_топлива_фактически = base.Columns["Расход топлива фактически"];
                this.columnРасход_топлива_экономия_перерасход = base.Columns["Расход топлива экономия перерасход"];
                this.columnМаршрут_перевозки_откуда = base.Columns["Маршрут перевозки откуда"];
                this.columnМаршрут_перевозки_куда = base.Columns["Маршрут перевозки куда"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid_Данных = new global::System.Data.DataColumn("id_Данных", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_Данных);
                this.columnID_Путевого_листа = new global::System.Data.DataColumn("ID_Путевого листа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Путевого_листа);
                this.columnЧисло = new global::System.Data.DataColumn("Число", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЧисло);
                this.columnВремя_выезда = new global::System.Data.DataColumn("Время выезда", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВремя_выезда);
                this.columnВремя_возвращения = new global::System.Data.DataColumn("Время возвращения", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВремя_возвращения);
                this.columnВремя_в_наряде = new global::System.Data.DataColumn("Время в наряде", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВремя_в_наряде);
                this.columnПоказания_спидометра_при_выезде = new global::System.Data.DataColumn("Показания спидометра при выезде", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПоказания_спидометра_при_выезде);
                this.columnПоказания_спидометра_при_возвращении = new global::System.Data.DataColumn("Показания спидометра при возвращении", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПоказания_спидометра_при_возвращении);
                this.columnПробег_км = new global::System.Data.DataColumn("Пробег км", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПробег_км);
                this.columnОстаток_топлива_при_выезде = new global::System.Data.DataColumn("Остаток топлива при выезде", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОстаток_топлива_при_выезде);
                this.columnОстаток_топлива_при_возвращении = new global::System.Data.DataColumn("Остаток топлива при возвращении", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОстаток_топлива_при_возвращении);
                this.columnЗаправлено_топлива_л = new global::System.Data.DataColumn("Заправлено топлива л", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗаправлено_топлива_л);
                this._columnДата_и___чека_АЗС = new global::System.Data.DataColumn("Дата и № чека АЗС", typeof(string), null, global::System.Data.MappingType.Element);
                this._columnДата_и___чека_АЗС.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnДата_и___чека_АЗС");
                this._columnДата_и___чека_АЗС.ExtendedProperties.Add("Generator_UserColumnName", "Дата и № чека АЗС");
                base.Columns.Add(this._columnДата_и___чека_АЗС);
                this.columnРасход_топлива_по_норме = new global::System.Data.DataColumn("Расход топлива по норме", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnРасход_топлива_по_норме);
                this.columnРасход_топлива_фактически = new global::System.Data.DataColumn("Расход топлива фактически", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnРасход_топлива_фактически);
                this.columnРасход_топлива_экономия_перерасход = new global::System.Data.DataColumn("Расход топлива экономия перерасход", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnРасход_топлива_экономия_перерасход);
                this.columnМаршрут_перевозки_откуда = new global::System.Data.DataColumn("Маршрут перевозки откуда", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМаршрут_перевозки_откуда);
                this.columnМаршрут_перевозки_куда = new global::System.Data.DataColumn("Маршрут перевозки куда", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМаршрут_перевозки_куда);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid_Данных}, true));
                this.columnid_Данных.AutoIncrement = true;
                this.columnid_Данных.AutoIncrementSeed = -1;
                this.columnid_Данных.AutoIncrementStep = -1;
                this.columnid_Данных.AllowDBNull = false;
                this.columnid_Данных.ReadOnly = true;
                this.columnid_Данных.Unique = true;
                this.columnЧисло.AllowDBNull = false;
                this.columnПоказания_спидометра_при_выезде.DefaultValue = ((int)(0));
                this.columnПоказания_спидометра_при_возвращении.DefaultValue = ((int)(0));
                this.columnПробег_км.DefaultValue = ((int)(0));
                this.columnОстаток_топлива_при_выезде.DefaultValue = ((double)(0D));
                this.columnОстаток_топлива_при_возвращении.DefaultValue = ((double)(0D));
                this.columnЗаправлено_топлива_л.DefaultValue = ((double)(0D));
                this._columnДата_и___чека_АЗС.MaxLength = 50;
                this.columnРасход_топлива_по_норме.DefaultValue = ((double)(0D));
                this.columnРасход_топлива_фактически.DefaultValue = ((double)(0D));
                this.columnРасход_топлива_экономия_перерасход.DefaultValue = ((double)(0D));
                this.columnМаршрут_перевозки_откуда.MaxLength = 50;
                this.columnМаршрут_перевозки_куда.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Данные_Путевой_лист_легкового_автоRow NewДанные_Путевой_лист_легкового_автоRow() {
                return ((Данные_Путевой_лист_легкового_автоRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Данные_Путевой_лист_легкового_автоRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Данные_Путевой_лист_легкового_автоRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Данные_Путевой_лист_легкового_автоRowChanged != null)) {
                    this.Данные_Путевой_лист_легкового_автоRowChanged(this, new Данные_Путевой_лист_легкового_автоRowChangeEvent(((Данные_Путевой_лист_легкового_автоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Данные_Путевой_лист_легкового_автоRowChanging != null)) {
                    this.Данные_Путевой_лист_легкового_автоRowChanging(this, new Данные_Путевой_лист_легкового_автоRowChangeEvent(((Данные_Путевой_лист_легкового_автоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Данные_Путевой_лист_легкового_автоRowDeleted != null)) {
                    this.Данные_Путевой_лист_легкового_автоRowDeleted(this, new Данные_Путевой_лист_легкового_автоRowChangeEvent(((Данные_Путевой_лист_легкового_автоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Данные_Путевой_лист_легкового_автоRowDeleting != null)) {
                    this.Данные_Путевой_лист_легкового_автоRowDeleting(this, new Данные_Путевой_лист_легкового_автоRowChangeEvent(((Данные_Путевой_лист_легкового_автоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveДанные_Путевой_лист_легкового_автоRow(Данные_Путевой_лист_легкового_автоRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutoparkDB ds = new AutoparkDB();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Данные_Путевой_лист_легкового_автоDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Личный_составDataTable : global::System.Data.TypedTableBase<Личный_составRow> {
            
            private global::System.Data.DataColumn columnтабельный_номер;
            
            private global::System.Data.DataColumn columnФамилия;
            
            private global::System.Data.DataColumn columnИмя;
            
            private global::System.Data.DataColumn columnОтчество;
            
            private global::System.Data.DataColumn columnномер_водительского_удостоверения;
            
            private global::System.Data.DataColumn columnклассность;
            
            private global::System.Data.DataColumn columnсрок_действия_мед__справки;
            
            private global::System.Data.DataColumn columnФИО;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Личный_составDataTable() {
                this.TableName = "Личный состав";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Личный_составDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Личный_составDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn табельный_номерColumn {
                get {
                    return this.columnтабельный_номер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ФамилияColumn {
                get {
                    return this.columnФамилия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ИмяColumn {
                get {
                    return this.columnИмя;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ОтчествоColumn {
                get {
                    return this.columnОтчество;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn номер_водительского_удостоверенияColumn {
                get {
                    return this.columnномер_водительского_удостоверения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn классностьColumn {
                get {
                    return this.columnклассность;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn срок_действия_мед__справкиColumn {
                get {
                    return this.columnсрок_действия_мед__справки;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ФИОColumn {
                get {
                    return this.columnФИО;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Личный_составRow this[int index] {
                get {
                    return ((Личный_составRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Личный_составRowChangeEventHandler Личный_составRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Личный_составRowChangeEventHandler Личный_составRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Личный_составRowChangeEventHandler Личный_составRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Личный_составRowChangeEventHandler Личный_составRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddЛичный_составRow(Личный_составRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Личный_составRow AddЛичный_составRow(int табельный_номер, string Фамилия, string Имя, string Отчество, string номер_водительского_удостоверения, int классность, System.DateTime срок_действия_мед__справки, string ФИО) {
                Личный_составRow rowЛичный_составRow = ((Личный_составRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        табельный_номер,
                        Фамилия,
                        Имя,
                        Отчество,
                        номер_водительского_удостоверения,
                        классность,
                        срок_действия_мед__справки,
                        ФИО};
                rowЛичный_составRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowЛичный_составRow);
                return rowЛичный_составRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Личный_составRow FindByтабельный_номер(int табельный_номер) {
                return ((Личный_составRow)(this.Rows.Find(new object[] {
                            табельный_номер})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Личный_составDataTable cln = ((Личный_составDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Личный_составDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnтабельный_номер = base.Columns["табельный_номер"];
                this.columnФамилия = base.Columns["Фамилия"];
                this.columnИмя = base.Columns["Имя"];
                this.columnОтчество = base.Columns["Отчество"];
                this.columnномер_водительского_удостоверения = base.Columns["номер водительского удостоверения"];
                this.columnклассность = base.Columns["классность"];
                this.columnсрок_действия_мед__справки = base.Columns["срок действия мед_ справки"];
                this.columnФИО = base.Columns["ФИО"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnтабельный_номер = new global::System.Data.DataColumn("табельный_номер", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnтабельный_номер);
                this.columnФамилия = new global::System.Data.DataColumn("Фамилия", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФамилия);
                this.columnИмя = new global::System.Data.DataColumn("Имя", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИмя);
                this.columnОтчество = new global::System.Data.DataColumn("Отчество", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОтчество);
                this.columnномер_водительского_удостоверения = new global::System.Data.DataColumn("номер водительского удостоверения", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnномер_водительского_удостоверения);
                this.columnклассность = new global::System.Data.DataColumn("классность", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnклассность);
                this.columnсрок_действия_мед__справки = new global::System.Data.DataColumn("срок действия мед_ справки", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnсрок_действия_мед__справки);
                this.columnФИО = new global::System.Data.DataColumn("ФИО", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФИО);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnтабельный_номер}, true));
                this.columnтабельный_номер.AllowDBNull = false;
                this.columnтабельный_номер.Unique = true;
                this.columnтабельный_номер.Caption = "табельный  номер";
                this.columnФамилия.MaxLength = 50;
                this.columnИмя.MaxLength = 50;
                this.columnОтчество.MaxLength = 50;
                this.columnномер_водительского_удостоверения.AllowDBNull = false;
                this.columnномер_водительского_удостоверения.MaxLength = 50;
                this.columnсрок_действия_мед__справки.Caption = "срок действия мед. справки";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Личный_составRow NewЛичный_составRow() {
                return ((Личный_составRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Личный_составRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Личный_составRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Личный_составRowChanged != null)) {
                    this.Личный_составRowChanged(this, new Личный_составRowChangeEvent(((Личный_составRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Личный_составRowChanging != null)) {
                    this.Личный_составRowChanging(this, new Личный_составRowChangeEvent(((Личный_составRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Личный_составRowDeleted != null)) {
                    this.Личный_составRowDeleted(this, new Личный_составRowChangeEvent(((Личный_составRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Личный_составRowDeleting != null)) {
                    this.Личный_составRowDeleting(this, new Личный_составRowChangeEvent(((Личный_составRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveЛичный_составRow(Личный_составRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutoparkDB ds = new AutoparkDB();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Личный_составDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Задание_водителюDataTable : global::System.Data.TypedTableBase<Задание_водителюRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnID_Путевого_листа;
            
            private global::System.Data.DataColumn columnЗаказчик;
            
            private global::System.Data.DataColumn columnДата_и_время_прибытия;
            
            private global::System.Data.DataColumn columnДата_и_время_убытия;
            
            private global::System.Data.DataColumn columnПункт_отправления;
            
            private global::System.Data.DataColumn columnПункт_назначения;
            
            private global::System.Data.DataColumn columnРасстояние_км;
            
            private global::System.Data.DataColumn columnНаименование_груза;
            
            private global::System.Data.DataColumn columnВес_груза_т;
            
            private global::System.Data.DataColumn columnКоличество_поездок_с_грузом_час;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Задание_водителюDataTable() {
                this.TableName = "Задание водителю";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Задание_водителюDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Задание_водителюDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_Путевого_листаColumn {
                get {
                    return this.columnID_Путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ЗаказчикColumn {
                get {
                    return this.columnЗаказчик;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Дата_и_время_прибытияColumn {
                get {
                    return this.columnДата_и_время_прибытия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Дата_и_время_убытияColumn {
                get {
                    return this.columnДата_и_время_убытия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Пункт_отправленияColumn {
                get {
                    return this.columnПункт_отправления;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Пункт_назначенияColumn {
                get {
                    return this.columnПункт_назначения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Расстояние_кмColumn {
                get {
                    return this.columnРасстояние_км;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Наименование_грузаColumn {
                get {
                    return this.columnНаименование_груза;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Вес_груза_тColumn {
                get {
                    return this.columnВес_груза_т;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Количество_поездок_с_грузом_часColumn {
                get {
                    return this.columnКоличество_поездок_с_грузом_час;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Задание_водителюRow this[int index] {
                get {
                    return ((Задание_водителюRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Задание_водителюRowChangeEventHandler Задание_водителюRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Задание_водителюRowChangeEventHandler Задание_водителюRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Задание_водителюRowChangeEventHandler Задание_водителюRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Задание_водителюRowChangeEventHandler Задание_водителюRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddЗадание_водителюRow(Задание_водителюRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Задание_водителюRow AddЗадание_водителюRow(Путевой_лист_Грузового_автоRow parentПутевой_лист_Грузового_автоRowByFK_Задание_водителю_Путевой_лист_Грузового_авто, string Заказчик, System.DateTime Дата_и_время_прибытия, System.DateTime Дата_и_время_убытия, string Пункт_отправления, string Пункт_назначения, double Расстояние_км, string Наименование_груза, double Вес_груза_т, int Количество_поездок_с_грузом_час) {
                Задание_водителюRow rowЗадание_водителюRow = ((Задание_водителюRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Заказчик,
                        Дата_и_время_прибытия,
                        Дата_и_время_убытия,
                        Пункт_отправления,
                        Пункт_назначения,
                        Расстояние_км,
                        Наименование_груза,
                        Вес_груза_т,
                        Количество_поездок_с_грузом_час};
                if ((parentПутевой_лист_Грузового_автоRowByFK_Задание_водителю_Путевой_лист_Грузового_авто != null)) {
                    columnValuesArray[1] = parentПутевой_лист_Грузового_автоRowByFK_Задание_водителю_Путевой_лист_Грузового_авто[0];
                }
                rowЗадание_водителюRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowЗадание_водителюRow);
                return rowЗадание_водителюRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Задание_водителюRow FindByid(int id) {
                return ((Задание_водителюRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Задание_водителюDataTable cln = ((Задание_водителюDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Задание_водителюDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnID_Путевого_листа = base.Columns["ID_Путевого листа"];
                this.columnЗаказчик = base.Columns["Заказчик"];
                this.columnДата_и_время_прибытия = base.Columns["Дата и время прибытия"];
                this.columnДата_и_время_убытия = base.Columns["Дата и время убытия"];
                this.columnПункт_отправления = base.Columns["Пункт отправления"];
                this.columnПункт_назначения = base.Columns["Пункт назначения"];
                this.columnРасстояние_км = base.Columns["Расстояние км"];
                this.columnНаименование_груза = base.Columns["Наименование груза"];
                this.columnВес_груза_т = base.Columns["Вес груза т"];
                this.columnКоличество_поездок_с_грузом_час = base.Columns["Количество поездок с грузом час"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnID_Путевого_листа = new global::System.Data.DataColumn("ID_Путевого листа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Путевого_листа);
                this.columnЗаказчик = new global::System.Data.DataColumn("Заказчик", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗаказчик);
                this.columnДата_и_время_прибытия = new global::System.Data.DataColumn("Дата и время прибытия", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_и_время_прибытия);
                this.columnДата_и_время_убытия = new global::System.Data.DataColumn("Дата и время убытия", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_и_время_убытия);
                this.columnПункт_отправления = new global::System.Data.DataColumn("Пункт отправления", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПункт_отправления);
                this.columnПункт_назначения = new global::System.Data.DataColumn("Пункт назначения", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПункт_назначения);
                this.columnРасстояние_км = new global::System.Data.DataColumn("Расстояние км", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnРасстояние_км);
                this.columnНаименование_груза = new global::System.Data.DataColumn("Наименование груза", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование_груза);
                this.columnВес_груза_т = new global::System.Data.DataColumn("Вес груза т", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВес_груза_т);
                this.columnКоличество_поездок_с_грузом_час = new global::System.Data.DataColumn("Количество поездок с грузом час", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКоличество_поездок_с_грузом_час);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnID_Путевого_листа.AllowDBNull = false;
                this.columnЗаказчик.MaxLength = 50;
                this.columnПункт_отправления.MaxLength = 100;
                this.columnПункт_назначения.MaxLength = 100;
                this.columnНаименование_груза.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Задание_водителюRow NewЗадание_водителюRow() {
                return ((Задание_водителюRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Задание_водителюRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Задание_водителюRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Задание_водителюRowChanged != null)) {
                    this.Задание_водителюRowChanged(this, new Задание_водителюRowChangeEvent(((Задание_водителюRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Задание_водителюRowChanging != null)) {
                    this.Задание_водителюRowChanging(this, new Задание_водителюRowChangeEvent(((Задание_водителюRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Задание_водителюRowDeleted != null)) {
                    this.Задание_водителюRowDeleted(this, new Задание_водителюRowChangeEvent(((Задание_водителюRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Задание_водителюRowDeleting != null)) {
                    this.Задание_водителюRowDeleting(this, new Задание_водителюRowChangeEvent(((Задание_водителюRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveЗадание_водителюRow(Задание_водителюRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutoparkDB ds = new AutoparkDB();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Задание_водителюDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DanieJournalLegkovieDataTable : global::System.Data.TypedTableBase<DanieJournalLegkovieRow> {
            
            private global::System.Data.DataColumn columnЧисло;
            
            private global::System.Data.DataColumn columnНомер_путевого_листа;
            
            private global::System.Data.DataColumn columnОстаток_топлива_при_выезде;
            
            private global::System.Data.DataColumn columnОстаток_топлива_при_возвращении;
            
            private global::System.Data.DataColumn columnВремя_выезда;
            
            private global::System.Data.DataColumn columnВремя_возвращения;
            
            private global::System.Data.DataColumn columnПоказания_спидометра_при_выезде;
            
            private global::System.Data.DataColumn columnПоказания_спидометра_при_возвращении;
            
            private global::System.Data.DataColumn columnВ_чье_распоряжение_занаряжена_автомашина;
            
            private global::System.Data.DataColumn columnМаршрут_перевозки_откуда;
            
            private global::System.Data.DataColumn columnМаршрут_перевозки_куда;
            
            private global::System.Data.DataColumn columnЗаправлено_топлива_л;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DanieJournalLegkovieDataTable() {
                this.TableName = "DanieJournalLegkovie";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DanieJournalLegkovieDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DanieJournalLegkovieDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ЧислоColumn {
                get {
                    return this.columnЧисло;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Номер_путевого_листаColumn {
                get {
                    return this.columnНомер_путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Остаток_топлива_при_выездеColumn {
                get {
                    return this.columnОстаток_топлива_при_выезде;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Остаток_топлива_при_возвращенииColumn {
                get {
                    return this.columnОстаток_топлива_при_возвращении;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Время_выездаColumn {
                get {
                    return this.columnВремя_выезда;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Время_возвращенияColumn {
                get {
                    return this.columnВремя_возвращения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Показания_спидометра_при_выездеColumn {
                get {
                    return this.columnПоказания_спидометра_при_выезде;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Показания_спидометра_при_возвращенииColumn {
                get {
                    return this.columnПоказания_спидометра_при_возвращении;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn В_чье_распоряжение_занаряжена_автомашинаColumn {
                get {
                    return this.columnВ_чье_распоряжение_занаряжена_автомашина;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Маршрут_перевозки_откудаColumn {
                get {
                    return this.columnМаршрут_перевозки_откуда;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Маршрут_перевозки_кудаColumn {
                get {
                    return this.columnМаршрут_перевозки_куда;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Заправлено_топлива_лColumn {
                get {
                    return this.columnЗаправлено_топлива_л;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DanieJournalLegkovieRow this[int index] {
                get {
                    return ((DanieJournalLegkovieRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DanieJournalLegkovieRowChangeEventHandler DanieJournalLegkovieRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DanieJournalLegkovieRowChangeEventHandler DanieJournalLegkovieRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DanieJournalLegkovieRowChangeEventHandler DanieJournalLegkovieRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DanieJournalLegkovieRowChangeEventHandler DanieJournalLegkovieRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDanieJournalLegkovieRow(DanieJournalLegkovieRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DanieJournalLegkovieRow AddDanieJournalLegkovieRow(System.DateTime Число, string Номер_путевого_листа, double Остаток_топлива_при_выезде, double Остаток_топлива_при_возвращении, System.TimeSpan Время_выезда, System.TimeSpan Время_возвращения, int Показания_спидометра_при_выезде, int Показания_спидометра_при_возвращении, string В_чье_распоряжение_занаряжена_автомашина, string Маршрут_перевозки_откуда, string Маршрут_перевозки_куда, double Заправлено_топлива_л) {
                DanieJournalLegkovieRow rowDanieJournalLegkovieRow = ((DanieJournalLegkovieRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Число,
                        Номер_путевого_листа,
                        Остаток_топлива_при_выезде,
                        Остаток_топлива_при_возвращении,
                        Время_выезда,
                        Время_возвращения,
                        Показания_спидометра_при_выезде,
                        Показания_спидометра_при_возвращении,
                        В_чье_распоряжение_занаряжена_автомашина,
                        Маршрут_перевозки_откуда,
                        Маршрут_перевозки_куда,
                        Заправлено_топлива_л};
                rowDanieJournalLegkovieRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDanieJournalLegkovieRow);
                return rowDanieJournalLegkovieRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DanieJournalLegkovieDataTable cln = ((DanieJournalLegkovieDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DanieJournalLegkovieDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnЧисло = base.Columns["Число"];
                this.columnНомер_путевого_листа = base.Columns["Номер путевого листа"];
                this.columnОстаток_топлива_при_выезде = base.Columns["Остаток топлива при выезде"];
                this.columnОстаток_топлива_при_возвращении = base.Columns["Остаток топлива при возвращении"];
                this.columnВремя_выезда = base.Columns["Время выезда"];
                this.columnВремя_возвращения = base.Columns["Время возвращения"];
                this.columnПоказания_спидометра_при_выезде = base.Columns["Показания спидометра при выезде"];
                this.columnПоказания_спидометра_при_возвращении = base.Columns["Показания спидометра при возвращении"];
                this.columnВ_чье_распоряжение_занаряжена_автомашина = base.Columns["В чье распоряжение занаряжена автомашина"];
                this.columnМаршрут_перевозки_откуда = base.Columns["Маршрут перевозки откуда"];
                this.columnМаршрут_перевозки_куда = base.Columns["Маршрут перевозки куда"];
                this.columnЗаправлено_топлива_л = base.Columns["Заправлено топлива л"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnЧисло = new global::System.Data.DataColumn("Число", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЧисло);
                this.columnНомер_путевого_листа = new global::System.Data.DataColumn("Номер путевого листа", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНомер_путевого_листа);
                this.columnОстаток_топлива_при_выезде = new global::System.Data.DataColumn("Остаток топлива при выезде", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОстаток_топлива_при_выезде);
                this.columnОстаток_топлива_при_возвращении = new global::System.Data.DataColumn("Остаток топлива при возвращении", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОстаток_топлива_при_возвращении);
                this.columnВремя_выезда = new global::System.Data.DataColumn("Время выезда", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВремя_выезда);
                this.columnВремя_возвращения = new global::System.Data.DataColumn("Время возвращения", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВремя_возвращения);
                this.columnПоказания_спидометра_при_выезде = new global::System.Data.DataColumn("Показания спидометра при выезде", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПоказания_спидометра_при_выезде);
                this.columnПоказания_спидометра_при_возвращении = new global::System.Data.DataColumn("Показания спидометра при возвращении", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПоказания_спидометра_при_возвращении);
                this.columnВ_чье_распоряжение_занаряжена_автомашина = new global::System.Data.DataColumn("В чье распоряжение занаряжена автомашина", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВ_чье_распоряжение_занаряжена_автомашина);
                this.columnМаршрут_перевозки_откуда = new global::System.Data.DataColumn("Маршрут перевозки откуда", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМаршрут_перевозки_откуда);
                this.columnМаршрут_перевозки_куда = new global::System.Data.DataColumn("Маршрут перевозки куда", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМаршрут_перевозки_куда);
                this.columnЗаправлено_топлива_л = new global::System.Data.DataColumn("Заправлено топлива л", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗаправлено_топлива_л);
                this.columnЧисло.AllowDBNull = false;
                this.columnНомер_путевого_листа.MaxLength = 10;
                this.columnОстаток_топлива_при_выезде.AllowDBNull = false;
                this.columnОстаток_топлива_при_возвращении.AllowDBNull = false;
                this.columnВремя_выезда.AllowDBNull = false;
                this.columnВремя_возвращения.AllowDBNull = false;
                this.columnПоказания_спидометра_при_выезде.AllowDBNull = false;
                this.columnПоказания_спидометра_при_возвращении.AllowDBNull = false;
                this.columnВ_чье_распоряжение_занаряжена_автомашина.MaxLength = 50;
                this.columnМаршрут_перевозки_откуда.MaxLength = 50;
                this.columnМаршрут_перевозки_куда.MaxLength = 50;
                this.columnЗаправлено_топлива_л.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DanieJournalLegkovieRow NewDanieJournalLegkovieRow() {
                return ((DanieJournalLegkovieRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DanieJournalLegkovieRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DanieJournalLegkovieRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DanieJournalLegkovieRowChanged != null)) {
                    this.DanieJournalLegkovieRowChanged(this, new DanieJournalLegkovieRowChangeEvent(((DanieJournalLegkovieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DanieJournalLegkovieRowChanging != null)) {
                    this.DanieJournalLegkovieRowChanging(this, new DanieJournalLegkovieRowChangeEvent(((DanieJournalLegkovieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DanieJournalLegkovieRowDeleted != null)) {
                    this.DanieJournalLegkovieRowDeleted(this, new DanieJournalLegkovieRowChangeEvent(((DanieJournalLegkovieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DanieJournalLegkovieRowDeleting != null)) {
                    this.DanieJournalLegkovieRowDeleting(this, new DanieJournalLegkovieRowChangeEvent(((DanieJournalLegkovieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDanieJournalLegkovieRow(DanieJournalLegkovieRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutoparkDB ds = new AutoparkDB();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DanieJournalLegkovieDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DanieJournalGruzovieDataTable : global::System.Data.TypedTableBase<DanieJournalGruzovieRow> {
            
            private global::System.Data.DataColumn columnНомер_путевого_листа;
            
            private global::System.Data.DataColumn columnДата_путевого_листа;
            
            private global::System.Data.DataColumn columnВ_чье_распоряжение_занаряжена_автомашина;
            
            private global::System.Data.DataColumn columnПункт_отправления;
            
            private global::System.Data.DataColumn columnПункт_назначения;
            
            private global::System.Data.DataColumn columnКоличество;
            
            private global::System.Data.DataColumn columnСпидометр_при_выезде;
            
            private global::System.Data.DataColumn columnСпидометр_при_возвращении;
            
            private global::System.Data.DataColumn columnВремя_выезда;
            
            private global::System.Data.DataColumn columnВремя_возвращения;
            
            private global::System.Data.DataColumn columnОстаток_ТСМ_при_выезде;
            
            private global::System.Data.DataColumn columnОстаток_ТСМ_при_возвращении;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DanieJournalGruzovieDataTable() {
                this.TableName = "DanieJournalGruzovie";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DanieJournalGruzovieDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DanieJournalGruzovieDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Номер_путевого_листаColumn {
                get {
                    return this.columnНомер_путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Дата_путевого_листаColumn {
                get {
                    return this.columnДата_путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn В_чье_распоряжение_занаряжена_автомашинаColumn {
                get {
                    return this.columnВ_чье_распоряжение_занаряжена_автомашина;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Пункт_отправленияColumn {
                get {
                    return this.columnПункт_отправления;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Пункт_назначенияColumn {
                get {
                    return this.columnПункт_назначения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КоличествоColumn {
                get {
                    return this.columnКоличество;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Спидометр_при_выездеColumn {
                get {
                    return this.columnСпидометр_при_выезде;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Спидометр_при_возвращенииColumn {
                get {
                    return this.columnСпидометр_при_возвращении;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Время_выездаColumn {
                get {
                    return this.columnВремя_выезда;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Время_возвращенияColumn {
                get {
                    return this.columnВремя_возвращения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Остаток_ТСМ_при_выездеColumn {
                get {
                    return this.columnОстаток_ТСМ_при_выезде;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Остаток_ТСМ_при_возвращенииColumn {
                get {
                    return this.columnОстаток_ТСМ_при_возвращении;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DanieJournalGruzovieRow this[int index] {
                get {
                    return ((DanieJournalGruzovieRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DanieJournalGruzovieRowChangeEventHandler DanieJournalGruzovieRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DanieJournalGruzovieRowChangeEventHandler DanieJournalGruzovieRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DanieJournalGruzovieRowChangeEventHandler DanieJournalGruzovieRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DanieJournalGruzovieRowChangeEventHandler DanieJournalGruzovieRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDanieJournalGruzovieRow(DanieJournalGruzovieRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DanieJournalGruzovieRow AddDanieJournalGruzovieRow(int Номер_путевого_листа, System.DateTime Дата_путевого_листа, string В_чье_распоряжение_занаряжена_автомашина, string Пункт_отправления, string Пункт_назначения, double Количество, int Спидометр_при_выезде, int Спидометр_при_возвращении, System.TimeSpan Время_выезда, System.TimeSpan Время_возвращения, string Остаток_ТСМ_при_выезде, string Остаток_ТСМ_при_возвращении) {
                DanieJournalGruzovieRow rowDanieJournalGruzovieRow = ((DanieJournalGruzovieRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Номер_путевого_листа,
                        Дата_путевого_листа,
                        В_чье_распоряжение_занаряжена_автомашина,
                        Пункт_отправления,
                        Пункт_назначения,
                        Количество,
                        Спидометр_при_выезде,
                        Спидометр_при_возвращении,
                        Время_выезда,
                        Время_возвращения,
                        Остаток_ТСМ_при_выезде,
                        Остаток_ТСМ_при_возвращении};
                rowDanieJournalGruzovieRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDanieJournalGruzovieRow);
                return rowDanieJournalGruzovieRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DanieJournalGruzovieDataTable cln = ((DanieJournalGruzovieDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DanieJournalGruzovieDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnНомер_путевого_листа = base.Columns["Номер путевого листа"];
                this.columnДата_путевого_листа = base.Columns["Дата путевого листа"];
                this.columnВ_чье_распоряжение_занаряжена_автомашина = base.Columns["В чье распоряжение занаряжена автомашина"];
                this.columnПункт_отправления = base.Columns["Пункт отправления"];
                this.columnПункт_назначения = base.Columns["Пункт назначения"];
                this.columnКоличество = base.Columns["Количество"];
                this.columnСпидометр_при_выезде = base.Columns["Спидометр при выезде"];
                this.columnСпидометр_при_возвращении = base.Columns["Спидометр при возвращении"];
                this.columnВремя_выезда = base.Columns["Время выезда"];
                this.columnВремя_возвращения = base.Columns["Время возвращения"];
                this.columnОстаток_ТСМ_при_выезде = base.Columns["Остаток ТСМ при выезде"];
                this.columnОстаток_ТСМ_при_возвращении = base.Columns["Остаток ТСМ при возвращении"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnНомер_путевого_листа = new global::System.Data.DataColumn("Номер путевого листа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНомер_путевого_листа);
                this.columnДата_путевого_листа = new global::System.Data.DataColumn("Дата путевого листа", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_путевого_листа);
                this.columnВ_чье_распоряжение_занаряжена_автомашина = new global::System.Data.DataColumn("В чье распоряжение занаряжена автомашина", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВ_чье_распоряжение_занаряжена_автомашина);
                this.columnПункт_отправления = new global::System.Data.DataColumn("Пункт отправления", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПункт_отправления);
                this.columnПункт_назначения = new global::System.Data.DataColumn("Пункт назначения", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПункт_назначения);
                this.columnКоличество = new global::System.Data.DataColumn("Количество", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКоличество);
                this.columnСпидометр_при_выезде = new global::System.Data.DataColumn("Спидометр при выезде", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСпидометр_при_выезде);
                this.columnСпидометр_при_возвращении = new global::System.Data.DataColumn("Спидометр при возвращении", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСпидометр_при_возвращении);
                this.columnВремя_выезда = new global::System.Data.DataColumn("Время выезда", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВремя_выезда);
                this.columnВремя_возвращения = new global::System.Data.DataColumn("Время возвращения", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВремя_возвращения);
                this.columnОстаток_ТСМ_при_выезде = new global::System.Data.DataColumn("Остаток ТСМ при выезде", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОстаток_ТСМ_при_выезде);
                this.columnОстаток_ТСМ_при_возвращении = new global::System.Data.DataColumn("Остаток ТСМ при возвращении", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОстаток_ТСМ_при_возвращении);
                this.columnНомер_путевого_листа.AllowDBNull = false;
                this.columnДата_путевого_листа.AllowDBNull = false;
                this.columnВ_чье_распоряжение_занаряжена_автомашина.MaxLength = 50;
                this.columnПункт_отправления.MaxLength = 100;
                this.columnПункт_назначения.MaxLength = 100;
                this.columnОстаток_ТСМ_при_выезде.AllowDBNull = false;
                this.columnОстаток_ТСМ_при_выезде.MaxLength = 50;
                this.columnОстаток_ТСМ_при_возвращении.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DanieJournalGruzovieRow NewDanieJournalGruzovieRow() {
                return ((DanieJournalGruzovieRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DanieJournalGruzovieRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DanieJournalGruzovieRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DanieJournalGruzovieRowChanged != null)) {
                    this.DanieJournalGruzovieRowChanged(this, new DanieJournalGruzovieRowChangeEvent(((DanieJournalGruzovieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DanieJournalGruzovieRowChanging != null)) {
                    this.DanieJournalGruzovieRowChanging(this, new DanieJournalGruzovieRowChangeEvent(((DanieJournalGruzovieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DanieJournalGruzovieRowDeleted != null)) {
                    this.DanieJournalGruzovieRowDeleted(this, new DanieJournalGruzovieRowChangeEvent(((DanieJournalGruzovieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DanieJournalGruzovieRowDeleting != null)) {
                    this.DanieJournalGruzovieRowDeleting(this, new DanieJournalGruzovieRowChangeEvent(((DanieJournalGruzovieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDanieJournalGruzovieRow(DanieJournalGruzovieRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutoparkDB ds = new AutoparkDB();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DanieJournalGruzovieDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BannerJornalGruzovieDataTable : global::System.Data.TypedTableBase<BannerJornalGruzovieRow> {
            
            private global::System.Data.DataColumn columnФамилия;
            
            private global::System.Data.DataColumn columnИмя;
            
            private global::System.Data.DataColumn columnОтчество;
            
            private global::System.Data.DataColumn columnсрок_действия_мед__справки;
            
            private global::System.Data.DataColumn columnклассность;
            
            private global::System.Data.DataColumn columnномер_водительского_удостоверения;
            
            private global::System.Data.DataColumn columnМарка_и_модель;
            
            private global::System.Data.DataColumn columnГос_номер;
            
            private global::System.Data.DataColumn columnГаражный_номер;
            
            private global::System.Data.DataColumn columnдата_окончания_страховки;
            
            private global::System.Data.DataColumn columnВид_топлива;
            
            private global::System.Data.DataColumn columnID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BannerJornalGruzovieDataTable() {
                this.TableName = "BannerJornalGruzovie";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BannerJornalGruzovieDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected BannerJornalGruzovieDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ФамилияColumn {
                get {
                    return this.columnФамилия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ИмяColumn {
                get {
                    return this.columnИмя;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ОтчествоColumn {
                get {
                    return this.columnОтчество;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn срок_действия_мед__справкиColumn {
                get {
                    return this.columnсрок_действия_мед__справки;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn классностьColumn {
                get {
                    return this.columnклассность;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn номер_водительского_удостоверенияColumn {
                get {
                    return this.columnномер_водительского_удостоверения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Марка_и_модельColumn {
                get {
                    return this.columnМарка_и_модель;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Гос_номерColumn {
                get {
                    return this.columnГос_номер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Гаражный_номерColumn {
                get {
                    return this.columnГаражный_номер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn дата_окончания_страховкиColumn {
                get {
                    return this.columnдата_окончания_страховки;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Вид_топливаColumn {
                get {
                    return this.columnВид_топлива;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BannerJornalGruzovieRow this[int index] {
                get {
                    return ((BannerJornalGruzovieRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BannerJornalGruzovieRowChangeEventHandler BannerJornalGruzovieRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BannerJornalGruzovieRowChangeEventHandler BannerJornalGruzovieRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BannerJornalGruzovieRowChangeEventHandler BannerJornalGruzovieRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BannerJornalGruzovieRowChangeEventHandler BannerJornalGruzovieRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddBannerJornalGruzovieRow(BannerJornalGruzovieRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BannerJornalGruzovieRow AddBannerJornalGruzovieRow(string Фамилия, string Имя, string Отчество, System.DateTime срок_действия_мед__справки, int классность, string номер_водительского_удостоверения, string Марка_и_модель, string Гос_номер, string Гаражный_номер, System.DateTime дата_окончания_страховки, string Вид_топлива) {
                BannerJornalGruzovieRow rowBannerJornalGruzovieRow = ((BannerJornalGruzovieRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Фамилия,
                        Имя,
                        Отчество,
                        срок_действия_мед__справки,
                        классность,
                        номер_водительского_удостоверения,
                        Марка_и_модель,
                        Гос_номер,
                        Гаражный_номер,
                        дата_окончания_страховки,
                        Вид_топлива,
                        null};
                rowBannerJornalGruzovieRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBannerJornalGruzovieRow);
                return rowBannerJornalGruzovieRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BannerJornalGruzovieRow FindByID(int ID) {
                return ((BannerJornalGruzovieRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BannerJornalGruzovieDataTable cln = ((BannerJornalGruzovieDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BannerJornalGruzovieDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnФамилия = base.Columns["Фамилия"];
                this.columnИмя = base.Columns["Имя"];
                this.columnОтчество = base.Columns["Отчество"];
                this.columnсрок_действия_мед__справки = base.Columns["срок действия мед_ справки"];
                this.columnклассность = base.Columns["классность"];
                this.columnномер_водительского_удостоверения = base.Columns["номер водительского удостоверения"];
                this.columnМарка_и_модель = base.Columns["Марка и модель"];
                this.columnГос_номер = base.Columns["Гос_номер"];
                this.columnГаражный_номер = base.Columns["Гаражный номер"];
                this.columnдата_окончания_страховки = base.Columns["дата окончания страховки"];
                this.columnВид_топлива = base.Columns["Вид топлива"];
                this.columnID = base.Columns["ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnФамилия = new global::System.Data.DataColumn("Фамилия", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФамилия);
                this.columnИмя = new global::System.Data.DataColumn("Имя", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИмя);
                this.columnОтчество = new global::System.Data.DataColumn("Отчество", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОтчество);
                this.columnсрок_действия_мед__справки = new global::System.Data.DataColumn("срок действия мед_ справки", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnсрок_действия_мед__справки);
                this.columnклассность = new global::System.Data.DataColumn("классность", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnклассность);
                this.columnномер_водительского_удостоверения = new global::System.Data.DataColumn("номер водительского удостоверения", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnномер_водительского_удостоверения);
                this.columnМарка_и_модель = new global::System.Data.DataColumn("Марка и модель", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМарка_и_модель);
                this.columnГос_номер = new global::System.Data.DataColumn("Гос_номер", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnГос_номер);
                this.columnГаражный_номер = new global::System.Data.DataColumn("Гаражный номер", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnГаражный_номер);
                this.columnдата_окончания_страховки = new global::System.Data.DataColumn("дата окончания страховки", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnдата_окончания_страховки);
                this.columnВид_топлива = new global::System.Data.DataColumn("Вид топлива", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВид_топлива);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnФамилия.MaxLength = 50;
                this.columnИмя.MaxLength = 50;
                this.columnОтчество.MaxLength = 50;
                this.columnсрок_действия_мед__справки.Caption = "срок действия мед. справки";
                this.columnномер_водительского_удостоверения.MaxLength = 50;
                this.columnМарка_и_модель.AllowDBNull = false;
                this.columnМарка_и_модель.MaxLength = 50;
                this.columnГос_номер.AllowDBNull = false;
                this.columnГос_номер.Caption = "Гос.номер";
                this.columnГос_номер.MaxLength = 50;
                this.columnГаражный_номер.MaxLength = 50;
                this.columnВид_топлива.MaxLength = 50;
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BannerJornalGruzovieRow NewBannerJornalGruzovieRow() {
                return ((BannerJornalGruzovieRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BannerJornalGruzovieRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BannerJornalGruzovieRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BannerJornalGruzovieRowChanged != null)) {
                    this.BannerJornalGruzovieRowChanged(this, new BannerJornalGruzovieRowChangeEvent(((BannerJornalGruzovieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BannerJornalGruzovieRowChanging != null)) {
                    this.BannerJornalGruzovieRowChanging(this, new BannerJornalGruzovieRowChangeEvent(((BannerJornalGruzovieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BannerJornalGruzovieRowDeleted != null)) {
                    this.BannerJornalGruzovieRowDeleted(this, new BannerJornalGruzovieRowChangeEvent(((BannerJornalGruzovieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BannerJornalGruzovieRowDeleting != null)) {
                    this.BannerJornalGruzovieRowDeleting(this, new BannerJornalGruzovieRowChangeEvent(((BannerJornalGruzovieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveBannerJornalGruzovieRow(BannerJornalGruzovieRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutoparkDB ds = new AutoparkDB();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BannerJornalGruzovieDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Движение_ТСМDataTable : global::System.Data.TypedTableBase<Движение_ТСМRow> {
            
            private global::System.Data.DataColumn columnID_Движение_ТМЦ;
            
            private global::System.Data.DataColumn columnID_Путевого_листа;
            
            private global::System.Data.DataColumn columnОстаток_ТСМ_при_выезде;
            
            private global::System.Data.DataColumn columnОстаток_ТСМ_при_возвращении;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Движение_ТСМDataTable() {
                this.TableName = "Движение ТСМ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Движение_ТСМDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Движение_ТСМDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_Движение_ТМЦColumn {
                get {
                    return this.columnID_Движение_ТМЦ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_Путевого_листаColumn {
                get {
                    return this.columnID_Путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Остаток_ТСМ_при_выездеColumn {
                get {
                    return this.columnОстаток_ТСМ_при_выезде;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Остаток_ТСМ_при_возвращенииColumn {
                get {
                    return this.columnОстаток_ТСМ_при_возвращении;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Движение_ТСМRow this[int index] {
                get {
                    return ((Движение_ТСМRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Движение_ТСМRowChangeEventHandler Движение_ТСМRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Движение_ТСМRowChangeEventHandler Движение_ТСМRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Движение_ТСМRowChangeEventHandler Движение_ТСМRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Движение_ТСМRowChangeEventHandler Движение_ТСМRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddДвижение_ТСМRow(Движение_ТСМRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Движение_ТСМRow AddДвижение_ТСМRow(Путевой_лист_Грузового_автоRow parentПутевой_лист_Грузового_автоRowByFK_Движение_ТСМ_Путевой_лист_Грузового_авто, string Остаток_ТСМ_при_выезде, string Остаток_ТСМ_при_возвращении) {
                Движение_ТСМRow rowДвижение_ТСМRow = ((Движение_ТСМRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Остаток_ТСМ_при_выезде,
                        Остаток_ТСМ_при_возвращении};
                if ((parentПутевой_лист_Грузового_автоRowByFK_Движение_ТСМ_Путевой_лист_Грузового_авто != null)) {
                    columnValuesArray[1] = parentПутевой_лист_Грузового_автоRowByFK_Движение_ТСМ_Путевой_лист_Грузового_авто[0];
                }
                rowДвижение_ТСМRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowДвижение_ТСМRow);
                return rowДвижение_ТСМRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Движение_ТСМRow FindByID_Движение_ТМЦ(int ID_Движение_ТМЦ) {
                return ((Движение_ТСМRow)(this.Rows.Find(new object[] {
                            ID_Движение_ТМЦ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Движение_ТСМDataTable cln = ((Движение_ТСМDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Движение_ТСМDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID_Движение_ТМЦ = base.Columns["ID_Движение ТМЦ"];
                this.columnID_Путевого_листа = base.Columns["ID_Путевого листа"];
                this.columnОстаток_ТСМ_при_выезде = base.Columns["Остаток ТСМ при выезде"];
                this.columnОстаток_ТСМ_при_возвращении = base.Columns["Остаток ТСМ при возвращении"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID_Движение_ТМЦ = new global::System.Data.DataColumn("ID_Движение ТМЦ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Движение_ТМЦ);
                this.columnID_Путевого_листа = new global::System.Data.DataColumn("ID_Путевого листа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Путевого_листа);
                this.columnОстаток_ТСМ_при_выезде = new global::System.Data.DataColumn("Остаток ТСМ при выезде", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОстаток_ТСМ_при_выезде);
                this.columnОстаток_ТСМ_при_возвращении = new global::System.Data.DataColumn("Остаток ТСМ при возвращении", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОстаток_ТСМ_при_возвращении);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Движение_ТМЦ}, true));
                this.columnID_Движение_ТМЦ.AutoIncrement = true;
                this.columnID_Движение_ТМЦ.AutoIncrementSeed = -1;
                this.columnID_Движение_ТМЦ.AutoIncrementStep = -1;
                this.columnID_Движение_ТМЦ.AllowDBNull = false;
                this.columnID_Движение_ТМЦ.ReadOnly = true;
                this.columnID_Движение_ТМЦ.Unique = true;
                this.columnID_Путевого_листа.AllowDBNull = false;
                this.columnОстаток_ТСМ_при_выезде.AllowDBNull = false;
                this.columnОстаток_ТСМ_при_выезде.MaxLength = 50;
                this.columnОстаток_ТСМ_при_возвращении.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Движение_ТСМRow NewДвижение_ТСМRow() {
                return ((Движение_ТСМRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Движение_ТСМRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Движение_ТСМRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Движение_ТСМRowChanged != null)) {
                    this.Движение_ТСМRowChanged(this, new Движение_ТСМRowChangeEvent(((Движение_ТСМRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Движение_ТСМRowChanging != null)) {
                    this.Движение_ТСМRowChanging(this, new Движение_ТСМRowChangeEvent(((Движение_ТСМRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Движение_ТСМRowDeleted != null)) {
                    this.Движение_ТСМRowDeleted(this, new Движение_ТСМRowChangeEvent(((Движение_ТСМRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Движение_ТСМRowDeleting != null)) {
                    this.Движение_ТСМRowDeleting(this, new Движение_ТСМRowChangeEvent(((Движение_ТСМRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveДвижение_ТСМRow(Движение_ТСМRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutoparkDB ds = new AutoparkDB();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Движение_ТСМDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Заправка_ТСМDataTable : global::System.Data.TypedTableBase<Заправка_ТСМRow> {
            
            private global::System.Data.DataColumn columnID_Заправка_ТСМ;
            
            private global::System.Data.DataColumn columnДата;
            
            private global::System.Data.DataColumn columnМарка_ТСМ;
            
            private global::System.Data.DataColumn columnКоличество;
            
            private global::System.Data.DataColumn columnID_Путевого_листа;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Заправка_ТСМDataTable() {
                this.TableName = "Заправка ТСМ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Заправка_ТСМDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Заправка_ТСМDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_Заправка_ТСМColumn {
                get {
                    return this.columnID_Заправка_ТСМ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ДатаColumn {
                get {
                    return this.columnДата;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Марка_ТСМColumn {
                get {
                    return this.columnМарка_ТСМ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КоличествоColumn {
                get {
                    return this.columnКоличество;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_Путевого_листаColumn {
                get {
                    return this.columnID_Путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Заправка_ТСМRow this[int index] {
                get {
                    return ((Заправка_ТСМRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Заправка_ТСМRowChangeEventHandler Заправка_ТСМRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Заправка_ТСМRowChangeEventHandler Заправка_ТСМRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Заправка_ТСМRowChangeEventHandler Заправка_ТСМRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Заправка_ТСМRowChangeEventHandler Заправка_ТСМRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddЗаправка_ТСМRow(Заправка_ТСМRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Заправка_ТСМRow AddЗаправка_ТСМRow(System.DateTime Дата, string Марка_ТСМ, double Количество, int ID_Путевого_листа) {
                Заправка_ТСМRow rowЗаправка_ТСМRow = ((Заправка_ТСМRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Дата,
                        Марка_ТСМ,
                        Количество,
                        ID_Путевого_листа};
                rowЗаправка_ТСМRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowЗаправка_ТСМRow);
                return rowЗаправка_ТСМRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Заправка_ТСМRow FindByID_Заправка_ТСМ(int ID_Заправка_ТСМ) {
                return ((Заправка_ТСМRow)(this.Rows.Find(new object[] {
                            ID_Заправка_ТСМ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Заправка_ТСМDataTable cln = ((Заправка_ТСМDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Заправка_ТСМDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID_Заправка_ТСМ = base.Columns["ID_Заправка ТСМ"];
                this.columnДата = base.Columns["Дата"];
                this.columnМарка_ТСМ = base.Columns["Марка ТСМ"];
                this.columnКоличество = base.Columns["Количество"];
                this.columnID_Путевого_листа = base.Columns["ID_Путевого листа"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID_Заправка_ТСМ = new global::System.Data.DataColumn("ID_Заправка ТСМ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Заправка_ТСМ);
                this.columnДата = new global::System.Data.DataColumn("Дата", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата);
                this.columnМарка_ТСМ = new global::System.Data.DataColumn("Марка ТСМ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМарка_ТСМ);
                this.columnКоличество = new global::System.Data.DataColumn("Количество", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКоличество);
                this.columnID_Путевого_листа = new global::System.Data.DataColumn("ID_Путевого листа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Путевого_листа);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Заправка_ТСМ}, true));
                this.columnID_Заправка_ТСМ.AutoIncrement = true;
                this.columnID_Заправка_ТСМ.AutoIncrementSeed = -1;
                this.columnID_Заправка_ТСМ.AutoIncrementStep = -1;
                this.columnID_Заправка_ТСМ.AllowDBNull = false;
                this.columnID_Заправка_ТСМ.ReadOnly = true;
                this.columnID_Заправка_ТСМ.Unique = true;
                this.columnМарка_ТСМ.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Заправка_ТСМRow NewЗаправка_ТСМRow() {
                return ((Заправка_ТСМRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Заправка_ТСМRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Заправка_ТСМRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Заправка_ТСМRowChanged != null)) {
                    this.Заправка_ТСМRowChanged(this, new Заправка_ТСМRowChangeEvent(((Заправка_ТСМRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Заправка_ТСМRowChanging != null)) {
                    this.Заправка_ТСМRowChanging(this, new Заправка_ТСМRowChangeEvent(((Заправка_ТСМRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Заправка_ТСМRowDeleted != null)) {
                    this.Заправка_ТСМRowDeleted(this, new Заправка_ТСМRowChangeEvent(((Заправка_ТСМRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Заправка_ТСМRowDeleting != null)) {
                    this.Заправка_ТСМRowDeleting(this, new Заправка_ТСМRowChangeEvent(((Заправка_ТСМRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveЗаправка_ТСМRow(Заправка_ТСМRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutoparkDB ds = new AutoparkDB();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Заправка_ТСМDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Работа_водителя_и_автомобиляDataTable : global::System.Data.TypedTableBase<Работа_водителя_и_автомобиляRow> {
            
            private global::System.Data.DataColumn columnID_работа_водителя_и_авто;
            
            private global::System.Data.DataColumn columnID_Путевого_листа;
            
            private global::System.Data.DataColumn columnОперации;
            
            private global::System.Data.DataColumn columnПоказания_спидометра;
            
            private global::System.Data.DataColumn columnДата_и_время_фактически;
            
            private global::System.Data.DataColumn columnНулевой_пробег;
            
            private global::System.Data.DataColumn columnВремя_работы_двигателя_час;
            
            private global::System.Data.DataColumn columnВремя_работы_спецоборудования;
            
            private global::System.Data.DataColumn columnДата_и_время_по_графику;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Работа_водителя_и_автомобиляDataTable() {
                this.TableName = "Работа водителя и автомобиля";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Работа_водителя_и_автомобиляDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Работа_водителя_и_автомобиляDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_работа_водителя_и_автоColumn {
                get {
                    return this.columnID_работа_водителя_и_авто;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_Путевого_листаColumn {
                get {
                    return this.columnID_Путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ОперацииColumn {
                get {
                    return this.columnОперации;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Показания_спидометраColumn {
                get {
                    return this.columnПоказания_спидометра;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Дата_и_время_фактическиColumn {
                get {
                    return this.columnДата_и_время_фактически;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Нулевой_пробегColumn {
                get {
                    return this.columnНулевой_пробег;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Время_работы_двигателя_часColumn {
                get {
                    return this.columnВремя_работы_двигателя_час;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Время_работы_спецоборудованияColumn {
                get {
                    return this.columnВремя_работы_спецоборудования;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Дата_и_время_по_графикуColumn {
                get {
                    return this.columnДата_и_время_по_графику;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Работа_водителя_и_автомобиляRow this[int index] {
                get {
                    return ((Работа_водителя_и_автомобиляRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Работа_водителя_и_автомобиляRowChangeEventHandler Работа_водителя_и_автомобиляRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Работа_водителя_и_автомобиляRowChangeEventHandler Работа_водителя_и_автомобиляRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Работа_водителя_и_автомобиляRowChangeEventHandler Работа_водителя_и_автомобиляRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Работа_водителя_и_автомобиляRowChangeEventHandler Работа_водителя_и_автомобиляRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddРабота_водителя_и_автомобиляRow(Работа_водителя_и_автомобиляRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Работа_водителя_и_автомобиляRow AddРабота_водителя_и_автомобиляRow(Путевой_лист_Грузового_автоRow parentПутевой_лист_Грузового_автоRowByFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_грузового_автомобиля, string Операции, int Показания_спидометра, System.DateTime Дата_и_время_фактически, int Нулевой_пробег, int Время_работы_двигателя_час, int Время_работы_спецоборудования, System.DateTime Дата_и_время_по_графику) {
                Работа_водителя_и_автомобиляRow rowРабота_водителя_и_автомобиляRow = ((Работа_водителя_и_автомобиляRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Операции,
                        Показания_спидометра,
                        Дата_и_время_фактически,
                        Нулевой_пробег,
                        Время_работы_двигателя_час,
                        Время_работы_спецоборудования,
                        Дата_и_время_по_графику};
                if ((parentПутевой_лист_Грузового_автоRowByFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_грузового_автомобиля != null)) {
                    columnValuesArray[1] = parentПутевой_лист_Грузового_автоRowByFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_грузового_автомобиля[0];
                }
                rowРабота_водителя_и_автомобиляRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowРабота_водителя_и_автомобиляRow);
                return rowРабота_водителя_и_автомобиляRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Работа_водителя_и_автомобиляRow FindByID_работа_водителя_и_авто(int ID_работа_водителя_и_авто) {
                return ((Работа_водителя_и_автомобиляRow)(this.Rows.Find(new object[] {
                            ID_работа_водителя_и_авто})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Работа_водителя_и_автомобиляDataTable cln = ((Работа_водителя_и_автомобиляDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Работа_водителя_и_автомобиляDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID_работа_водителя_и_авто = base.Columns["ID_работа водителя и авто"];
                this.columnID_Путевого_листа = base.Columns["ID_Путевого листа"];
                this.columnОперации = base.Columns["Операции"];
                this.columnПоказания_спидометра = base.Columns["Показания спидометра"];
                this.columnДата_и_время_фактически = base.Columns["Дата и время фактически"];
                this.columnНулевой_пробег = base.Columns["Нулевой пробег"];
                this.columnВремя_работы_двигателя_час = base.Columns["Время работы двигателя час"];
                this.columnВремя_работы_спецоборудования = base.Columns["Время работы спецоборудования"];
                this.columnДата_и_время_по_графику = base.Columns["Дата и время по графику"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID_работа_водителя_и_авто = new global::System.Data.DataColumn("ID_работа водителя и авто", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_работа_водителя_и_авто);
                this.columnID_Путевого_листа = new global::System.Data.DataColumn("ID_Путевого листа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Путевого_листа);
                this.columnОперации = new global::System.Data.DataColumn("Операции", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОперации);
                this.columnПоказания_спидометра = new global::System.Data.DataColumn("Показания спидометра", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПоказания_спидометра);
                this.columnДата_и_время_фактически = new global::System.Data.DataColumn("Дата и время фактически", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_и_время_фактически);
                this.columnНулевой_пробег = new global::System.Data.DataColumn("Нулевой пробег", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНулевой_пробег);
                this.columnВремя_работы_двигателя_час = new global::System.Data.DataColumn("Время работы двигателя час", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВремя_работы_двигателя_час);
                this.columnВремя_работы_спецоборудования = new global::System.Data.DataColumn("Время работы спецоборудования", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВремя_работы_спецоборудования);
                this.columnДата_и_время_по_графику = new global::System.Data.DataColumn("Дата и время по графику", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_и_время_по_графику);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_работа_водителя_и_авто}, true));
                this.columnID_работа_водителя_и_авто.AutoIncrement = true;
                this.columnID_работа_водителя_и_авто.AutoIncrementSeed = -1;
                this.columnID_работа_водителя_и_авто.AutoIncrementStep = -1;
                this.columnID_работа_водителя_и_авто.AllowDBNull = false;
                this.columnID_работа_водителя_и_авто.ReadOnly = true;
                this.columnID_работа_водителя_и_авто.Unique = true;
                this.columnОперации.AllowDBNull = false;
                this.columnОперации.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Работа_водителя_и_автомобиляRow NewРабота_водителя_и_автомобиляRow() {
                return ((Работа_водителя_и_автомобиляRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Работа_водителя_и_автомобиляRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Работа_водителя_и_автомобиляRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Работа_водителя_и_автомобиляRowChanged != null)) {
                    this.Работа_водителя_и_автомобиляRowChanged(this, new Работа_водителя_и_автомобиляRowChangeEvent(((Работа_водителя_и_автомобиляRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Работа_водителя_и_автомобиляRowChanging != null)) {
                    this.Работа_водителя_и_автомобиляRowChanging(this, new Работа_водителя_и_автомобиляRowChangeEvent(((Работа_водителя_и_автомобиляRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Работа_водителя_и_автомобиляRowDeleted != null)) {
                    this.Работа_водителя_и_автомобиляRowDeleted(this, new Работа_водителя_и_автомобиляRowChangeEvent(((Работа_водителя_и_автомобиляRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Работа_водителя_и_автомобиляRowDeleting != null)) {
                    this.Работа_водителя_и_автомобиляRowDeleting(this, new Работа_водителя_и_автомобиляRowChangeEvent(((Работа_водителя_и_автомобиляRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveРабота_водителя_и_автомобиляRow(Работа_водителя_и_автомобиляRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutoparkDB ds = new AutoparkDB();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Работа_водителя_и_автомобиляDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ОтделыDataTable : global::System.Data.TypedTableBase<ОтделыRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnНазвание_отдела;
            
            private global::System.Data.DataColumn columnАббревиатура;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ОтделыDataTable() {
                this.TableName = "Отделы";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ОтделыDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ОтделыDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Название_отделаColumn {
                get {
                    return this.columnНазвание_отдела;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn АббревиатураColumn {
                get {
                    return this.columnАббревиатура;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ОтделыRow this[int index] {
                get {
                    return ((ОтделыRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ОтделыRowChangeEventHandler ОтделыRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ОтделыRowChangeEventHandler ОтделыRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ОтделыRowChangeEventHandler ОтделыRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ОтделыRowChangeEventHandler ОтделыRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddОтделыRow(ОтделыRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ОтделыRow AddОтделыRow(string Название_отдела, string Аббревиатура) {
                ОтделыRow rowОтделыRow = ((ОтделыRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Название_отдела,
                        Аббревиатура};
                rowОтделыRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowОтделыRow);
                return rowОтделыRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ОтделыRow FindByID(int ID) {
                return ((ОтделыRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ОтделыDataTable cln = ((ОтделыDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ОтделыDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnНазвание_отдела = base.Columns["Название отдела"];
                this.columnАббревиатура = base.Columns["Аббревиатура"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnНазвание_отдела = new global::System.Data.DataColumn("Название отдела", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНазвание_отдела);
                this.columnАббревиатура = new global::System.Data.DataColumn("Аббревиатура", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnАббревиатура);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnНазвание_отдела.MaxLength = 100;
                this.columnАббревиатура.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ОтделыRow NewОтделыRow() {
                return ((ОтделыRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ОтделыRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ОтделыRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ОтделыRowChanged != null)) {
                    this.ОтделыRowChanged(this, new ОтделыRowChangeEvent(((ОтделыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ОтделыRowChanging != null)) {
                    this.ОтделыRowChanging(this, new ОтделыRowChangeEvent(((ОтделыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ОтделыRowDeleted != null)) {
                    this.ОтделыRowDeleted(this, new ОтделыRowChangeEvent(((ОтделыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ОтделыRowDeleting != null)) {
                    this.ОтделыRowDeleting(this, new ОтделыRowChangeEvent(((ОтделыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveОтделыRow(ОтделыRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutoparkDB ds = new AutoparkDB();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ОтделыDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Подвижной_составRow : global::System.Data.DataRow {
            
            private Подвижной_составDataTable tableПодвижной_состав;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Подвижной_составRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableПодвижной_состав = ((Подвижной_составDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableПодвижной_состав.IDColumn]));
                }
                set {
                    this[this.tableПодвижной_состав.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Марка_и_модель {
                get {
                    return ((string)(this[this.tableПодвижной_состав.Марка_и_модельColumn]));
                }
                set {
                    this[this.tableПодвижной_состав.Марка_и_модельColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Гаражный_номер {
                get {
                    if (this.IsГаражный_номерNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableПодвижной_состав.Гаражный_номерColumn]));
                    }
                }
                set {
                    this[this.tableПодвижной_состав.Гаражный_номерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Тип_двигателя {
                get {
                    if (this.IsТип_двигателяNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableПодвижной_состав.Тип_двигателяColumn]));
                    }
                }
                set {
                    this[this.tableПодвижной_состав.Тип_двигателяColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Год_выпуска {
                get {
                    try {
                        return ((int)(this[this.tableПодвижной_состав.Год_выпускаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Год выпуска\' in table \'Подвижной состав\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableПодвижной_состав.Год_выпускаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Инвентарный_номер {
                get {
                    if (this.IsИнвентарный_номерNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableПодвижной_состав.Инвентарный_номерColumn]));
                    }
                }
                set {
                    this[this.tableПодвижной_состав.Инвентарный_номерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Вид_топлива {
                get {
                    if (this.IsВид_топливаNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableПодвижной_состав.Вид_топливаColumn]));
                    }
                }
                set {
                    this[this.tableПодвижной_состав.Вид_топливаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime дата_окончания_страховки {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableПодвижной_состав.дата_окончания_страховкиColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'дата окончания страховки\' in table \'Подвижной состав\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableПодвижной_состав.дата_окончания_страховкиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Тип_назначения_авто {
                get {
                    try {
                        return ((string)(this[this.tableПодвижной_состав.Тип_назначения_автоColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Тип назначения авто\' in table \'Подвижной состав\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableПодвижной_состав.Тип_назначения_автоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Гос_номер {
                get {
                    return ((string)(this[this.tableПодвижной_состав.Гос_номерColumn]));
                }
                set {
                    this[this.tableПодвижной_состав.Гос_номерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsГаражный_номерNull() {
                return this.IsNull(this.tableПодвижной_состав.Гаражный_номерColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetГаражный_номерNull() {
                this[this.tableПодвижной_состав.Гаражный_номерColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsТип_двигателяNull() {
                return this.IsNull(this.tableПодвижной_состав.Тип_двигателяColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetТип_двигателяNull() {
                this[this.tableПодвижной_состав.Тип_двигателяColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsГод_выпускаNull() {
                return this.IsNull(this.tableПодвижной_состав.Год_выпускаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetГод_выпускаNull() {
                this[this.tableПодвижной_состав.Год_выпускаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsИнвентарный_номерNull() {
                return this.IsNull(this.tableПодвижной_состав.Инвентарный_номерColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetИнвентарный_номерNull() {
                this[this.tableПодвижной_состав.Инвентарный_номерColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsВид_топливаNull() {
                return this.IsNull(this.tableПодвижной_состав.Вид_топливаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetВид_топливаNull() {
                this[this.tableПодвижной_состав.Вид_топливаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isдата_окончания_страховкиNull() {
                return this.IsNull(this.tableПодвижной_состав.дата_окончания_страховкиColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setдата_окончания_страховкиNull() {
                this[this.tableПодвижной_состав.дата_окончания_страховкиColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsТип_назначения_автоNull() {
                return this.IsNull(this.tableПодвижной_состав.Тип_назначения_автоColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetТип_назначения_автоNull() {
                this[this.tableПодвижной_состав.Тип_назначения_автоColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоRow[] GetПутевой_лист_Грузового_автоRows() {
                if ((this.Table.ChildRelations["FK_Путевой лист Грузового авто_Подвижной состав"] == null)) {
                    return new Путевой_лист_Грузового_автоRow[0];
                }
                else {
                    return ((Путевой_лист_Грузового_автоRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Путевой лист Грузового авто_Подвижной состав"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PutevoiListLegkTableRow[] GetPutevoiListLegkTableRows() {
                if ((this.Table.ChildRelations["FK_Путевой лист легкового автомобиля_Подвижной состав1"] == null)) {
                    return new PutevoiListLegkTableRow[0];
                }
                else {
                    return ((PutevoiListLegkTableRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Путевой лист легкового автомобиля_Подвижной состав1"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class _Нормы_расхода_ГСМ_на_авто_тракторыRow : global::System.Data.DataRow {
            
            private _Нормы_расхода_ГСМ_на_авто_тракторыDataTable _tableНормы_расхода_ГСМ_на_авто_тракторы;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal _Нормы_расхода_ГСМ_на_авто_тракторыRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this._tableНормы_расхода_ГСМ_на_авто_тракторы = ((_Нормы_расхода_ГСМ_на_авто_тракторыDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.IDColumn]));
                }
                set {
                    this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Марка_автомобиля {
                get {
                    return ((string)(this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.Марка_автомобиляColumn]));
                }
                set {
                    this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.Марка_автомобиляColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Вид_топлива {
                get {
                    try {
                        return ((string)(this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.Вид_топливаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Вид топлива\' in table \'Нормы расхода ГСМ на авто,тракторы\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.Вид_топливаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double _Норма_расхода_на_100_км_летняя_6_ {
                get {
                    try {
                        return ((double)(this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Норма_расхода_на_100_км_летняя_6_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Норма расхода на 100 км летняя 6%\' in table \'Нормы расхода " +
                                "ГСМ на авто,тракторы\' is DBNull.", e);
                    }
                }
                set {
                    this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Норма_расхода_на_100_км_летняя_6_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Марка_двигателя {
                get {
                    try {
                        return ((string)(this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.Марка_двигателяColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Марка двигателя\' in table \'Нормы расхода ГСМ на авто,тракто" +
                                "ры\' is DBNull.", e);
                    }
                }
                set {
                    this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.Марка_двигателяColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Норма_на_машино_час_летняя {
                get {
                    try {
                        return ((double)(this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.Норма_на_машино_час_летняяColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Норма на машино час летняя\' in table \'Нормы расхода ГСМ на " +
                                "авто,тракторы\' is DBNull.", e);
                    }
                }
                set {
                    this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.Норма_на_машино_час_летняяColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double _Н_ма_расх_масел_на_100л_р_да_топлива_моторное_л {
                get {
                    try {
                        return ((double)(this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_топлива_моторное_лColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Н-ма расх_масел на 100л р-да топлива моторное,л\' in table \'" +
                                "Нормы расхода ГСМ на авто,тракторы\' is DBNull.", e);
                    }
                }
                set {
                    this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_топлива_моторное_лColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double _Н_ма_расх_масел_на_100л_р_да_трансмиссионное_л {
                get {
                    try {
                        return ((double)(this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_трансмиссионное_лColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Н-ма расх_масел на 100л р-да трансмиссионное,л\' in table \'Н" +
                                "ормы расхода ГСМ на авто,тракторы\' is DBNull.", e);
                    }
                }
                set {
                    this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_трансмиссионное_лColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double _Н_ма_расх_масел_на_100л_р_да_топлива_специальное_л {
                get {
                    try {
                        return ((double)(this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_топлива_специальное_лColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Н-ма расх_масел на 100л р-да топлива специальное,л\' in tabl" +
                                "e \'Нормы расхода ГСМ на авто,тракторы\' is DBNull.", e);
                    }
                }
                set {
                    this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_топлива_специальное_лColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double _Н_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_л {
                get {
                    try {
                        return ((double)(this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_лColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Н-ма расх_масел на 100л р-да топлива пластичные смазки,л\' i" +
                                "n table \'Нормы расхода ГСМ на авто,тракторы\' is DBNull.", e);
                    }
                }
                set {
                    this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_лColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsВид_топливаNull() {
                return this.IsNull(this._tableНормы_расхода_ГСМ_на_авто_тракторы.Вид_топливаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetВид_топливаNull() {
                this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.Вид_топливаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_Норма_расхода_на_100_км_летняя_6_Null() {
                return this.IsNull(this._tableНормы_расхода_ГСМ_на_авто_тракторы._Норма_расхода_на_100_км_летняя_6_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_Норма_расхода_на_100_км_летняя_6_Null() {
                this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Норма_расхода_на_100_км_летняя_6_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsМарка_двигателяNull() {
                return this.IsNull(this._tableНормы_расхода_ГСМ_на_авто_тракторы.Марка_двигателяColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetМарка_двигателяNull() {
                this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.Марка_двигателяColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsНорма_на_машино_час_летняяNull() {
                return this.IsNull(this._tableНормы_расхода_ГСМ_на_авто_тракторы.Норма_на_машино_час_летняяColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetНорма_на_машино_час_летняяNull() {
                this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.Норма_на_машино_час_летняяColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_Н_ма_расх_масел_на_100л_р_да_топлива_моторное_лNull() {
                return this.IsNull(this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_топлива_моторное_лColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_Н_ма_расх_масел_на_100л_р_да_топлива_моторное_лNull() {
                this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_топлива_моторное_лColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_Н_ма_расх_масел_на_100л_р_да_трансмиссионное_лNull() {
                return this.IsNull(this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_трансмиссионное_лColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_Н_ма_расх_масел_на_100л_р_да_трансмиссионное_лNull() {
                this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_трансмиссионное_лColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_Н_ма_расх_масел_на_100л_р_да_топлива_специальное_лNull() {
                return this.IsNull(this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_топлива_специальное_лColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_Н_ма_расх_масел_на_100л_р_да_топлива_специальное_лNull() {
                this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_топлива_специальное_лColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_Н_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_лNull() {
                return this.IsNull(this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_лColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_Н_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_лNull() {
                this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_лColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class VoditeliAutoRow : global::System.Data.DataRow {
            
            private VoditeliAutoDataTable tableVoditeliAuto;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal VoditeliAutoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVoditeliAuto = ((VoditeliAutoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ФИО {
                get {
                    return ((string)(this[this.tableVoditeliAuto.ФИОColumn]));
                }
                set {
                    this[this.tableVoditeliAuto.ФИОColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int табельный__номер {
                get {
                    return ((int)(this[this.tableVoditeliAuto.табельный__номерColumn]));
                }
                set {
                    this[this.tableVoditeliAuto.табельный__номерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string серия_водительского_удостоверения {
                get {
                    return ((string)(this[this.tableVoditeliAuto.серия_водительского_удостоверенияColumn]));
                }
                set {
                    this[this.tableVoditeliAuto.серия_водительского_удостоверенияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int номер_водительского_удостоверения {
                get {
                    return ((int)(this[this.tableVoditeliAuto.номер_водительского_удостоверенияColumn]));
                }
                set {
                    this[this.tableVoditeliAuto.номер_водительского_удостоверенияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int классность {
                get {
                    return ((int)(this[this.tableVoditeliAuto.классностьColumn]));
                }
                set {
                    this[this.tableVoditeliAuto.классностьColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime срок_действия_мед__справки {
                get {
                    return ((global::System.DateTime)(this[this.tableVoditeliAuto.срок_действия_мед__справкиColumn]));
                }
                set {
                    this[this.tableVoditeliAuto.срок_действия_мед__справкиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Марка_и_модель {
                get {
                    return ((string)(this[this.tableVoditeliAuto.Марка_и_модельColumn]));
                }
                set {
                    this[this.tableVoditeliAuto.Марка_и_модельColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Гос_номер {
                get {
                    return ((string)(this[this.tableVoditeliAuto.Гос_номерColumn]));
                }
                set {
                    this[this.tableVoditeliAuto.Гос_номерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Гаражный_номер {
                get {
                    return ((string)(this[this.tableVoditeliAuto.Гаражный_номерColumn]));
                }
                set {
                    this[this.tableVoditeliAuto.Гаражный_номерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Тип_двигателя {
                get {
                    return ((string)(this[this.tableVoditeliAuto.Тип_двигателяColumn]));
                }
                set {
                    this[this.tableVoditeliAuto.Тип_двигателяColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Год_выпуска {
                get {
                    return ((global::System.DateTime)(this[this.tableVoditeliAuto.Год_выпускаColumn]));
                }
                set {
                    this[this.tableVoditeliAuto.Год_выпускаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Инвентарный_номер {
                get {
                    return ((string)(this[this.tableVoditeliAuto.Инвентарный_номерColumn]));
                }
                set {
                    this[this.tableVoditeliAuto.Инвентарный_номерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Вид_топлива {
                get {
                    return ((string)(this[this.tableVoditeliAuto.Вид_топливаColumn]));
                }
                set {
                    this[this.tableVoditeliAuto.Вид_топливаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableVoditeliAuto.IDColumn]));
                }
                set {
                    this[this.tableVoditeliAuto.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime дата_окончания_страховки {
                get {
                    return ((global::System.DateTime)(this[this.tableVoditeliAuto.дата_окончания_страховкиColumn]));
                }
                set {
                    this[this.tableVoditeliAuto.дата_окончания_страховкиColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Путевые_листы_легковыеRow : global::System.Data.DataRow {
            
            private Путевые_листы_легковыеDataTable tableПутевые_листы_легковые;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Путевые_листы_легковыеRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableПутевые_листы_легковые = ((Путевые_листы_легковыеDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Путевого_листа {
                get {
                    return ((int)(this[this.tableПутевые_листы_легковые.ID_Путевого_листаColumn]));
                }
                set {
                    this[this.tableПутевые_листы_легковые.ID_Путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Номер_путевого_листа {
                get {
                    try {
                        return ((int)(this[this.tableПутевые_листы_легковые.Номер_путевого_листаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Номер путевого листа\' in table \'Путевые листы легковые\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableПутевые_листы_легковые.Номер_путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime За_период_с {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableПутевые_листы_легковые.За_период_сColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'За период с\' in table \'Путевые листы легковые\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableПутевые_листы_легковые.За_период_сColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime За_период_по {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableПутевые_листы_легковые.За_период_поColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'За период по\' in table \'Путевые листы легковые\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableПутевые_листы_легковые.За_период_поColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int табельный__номер {
                get {
                    return ((int)(this[this.tableПутевые_листы_легковые.табельный__номерColumn]));
                }
                set {
                    this[this.tableПутевые_листы_легковые.табельный__номерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ФИО {
                get {
                    try {
                        return ((string)(this[this.tableПутевые_листы_легковые.ФИОColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ФИО\' in table \'Путевые листы легковые\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableПутевые_листы_легковые.ФИОColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Марка_и_модель {
                get {
                    return ((string)(this[this.tableПутевые_листы_легковые.Марка_и_модельColumn]));
                }
                set {
                    this[this.tableПутевые_листы_легковые.Марка_и_модельColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Гос_номер {
                get {
                    return ((string)(this[this.tableПутевые_листы_легковые.Гос_номерColumn]));
                }
                set {
                    this[this.tableПутевые_листы_легковые.Гос_номерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Водительское_удостоверение {
                get {
                    try {
                        return ((string)(this[this.tableПутевые_листы_легковые.Водительское_удостоверениеColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Водительское удостоверение\' in table \'Путевые листы легковы" +
                                "е\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableПутевые_листы_легковые.Водительское_удостоверениеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Гаражный_номер {
                get {
                    try {
                        return ((string)(this[this.tableПутевые_листы_легковые.Гаражный_номерColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Гаражный номер\' in table \'Путевые листы легковые\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableПутевые_листы_легковые.Гаражный_номерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Автомобиль {
                get {
                    try {
                        return ((int)(this[this.tableПутевые_листы_легковые.ID_АвтомобильColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID_Автомобиль\' in table \'Путевые листы легковые\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableПутевые_листы_легковые.ID_АвтомобильColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Водитель {
                get {
                    try {
                        return ((int)(this[this.tableПутевые_листы_легковые.ID_ВодительColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID_Водитель\' in table \'Путевые листы легковые\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableПутевые_листы_легковые.ID_ВодительColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Личный_составRow Личный_составRow {
                get {
                    return ((Личный_составRow)(this.GetParentRow(this.Table.ParentRelations["FK_Путевой лист Грузового авто_личный состав1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Путевой лист Грузового авто_личный состав1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsНомер_путевого_листаNull() {
                return this.IsNull(this.tableПутевые_листы_легковые.Номер_путевого_листаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetНомер_путевого_листаNull() {
                this[this.tableПутевые_листы_легковые.Номер_путевого_листаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsЗа_период_сNull() {
                return this.IsNull(this.tableПутевые_листы_легковые.За_период_сColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetЗа_период_сNull() {
                this[this.tableПутевые_листы_легковые.За_период_сColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsЗа_период_поNull() {
                return this.IsNull(this.tableПутевые_листы_легковые.За_период_поColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetЗа_период_поNull() {
                this[this.tableПутевые_листы_легковые.За_период_поColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsФИОNull() {
                return this.IsNull(this.tableПутевые_листы_легковые.ФИОColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetФИОNull() {
                this[this.tableПутевые_листы_легковые.ФИОColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsВодительское_удостоверениеNull() {
                return this.IsNull(this.tableПутевые_листы_легковые.Водительское_удостоверениеColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetВодительское_удостоверениеNull() {
                this[this.tableПутевые_листы_легковые.Водительское_удостоверениеColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsГаражный_номерNull() {
                return this.IsNull(this.tableПутевые_листы_легковые.Гаражный_номерColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetГаражный_номерNull() {
                this[this.tableПутевые_листы_легковые.Гаражный_номерColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsID_АвтомобильNull() {
                return this.IsNull(this.tableПутевые_листы_легковые.ID_АвтомобильColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetID_АвтомобильNull() {
                this[this.tableПутевые_листы_легковые.ID_АвтомобильColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsID_ВодительNull() {
                return this.IsNull(this.tableПутевые_листы_легковые.ID_ВодительColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetID_ВодительNull() {
                this[this.tableПутевые_листы_легковые.ID_ВодительColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоRow[] GetПутевой_лист_Грузового_автоRows() {
                if ((this.Table.ChildRelations["FK_Путевой лист Грузового авто_личный состав3"] == null)) {
                    return new Путевой_лист_Грузового_автоRow[0];
                }
                else {
                    return ((Путевой_лист_Грузового_автоRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Путевой лист Грузового авто_личный состав3"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PutevoiListLegkTableRow[] GetPutevoiListLegkTableRows() {
                if ((this.Table.ChildRelations["FK_Путевой лист легкового автомобиля_личный состав"] == null)) {
                    return new PutevoiListLegkTableRow[0];
                }
                else {
                    return ((PutevoiListLegkTableRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Путевой лист легкового автомобиля_личный состав"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Путевые_листы_грузовыеRow : global::System.Data.DataRow {
            
            private Путевые_листы_грузовыеDataTable tableПутевые_листы_грузовые;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Путевые_листы_грузовыеRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableПутевые_листы_грузовые = ((Путевые_листы_грузовыеDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Путевого_листа {
                get {
                    return ((int)(this[this.tableПутевые_листы_грузовые.ID_Путевого_листаColumn]));
                }
                set {
                    this[this.tableПутевые_листы_грузовые.ID_Путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Номер_путевого_листа {
                get {
                    return ((int)(this[this.tableПутевые_листы_грузовые.Номер_путевого_листаColumn]));
                }
                set {
                    this[this.tableПутевые_листы_грузовые.Номер_путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Дата_путевого_листа {
                get {
                    return ((global::System.DateTime)(this[this.tableПутевые_листы_грузовые.Дата_путевого_листаColumn]));
                }
                set {
                    this[this.tableПутевые_листы_грузовые.Дата_путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int табельный__номер {
                get {
                    return ((int)(this[this.tableПутевые_листы_грузовые.табельный__номерColumn]));
                }
                set {
                    this[this.tableПутевые_листы_грузовые.табельный__номерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ФИО {
                get {
                    try {
                        return ((string)(this[this.tableПутевые_листы_грузовые.ФИОColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ФИО\' in table \'Путевые листы грузовые\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableПутевые_листы_грузовые.ФИОColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Марка_и_модель {
                get {
                    return ((string)(this[this.tableПутевые_листы_грузовые.Марка_и_модельColumn]));
                }
                set {
                    this[this.tableПутевые_листы_грузовые.Марка_и_модельColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Гаражный_номер {
                get {
                    try {
                        return ((string)(this[this.tableПутевые_листы_грузовые.Гаражный_номерColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Гаражный номер\' in table \'Путевые листы грузовые\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableПутевые_листы_грузовые.Гаражный_номерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Гос_номер {
                get {
                    return ((string)(this[this.tableПутевые_листы_грузовые.Гос_номерColumn]));
                }
                set {
                    this[this.tableПутевые_листы_грузовые.Гос_номерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Личный_составRow Личный_составRow {
                get {
                    return ((Личный_составRow)(this.GetParentRow(this.Table.ParentRelations["FK_Путевой лист Грузового авто_личный состав"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Путевой лист Грузового авто_личный состав"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsФИОNull() {
                return this.IsNull(this.tableПутевые_листы_грузовые.ФИОColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetФИОNull() {
                this[this.tableПутевые_листы_грузовые.ФИОColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsГаражный_номерNull() {
                return this.IsNull(this.tableПутевые_листы_грузовые.Гаражный_номерColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetГаражный_номерNull() {
                this[this.tableПутевые_листы_грузовые.Гаражный_номерColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PutevoiListLegkTableRow[] GetPutevoiListLegkTableRows() {
                if ((this.Table.ChildRelations["FK_Путевой лист легкового автомобиля_личный состав2"] == null)) {
                    return new PutevoiListLegkTableRow[0];
                }
                else {
                    return ((PutevoiListLegkTableRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Путевой лист легкового автомобиля_личный состав2"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Путевой_лист_Грузового_автоRow : global::System.Data.DataRow {
            
            private Путевой_лист_Грузового_автоDataTable tableПутевой_лист_Грузового_авто;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Путевой_лист_Грузового_автоRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableПутевой_лист_Грузового_авто = ((Путевой_лист_Грузового_автоDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Путевого_листа {
                get {
                    return ((int)(this[this.tableПутевой_лист_Грузового_авто.ID_Путевого_листаColumn]));
                }
                set {
                    this[this.tableПутевой_лист_Грузового_авто.ID_Путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Номер_путевого_листа {
                get {
                    return ((int)(this[this.tableПутевой_лист_Грузового_авто.Номер_путевого_листаColumn]));
                }
                set {
                    this[this.tableПутевой_лист_Грузового_авто.Номер_путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Дата_путевого_листа {
                get {
                    return ((global::System.DateTime)(this[this.tableПутевой_лист_Грузового_авто.Дата_путевого_листаColumn]));
                }
                set {
                    this[this.tableПутевой_лист_Грузового_авто.Дата_путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Водителя {
                get {
                    return ((int)(this[this.tableПутевой_лист_Грузового_авто.ID_ВодителяColumn]));
                }
                set {
                    this[this.tableПутевой_лист_Грузового_авто.ID_ВодителяColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Автомобиля {
                get {
                    return ((int)(this[this.tableПутевой_лист_Грузового_авто.ID_АвтомобиляColumn]));
                }
                set {
                    this[this.tableПутевой_лист_Грузового_авто.ID_АвтомобиляColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Подвижной_составRow Подвижной_составRow {
                get {
                    return ((Подвижной_составRow)(this.GetParentRow(this.Table.ParentRelations["FK_Путевой лист Грузового авто_Подвижной состав"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Путевой лист Грузового авто_Подвижной состав"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Личный_составRow Личный_составRow {
                get {
                    return ((Личный_составRow)(this.GetParentRow(this.Table.ParentRelations["FK_Путевой лист Грузового авто_личный состав2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Путевой лист Грузового авто_личный состав2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевые_листы_легковыеRow Путевые_листы_легковыеRow {
                get {
                    return ((Путевые_листы_легковыеRow)(this.GetParentRow(this.Table.ParentRelations["FK_Путевой лист Грузового авто_личный состав3"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Путевой лист Грузового авто_личный состав3"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Задание_водителюRow[] GetЗадание_водителюRows() {
                if ((this.Table.ChildRelations["FK_Задание водителю_Путевой лист Грузового авто"] == null)) {
                    return new Задание_водителюRow[0];
                }
                else {
                    return ((Задание_водителюRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Задание водителю_Путевой лист Грузового авто"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Движение_ТСМRow[] GetДвижение_ТСМRows() {
                if ((this.Table.ChildRelations["FK_Движение ТСМ_Путевой лист Грузового авто"] == null)) {
                    return new Движение_ТСМRow[0];
                }
                else {
                    return ((Движение_ТСМRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Движение ТСМ_Путевой лист Грузового авто"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Работа_водителя_и_автомобиляRow[] GetРабота_водителя_и_автомобиляRows() {
                if ((this.Table.ChildRelations["FK_Данные Путевой лист легкового авто_Путевой лист грузового автомобиля"] == null)) {
                    return new Работа_водителя_и_автомобиляRow[0];
                }
                else {
                    return ((Работа_водителя_и_автомобиляRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Данные Путевой лист легкового авто_Путевой лист грузового автомобиля"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PutevoiListLegkTableRow : global::System.Data.DataRow {
            
            private PutevoiListLegkTableDataTable tablePutevoiListLegkTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PutevoiListLegkTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePutevoiListLegkTable = ((PutevoiListLegkTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Путевого_листа {
                get {
                    return ((int)(this[this.tablePutevoiListLegkTable.ID_Путевого_листаColumn]));
                }
                set {
                    this[this.tablePutevoiListLegkTable.ID_Путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Номер_путевого_листа {
                get {
                    try {
                        return ((int)(this[this.tablePutevoiListLegkTable.Номер_путевого_листаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Номер путевого листа\' in table \'PutevoiListLegkTable\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePutevoiListLegkTable.Номер_путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime За_период_с {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePutevoiListLegkTable.За_период_сColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'За период с\' in table \'PutevoiListLegkTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePutevoiListLegkTable.За_период_сColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime За_период_по {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePutevoiListLegkTable.За_период_поColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'За период по\' in table \'PutevoiListLegkTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePutevoiListLegkTable.За_период_поColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Автомобиль {
                get {
                    try {
                        return ((int)(this[this.tablePutevoiListLegkTable.ID_АвтомобильColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID_Автомобиль\' in table \'PutevoiListLegkTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePutevoiListLegkTable.ID_АвтомобильColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Водитель {
                get {
                    try {
                        return ((int)(this[this.tablePutevoiListLegkTable.ID_ВодительColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID_Водитель\' in table \'PutevoiListLegkTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePutevoiListLegkTable.ID_ВодительColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Отдела {
                get {
                    try {
                        return ((int)(this[this.tablePutevoiListLegkTable.ID_ОтделаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID_Отдела\' in table \'PutevoiListLegkTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePutevoiListLegkTable.ID_ОтделаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Подвижной_составRow Подвижной_составRow {
                get {
                    return ((Подвижной_составRow)(this.GetParentRow(this.Table.ParentRelations["FK_Путевой лист легкового автомобиля_Подвижной состав1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Путевой лист легкового автомобиля_Подвижной состав1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Личный_составRow Личный_составRow {
                get {
                    return ((Личный_составRow)(this.GetParentRow(this.Table.ParentRelations["FK_Путевой лист легкового автомобиля_личный состав4"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Путевой лист легкового автомобиля_личный состав4"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевые_листы_грузовыеRow Путевые_листы_грузовыеRow {
                get {
                    return ((Путевые_листы_грузовыеRow)(this.GetParentRow(this.Table.ParentRelations["FK_Путевой лист легкового автомобиля_личный состав2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Путевой лист легкового автомобиля_личный состав2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ОтделыRow ОтделыRow {
                get {
                    return ((ОтделыRow)(this.GetParentRow(this.Table.ParentRelations["FK_Путевой лист легкового_id_отдела"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Путевой лист легкового_id_отдела"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевые_листы_легковыеRow Путевые_листы_легковыеRow {
                get {
                    return ((Путевые_листы_легковыеRow)(this.GetParentRow(this.Table.ParentRelations["FK_Путевой лист легкового автомобиля_личный состав"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Путевой лист легкового автомобиля_личный состав"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsНомер_путевого_листаNull() {
                return this.IsNull(this.tablePutevoiListLegkTable.Номер_путевого_листаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetНомер_путевого_листаNull() {
                this[this.tablePutevoiListLegkTable.Номер_путевого_листаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsЗа_период_сNull() {
                return this.IsNull(this.tablePutevoiListLegkTable.За_период_сColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetЗа_период_сNull() {
                this[this.tablePutevoiListLegkTable.За_период_сColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsЗа_период_поNull() {
                return this.IsNull(this.tablePutevoiListLegkTable.За_период_поColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetЗа_период_поNull() {
                this[this.tablePutevoiListLegkTable.За_период_поColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsID_АвтомобильNull() {
                return this.IsNull(this.tablePutevoiListLegkTable.ID_АвтомобильColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetID_АвтомобильNull() {
                this[this.tablePutevoiListLegkTable.ID_АвтомобильColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsID_ВодительNull() {
                return this.IsNull(this.tablePutevoiListLegkTable.ID_ВодительColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetID_ВодительNull() {
                this[this.tablePutevoiListLegkTable.ID_ВодительColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsID_ОтделаNull() {
                return this.IsNull(this.tablePutevoiListLegkTable.ID_ОтделаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetID_ОтделаNull() {
                this[this.tablePutevoiListLegkTable.ID_ОтделаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Данные_Путевой_лист_легкового_автоRow[] GetДанные_Путевой_лист_легкового_автоRows() {
                if ((this.Table.ChildRelations["FK_Данные Путевой лист легкового авто_Путевой лист легкового автомобиля1"] == null)) {
                    return new Данные_Путевой_лист_легкового_автоRow[0];
                }
                else {
                    return ((Данные_Путевой_лист_легкового_автоRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Данные Путевой лист легкового авто_Путевой лист легкового автомобиля1"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Данные_Путевой_лист_легкового_автоRow : global::System.Data.DataRow {
            
            private Данные_Путевой_лист_легкового_автоDataTable tableДанные_Путевой_лист_легкового_авто;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Данные_Путевой_лист_легкового_автоRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableДанные_Путевой_лист_легкового_авто = ((Данные_Путевой_лист_легкового_автоDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id_Данных {
                get {
                    return ((int)(this[this.tableДанные_Путевой_лист_легкового_авто.id_ДанныхColumn]));
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.id_ДанныхColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Путевого_листа {
                get {
                    try {
                        return ((int)(this[this.tableДанные_Путевой_лист_легкового_авто.ID_Путевого_листаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID_Путевого листа\' in table \'Данные Путевой лист легкового " +
                                "авто\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.ID_Путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Число {
                get {
                    return ((global::System.DateTime)(this[this.tableДанные_Путевой_лист_легкового_авто.ЧислоColumn]));
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.ЧислоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan Время_выезда {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tableДанные_Путевой_лист_легкового_авто.Время_выездаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Время выезда\' in table \'Данные Путевой лист легкового авто\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Время_выездаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan Время_возвращения {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tableДанные_Путевой_лист_легкового_авто.Время_возвращенияColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Время возвращения\' in table \'Данные Путевой лист легкового " +
                                "авто\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Время_возвращенияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan Время_в_наряде {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tableДанные_Путевой_лист_легкового_авто.Время_в_нарядеColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Время в наряде\' in table \'Данные Путевой лист легкового авт" +
                                "о\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Время_в_нарядеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Показания_спидометра_при_выезде {
                get {
                    try {
                        return ((int)(this[this.tableДанные_Путевой_лист_легкового_авто.Показания_спидометра_при_выездеColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Показания спидометра при выезде\' in table \'Данные Путевой л" +
                                "ист легкового авто\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Показания_спидометра_при_выездеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Показания_спидометра_при_возвращении {
                get {
                    try {
                        return ((int)(this[this.tableДанные_Путевой_лист_легкового_авто.Показания_спидометра_при_возвращенииColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Показания спидометра при возвращении\' in table \'Данные Путе" +
                                "вой лист легкового авто\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Показания_спидометра_при_возвращенииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Пробег_км {
                get {
                    try {
                        return ((int)(this[this.tableДанные_Путевой_лист_легкового_авто.Пробег_кмColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Пробег км\' in table \'Данные Путевой лист легкового авто\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Пробег_кмColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Остаток_топлива_при_выезде {
                get {
                    try {
                        return ((double)(this[this.tableДанные_Путевой_лист_легкового_авто.Остаток_топлива_при_выездеColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Остаток топлива при выезде\' in table \'Данные Путевой лист л" +
                                "егкового авто\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Остаток_топлива_при_выездеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Остаток_топлива_при_возвращении {
                get {
                    try {
                        return ((double)(this[this.tableДанные_Путевой_лист_легкового_авто.Остаток_топлива_при_возвращенииColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Остаток топлива при возвращении\' in table \'Данные Путевой л" +
                                "ист легкового авто\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Остаток_топлива_при_возвращенииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Заправлено_топлива_л {
                get {
                    try {
                        return ((double)(this[this.tableДанные_Путевой_лист_легкового_авто.Заправлено_топлива_лColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Заправлено топлива л\' in table \'Данные Путевой лист легково" +
                                "го авто\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Заправлено_топлива_лColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string _Дата_и___чека_АЗС {
                get {
                    try {
                        return ((string)(this[this.tableДанные_Путевой_лист_легкового_авто._Дата_и___чека_АЗСColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Дата и № чека АЗС\' in table \'Данные Путевой лист легкового " +
                                "авто\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто._Дата_и___чека_АЗСColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Расход_топлива_по_норме {
                get {
                    try {
                        return ((double)(this[this.tableДанные_Путевой_лист_легкового_авто.Расход_топлива_по_нормеColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Расход топлива по норме\' in table \'Данные Путевой лист легк" +
                                "ового авто\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Расход_топлива_по_нормеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Расход_топлива_фактически {
                get {
                    try {
                        return ((double)(this[this.tableДанные_Путевой_лист_легкового_авто.Расход_топлива_фактическиColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Расход топлива фактически\' in table \'Данные Путевой лист ле" +
                                "гкового авто\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Расход_топлива_фактическиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Расход_топлива_экономия_перерасход {
                get {
                    try {
                        return ((double)(this[this.tableДанные_Путевой_лист_легкового_авто.Расход_топлива_экономия_перерасходColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Расход топлива экономия перерасход\' in table \'Данные Путево" +
                                "й лист легкового авто\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Расход_топлива_экономия_перерасходColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Маршрут_перевозки_откуда {
                get {
                    try {
                        return ((string)(this[this.tableДанные_Путевой_лист_легкового_авто.Маршрут_перевозки_откудаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Маршрут перевозки откуда\' in table \'Данные Путевой лист лег" +
                                "кового авто\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Маршрут_перевозки_откудаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Маршрут_перевозки_куда {
                get {
                    try {
                        return ((string)(this[this.tableДанные_Путевой_лист_легкового_авто.Маршрут_перевозки_кудаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Маршрут перевозки куда\' in table \'Данные Путевой лист легко" +
                                "вого авто\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Маршрут_перевозки_кудаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PutevoiListLegkTableRow PutevoiListLegkTableRow {
                get {
                    return ((PutevoiListLegkTableRow)(this.GetParentRow(this.Table.ParentRelations["FK_Данные Путевой лист легкового авто_Путевой лист легкового автомобиля1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Данные Путевой лист легкового авто_Путевой лист легкового автомобиля1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsID_Путевого_листаNull() {
                return this.IsNull(this.tableДанные_Путевой_лист_легкового_авто.ID_Путевого_листаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetID_Путевого_листаNull() {
                this[this.tableДанные_Путевой_лист_легкового_авто.ID_Путевого_листаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsВремя_выездаNull() {
                return this.IsNull(this.tableДанные_Путевой_лист_легкового_авто.Время_выездаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetВремя_выездаNull() {
                this[this.tableДанные_Путевой_лист_легкового_авто.Время_выездаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsВремя_возвращенияNull() {
                return this.IsNull(this.tableДанные_Путевой_лист_легкового_авто.Время_возвращенияColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetВремя_возвращенияNull() {
                this[this.tableДанные_Путевой_лист_легкового_авто.Время_возвращенияColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsВремя_в_нарядеNull() {
                return this.IsNull(this.tableДанные_Путевой_лист_легкового_авто.Время_в_нарядеColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetВремя_в_нарядеNull() {
                this[this.tableДанные_Путевой_лист_легкового_авто.Время_в_нарядеColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsПоказания_спидометра_при_выездеNull() {
                return this.IsNull(this.tableДанные_Путевой_лист_легкового_авто.Показания_спидометра_при_выездеColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetПоказания_спидометра_при_выездеNull() {
                this[this.tableДанные_Путевой_лист_легкового_авто.Показания_спидометра_при_выездеColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsПоказания_спидометра_при_возвращенииNull() {
                return this.IsNull(this.tableДанные_Путевой_лист_легкового_авто.Показания_спидометра_при_возвращенииColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetПоказания_спидометра_при_возвращенииNull() {
                this[this.tableДанные_Путевой_лист_легкового_авто.Показания_спидометра_при_возвращенииColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsПробег_кмNull() {
                return this.IsNull(this.tableДанные_Путевой_лист_легкового_авто.Пробег_кмColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetПробег_кмNull() {
                this[this.tableДанные_Путевой_лист_легкового_авто.Пробег_кмColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsОстаток_топлива_при_выездеNull() {
                return this.IsNull(this.tableДанные_Путевой_лист_легкового_авто.Остаток_топлива_при_выездеColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetОстаток_топлива_при_выездеNull() {
                this[this.tableДанные_Путевой_лист_легкового_авто.Остаток_топлива_при_выездеColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsОстаток_топлива_при_возвращенииNull() {
                return this.IsNull(this.tableДанные_Путевой_лист_легкового_авто.Остаток_топлива_при_возвращенииColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetОстаток_топлива_при_возвращенииNull() {
                this[this.tableДанные_Путевой_лист_легкового_авто.Остаток_топлива_при_возвращенииColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsЗаправлено_топлива_лNull() {
                return this.IsNull(this.tableДанные_Путевой_лист_легкового_авто.Заправлено_топлива_лColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetЗаправлено_топлива_лNull() {
                this[this.tableДанные_Путевой_лист_легкового_авто.Заправлено_топлива_лColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_Дата_и___чека_АЗСNull() {
                return this.IsNull(this.tableДанные_Путевой_лист_легкового_авто._Дата_и___чека_АЗСColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_Дата_и___чека_АЗСNull() {
                this[this.tableДанные_Путевой_лист_легкового_авто._Дата_и___чека_АЗСColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsРасход_топлива_по_нормеNull() {
                return this.IsNull(this.tableДанные_Путевой_лист_легкового_авто.Расход_топлива_по_нормеColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetРасход_топлива_по_нормеNull() {
                this[this.tableДанные_Путевой_лист_легкового_авто.Расход_топлива_по_нормеColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsРасход_топлива_фактическиNull() {
                return this.IsNull(this.tableДанные_Путевой_лист_легкового_авто.Расход_топлива_фактическиColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetРасход_топлива_фактическиNull() {
                this[this.tableДанные_Путевой_лист_легкового_авто.Расход_топлива_фактическиColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsРасход_топлива_экономия_перерасходNull() {
                return this.IsNull(this.tableДанные_Путевой_лист_легкового_авто.Расход_топлива_экономия_перерасходColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetРасход_топлива_экономия_перерасходNull() {
                this[this.tableДанные_Путевой_лист_легкового_авто.Расход_топлива_экономия_перерасходColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsМаршрут_перевозки_откудаNull() {
                return this.IsNull(this.tableДанные_Путевой_лист_легкового_авто.Маршрут_перевозки_откудаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetМаршрут_перевозки_откудаNull() {
                this[this.tableДанные_Путевой_лист_легкового_авто.Маршрут_перевозки_откудаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsМаршрут_перевозки_кудаNull() {
                return this.IsNull(this.tableДанные_Путевой_лист_легкового_авто.Маршрут_перевозки_кудаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetМаршрут_перевозки_кудаNull() {
                this[this.tableДанные_Путевой_лист_легкового_авто.Маршрут_перевозки_кудаColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Личный_составRow : global::System.Data.DataRow {
            
            private Личный_составDataTable tableЛичный_состав;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Личный_составRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableЛичный_состав = ((Личный_составDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int табельный_номер {
                get {
                    return ((int)(this[this.tableЛичный_состав.табельный_номерColumn]));
                }
                set {
                    this[this.tableЛичный_состав.табельный_номерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Фамилия {
                get {
                    try {
                        return ((string)(this[this.tableЛичный_состав.ФамилияColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Фамилия\' in table \'Личный состав\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableЛичный_состав.ФамилияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Имя {
                get {
                    try {
                        return ((string)(this[this.tableЛичный_состав.ИмяColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Имя\' in table \'Личный состав\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableЛичный_состав.ИмяColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Отчество {
                get {
                    try {
                        return ((string)(this[this.tableЛичный_состав.ОтчествоColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Отчество\' in table \'Личный состав\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableЛичный_состав.ОтчествоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string номер_водительского_удостоверения {
                get {
                    return ((string)(this[this.tableЛичный_состав.номер_водительского_удостоверенияColumn]));
                }
                set {
                    this[this.tableЛичный_состав.номер_водительского_удостоверенияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int классность {
                get {
                    try {
                        return ((int)(this[this.tableЛичный_состав.классностьColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'классность\' in table \'Личный состав\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableЛичный_состав.классностьColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime срок_действия_мед__справки {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableЛичный_состав.срок_действия_мед__справкиColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'срок действия мед_ справки\' in table \'Личный состав\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableЛичный_состав.срок_действия_мед__справкиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ФИО {
                get {
                    try {
                        return ((string)(this[this.tableЛичный_состав.ФИОColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ФИО\' in table \'Личный состав\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableЛичный_состав.ФИОColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsФамилияNull() {
                return this.IsNull(this.tableЛичный_состав.ФамилияColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetФамилияNull() {
                this[this.tableЛичный_состав.ФамилияColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsИмяNull() {
                return this.IsNull(this.tableЛичный_состав.ИмяColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetИмяNull() {
                this[this.tableЛичный_состав.ИмяColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsОтчествоNull() {
                return this.IsNull(this.tableЛичный_состав.ОтчествоColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetОтчествоNull() {
                this[this.tableЛичный_состав.ОтчествоColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsклассностьNull() {
                return this.IsNull(this.tableЛичный_состав.классностьColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetклассностьNull() {
                this[this.tableЛичный_состав.классностьColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isсрок_действия_мед__справкиNull() {
                return this.IsNull(this.tableЛичный_состав.срок_действия_мед__справкиColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setсрок_действия_мед__справкиNull() {
                this[this.tableЛичный_состав.срок_действия_мед__справкиColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsФИОNull() {
                return this.IsNull(this.tableЛичный_состав.ФИОColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetФИОNull() {
                this[this.tableЛичный_состав.ФИОColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоRow[] GetПутевой_лист_Грузового_автоRows() {
                if ((this.Table.ChildRelations["FK_Путевой лист Грузового авто_личный состав2"] == null)) {
                    return new Путевой_лист_Грузового_автоRow[0];
                }
                else {
                    return ((Путевой_лист_Грузового_автоRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Путевой лист Грузового авто_личный состав2"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PutevoiListLegkTableRow[] GetPutevoiListLegkTableRows() {
                if ((this.Table.ChildRelations["FK_Путевой лист легкового автомобиля_личный состав4"] == null)) {
                    return new PutevoiListLegkTableRow[0];
                }
                else {
                    return ((PutevoiListLegkTableRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Путевой лист легкового автомобиля_личный состав4"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевые_листы_легковыеRow[] GetПутевые_листы_легковыеRows() {
                if ((this.Table.ChildRelations["FK_Путевой лист Грузового авто_личный состав1"] == null)) {
                    return new Путевые_листы_легковыеRow[0];
                }
                else {
                    return ((Путевые_листы_легковыеRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Путевой лист Грузового авто_личный состав1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевые_листы_грузовыеRow[] GetПутевые_листы_грузовыеRows() {
                if ((this.Table.ChildRelations["FK_Путевой лист Грузового авто_личный состав"] == null)) {
                    return new Путевые_листы_грузовыеRow[0];
                }
                else {
                    return ((Путевые_листы_грузовыеRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Путевой лист Грузового авто_личный состав"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Задание_водителюRow : global::System.Data.DataRow {
            
            private Задание_водителюDataTable tableЗадание_водителю;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Задание_водителюRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableЗадание_водителю = ((Задание_водителюDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tableЗадание_водителю.idColumn]));
                }
                set {
                    this[this.tableЗадание_водителю.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Путевого_листа {
                get {
                    return ((int)(this[this.tableЗадание_водителю.ID_Путевого_листаColumn]));
                }
                set {
                    this[this.tableЗадание_водителю.ID_Путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Заказчик {
                get {
                    try {
                        return ((string)(this[this.tableЗадание_водителю.ЗаказчикColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Заказчик\' in table \'Задание водителю\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗадание_водителю.ЗаказчикColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Дата_и_время_прибытия {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableЗадание_водителю.Дата_и_время_прибытияColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Дата и время прибытия\' in table \'Задание водителю\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableЗадание_водителю.Дата_и_время_прибытияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Дата_и_время_убытия {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableЗадание_водителю.Дата_и_время_убытияColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Дата и время убытия\' in table \'Задание водителю\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableЗадание_водителю.Дата_и_время_убытияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Пункт_отправления {
                get {
                    try {
                        return ((string)(this[this.tableЗадание_водителю.Пункт_отправленияColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Пункт отправления\' in table \'Задание водителю\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗадание_водителю.Пункт_отправленияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Пункт_назначения {
                get {
                    try {
                        return ((string)(this[this.tableЗадание_водителю.Пункт_назначенияColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Пункт назначения\' in table \'Задание водителю\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗадание_водителю.Пункт_назначенияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Расстояние_км {
                get {
                    try {
                        return ((double)(this[this.tableЗадание_водителю.Расстояние_кмColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Расстояние км\' in table \'Задание водителю\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗадание_водителю.Расстояние_кмColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Наименование_груза {
                get {
                    try {
                        return ((string)(this[this.tableЗадание_водителю.Наименование_грузаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Наименование груза\' in table \'Задание водителю\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗадание_водителю.Наименование_грузаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Вес_груза_т {
                get {
                    try {
                        return ((double)(this[this.tableЗадание_водителю.Вес_груза_тColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Вес груза т\' in table \'Задание водителю\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗадание_водителю.Вес_груза_тColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Количество_поездок_с_грузом_час {
                get {
                    try {
                        return ((int)(this[this.tableЗадание_водителю.Количество_поездок_с_грузом_часColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Количество поездок с грузом час\' in table \'Задание водителю" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗадание_водителю.Количество_поездок_с_грузом_часColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоRow Путевой_лист_Грузового_автоRow {
                get {
                    return ((Путевой_лист_Грузового_автоRow)(this.GetParentRow(this.Table.ParentRelations["FK_Задание водителю_Путевой лист Грузового авто"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Задание водителю_Путевой лист Грузового авто"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsЗаказчикNull() {
                return this.IsNull(this.tableЗадание_водителю.ЗаказчикColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetЗаказчикNull() {
                this[this.tableЗадание_водителю.ЗаказчикColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsДата_и_время_прибытияNull() {
                return this.IsNull(this.tableЗадание_водителю.Дата_и_время_прибытияColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetДата_и_время_прибытияNull() {
                this[this.tableЗадание_водителю.Дата_и_время_прибытияColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsДата_и_время_убытияNull() {
                return this.IsNull(this.tableЗадание_водителю.Дата_и_время_убытияColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetДата_и_время_убытияNull() {
                this[this.tableЗадание_водителю.Дата_и_время_убытияColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsПункт_отправленияNull() {
                return this.IsNull(this.tableЗадание_водителю.Пункт_отправленияColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetПункт_отправленияNull() {
                this[this.tableЗадание_водителю.Пункт_отправленияColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsПункт_назначенияNull() {
                return this.IsNull(this.tableЗадание_водителю.Пункт_назначенияColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetПункт_назначенияNull() {
                this[this.tableЗадание_водителю.Пункт_назначенияColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsРасстояние_кмNull() {
                return this.IsNull(this.tableЗадание_водителю.Расстояние_кмColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetРасстояние_кмNull() {
                this[this.tableЗадание_водителю.Расстояние_кмColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsНаименование_грузаNull() {
                return this.IsNull(this.tableЗадание_водителю.Наименование_грузаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetНаименование_грузаNull() {
                this[this.tableЗадание_водителю.Наименование_грузаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsВес_груза_тNull() {
                return this.IsNull(this.tableЗадание_водителю.Вес_груза_тColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetВес_груза_тNull() {
                this[this.tableЗадание_водителю.Вес_груза_тColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsКоличество_поездок_с_грузом_часNull() {
                return this.IsNull(this.tableЗадание_водителю.Количество_поездок_с_грузом_часColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetКоличество_поездок_с_грузом_часNull() {
                this[this.tableЗадание_водителю.Количество_поездок_с_грузом_часColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DanieJournalLegkovieRow : global::System.Data.DataRow {
            
            private DanieJournalLegkovieDataTable tableDanieJournalLegkovie;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DanieJournalLegkovieRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDanieJournalLegkovie = ((DanieJournalLegkovieDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Число {
                get {
                    return ((global::System.DateTime)(this[this.tableDanieJournalLegkovie.ЧислоColumn]));
                }
                set {
                    this[this.tableDanieJournalLegkovie.ЧислоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Номер_путевого_листа {
                get {
                    try {
                        return ((string)(this[this.tableDanieJournalLegkovie.Номер_путевого_листаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Номер путевого листа\' in table \'DanieJournalLegkovie\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableDanieJournalLegkovie.Номер_путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Остаток_топлива_при_выезде {
                get {
                    return ((double)(this[this.tableDanieJournalLegkovie.Остаток_топлива_при_выездеColumn]));
                }
                set {
                    this[this.tableDanieJournalLegkovie.Остаток_топлива_при_выездеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Остаток_топлива_при_возвращении {
                get {
                    return ((double)(this[this.tableDanieJournalLegkovie.Остаток_топлива_при_возвращенииColumn]));
                }
                set {
                    this[this.tableDanieJournalLegkovie.Остаток_топлива_при_возвращенииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan Время_выезда {
                get {
                    return ((global::System.TimeSpan)(this[this.tableDanieJournalLegkovie.Время_выездаColumn]));
                }
                set {
                    this[this.tableDanieJournalLegkovie.Время_выездаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan Время_возвращения {
                get {
                    return ((global::System.TimeSpan)(this[this.tableDanieJournalLegkovie.Время_возвращенияColumn]));
                }
                set {
                    this[this.tableDanieJournalLegkovie.Время_возвращенияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Показания_спидометра_при_выезде {
                get {
                    return ((int)(this[this.tableDanieJournalLegkovie.Показания_спидометра_при_выездеColumn]));
                }
                set {
                    this[this.tableDanieJournalLegkovie.Показания_спидометра_при_выездеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Показания_спидометра_при_возвращении {
                get {
                    return ((int)(this[this.tableDanieJournalLegkovie.Показания_спидометра_при_возвращенииColumn]));
                }
                set {
                    this[this.tableDanieJournalLegkovie.Показания_спидометра_при_возвращенииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string В_чье_распоряжение_занаряжена_автомашина {
                get {
                    try {
                        return ((string)(this[this.tableDanieJournalLegkovie.В_чье_распоряжение_занаряжена_автомашинаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'В чье распоряжение занаряжена автомашина\' in table \'DanieJo" +
                                "urnalLegkovie\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDanieJournalLegkovie.В_чье_распоряжение_занаряжена_автомашинаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Маршрут_перевозки_откуда {
                get {
                    try {
                        return ((string)(this[this.tableDanieJournalLegkovie.Маршрут_перевозки_откудаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Маршрут перевозки откуда\' in table \'DanieJournalLegkovie\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableDanieJournalLegkovie.Маршрут_перевозки_откудаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Маршрут_перевозки_куда {
                get {
                    try {
                        return ((string)(this[this.tableDanieJournalLegkovie.Маршрут_перевозки_кудаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Маршрут перевозки куда\' in table \'DanieJournalLegkovie\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableDanieJournalLegkovie.Маршрут_перевозки_кудаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Заправлено_топлива_л {
                get {
                    return ((double)(this[this.tableDanieJournalLegkovie.Заправлено_топлива_лColumn]));
                }
                set {
                    this[this.tableDanieJournalLegkovie.Заправлено_топлива_лColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsНомер_путевого_листаNull() {
                return this.IsNull(this.tableDanieJournalLegkovie.Номер_путевого_листаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetНомер_путевого_листаNull() {
                this[this.tableDanieJournalLegkovie.Номер_путевого_листаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsВ_чье_распоряжение_занаряжена_автомашинаNull() {
                return this.IsNull(this.tableDanieJournalLegkovie.В_чье_распоряжение_занаряжена_автомашинаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetВ_чье_распоряжение_занаряжена_автомашинаNull() {
                this[this.tableDanieJournalLegkovie.В_чье_распоряжение_занаряжена_автомашинаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsМаршрут_перевозки_откудаNull() {
                return this.IsNull(this.tableDanieJournalLegkovie.Маршрут_перевозки_откудаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetМаршрут_перевозки_откудаNull() {
                this[this.tableDanieJournalLegkovie.Маршрут_перевозки_откудаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsМаршрут_перевозки_кудаNull() {
                return this.IsNull(this.tableDanieJournalLegkovie.Маршрут_перевозки_кудаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetМаршрут_перевозки_кудаNull() {
                this[this.tableDanieJournalLegkovie.Маршрут_перевозки_кудаColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DanieJournalGruzovieRow : global::System.Data.DataRow {
            
            private DanieJournalGruzovieDataTable tableDanieJournalGruzovie;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DanieJournalGruzovieRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDanieJournalGruzovie = ((DanieJournalGruzovieDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Номер_путевого_листа {
                get {
                    return ((int)(this[this.tableDanieJournalGruzovie.Номер_путевого_листаColumn]));
                }
                set {
                    this[this.tableDanieJournalGruzovie.Номер_путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Дата_путевого_листа {
                get {
                    return ((global::System.DateTime)(this[this.tableDanieJournalGruzovie.Дата_путевого_листаColumn]));
                }
                set {
                    this[this.tableDanieJournalGruzovie.Дата_путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string В_чье_распоряжение_занаряжена_автомашина {
                get {
                    try {
                        return ((string)(this[this.tableDanieJournalGruzovie.В_чье_распоряжение_занаряжена_автомашинаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'В чье распоряжение занаряжена автомашина\' in table \'DanieJo" +
                                "urnalGruzovie\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDanieJournalGruzovie.В_чье_распоряжение_занаряжена_автомашинаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Пункт_отправления {
                get {
                    try {
                        return ((string)(this[this.tableDanieJournalGruzovie.Пункт_отправленияColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Пункт отправления\' in table \'DanieJournalGruzovie\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableDanieJournalGruzovie.Пункт_отправленияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Пункт_назначения {
                get {
                    try {
                        return ((string)(this[this.tableDanieJournalGruzovie.Пункт_назначенияColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Пункт назначения\' in table \'DanieJournalGruzovie\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDanieJournalGruzovie.Пункт_назначенияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Количество {
                get {
                    try {
                        return ((double)(this[this.tableDanieJournalGruzovie.КоличествоColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Количество\' in table \'DanieJournalGruzovie\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDanieJournalGruzovie.КоличествоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Спидометр_при_выезде {
                get {
                    try {
                        return ((int)(this[this.tableDanieJournalGruzovie.Спидометр_при_выездеColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Спидометр при выезде\' in table \'DanieJournalGruzovie\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableDanieJournalGruzovie.Спидометр_при_выездеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Спидометр_при_возвращении {
                get {
                    try {
                        return ((int)(this[this.tableDanieJournalGruzovie.Спидометр_при_возвращенииColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Спидометр при возвращении\' in table \'DanieJournalGruzovie\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDanieJournalGruzovie.Спидометр_при_возвращенииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan Время_выезда {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tableDanieJournalGruzovie.Время_выездаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Время выезда\' in table \'DanieJournalGruzovie\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDanieJournalGruzovie.Время_выездаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan Время_возвращения {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tableDanieJournalGruzovie.Время_возвращенияColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Время возвращения\' in table \'DanieJournalGruzovie\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableDanieJournalGruzovie.Время_возвращенияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Остаток_ТСМ_при_выезде {
                get {
                    return ((string)(this[this.tableDanieJournalGruzovie.Остаток_ТСМ_при_выездеColumn]));
                }
                set {
                    this[this.tableDanieJournalGruzovie.Остаток_ТСМ_при_выездеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Остаток_ТСМ_при_возвращении {
                get {
                    try {
                        return ((string)(this[this.tableDanieJournalGruzovie.Остаток_ТСМ_при_возвращенииColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Остаток ТСМ при возвращении\' in table \'DanieJournalGruzovie" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDanieJournalGruzovie.Остаток_ТСМ_при_возвращенииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsВ_чье_распоряжение_занаряжена_автомашинаNull() {
                return this.IsNull(this.tableDanieJournalGruzovie.В_чье_распоряжение_занаряжена_автомашинаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetВ_чье_распоряжение_занаряжена_автомашинаNull() {
                this[this.tableDanieJournalGruzovie.В_чье_распоряжение_занаряжена_автомашинаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsПункт_отправленияNull() {
                return this.IsNull(this.tableDanieJournalGruzovie.Пункт_отправленияColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetПункт_отправленияNull() {
                this[this.tableDanieJournalGruzovie.Пункт_отправленияColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsПункт_назначенияNull() {
                return this.IsNull(this.tableDanieJournalGruzovie.Пункт_назначенияColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetПункт_назначенияNull() {
                this[this.tableDanieJournalGruzovie.Пункт_назначенияColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsКоличествоNull() {
                return this.IsNull(this.tableDanieJournalGruzovie.КоличествоColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetКоличествоNull() {
                this[this.tableDanieJournalGruzovie.КоличествоColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsСпидометр_при_выездеNull() {
                return this.IsNull(this.tableDanieJournalGruzovie.Спидометр_при_выездеColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetСпидометр_при_выездеNull() {
                this[this.tableDanieJournalGruzovie.Спидометр_при_выездеColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsСпидометр_при_возвращенииNull() {
                return this.IsNull(this.tableDanieJournalGruzovie.Спидометр_при_возвращенииColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetСпидометр_при_возвращенииNull() {
                this[this.tableDanieJournalGruzovie.Спидометр_при_возвращенииColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsВремя_выездаNull() {
                return this.IsNull(this.tableDanieJournalGruzovie.Время_выездаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetВремя_выездаNull() {
                this[this.tableDanieJournalGruzovie.Время_выездаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsВремя_возвращенияNull() {
                return this.IsNull(this.tableDanieJournalGruzovie.Время_возвращенияColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetВремя_возвращенияNull() {
                this[this.tableDanieJournalGruzovie.Время_возвращенияColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsОстаток_ТСМ_при_возвращенииNull() {
                return this.IsNull(this.tableDanieJournalGruzovie.Остаток_ТСМ_при_возвращенииColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetОстаток_ТСМ_при_возвращенииNull() {
                this[this.tableDanieJournalGruzovie.Остаток_ТСМ_при_возвращенииColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BannerJornalGruzovieRow : global::System.Data.DataRow {
            
            private BannerJornalGruzovieDataTable tableBannerJornalGruzovie;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BannerJornalGruzovieRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBannerJornalGruzovie = ((BannerJornalGruzovieDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Фамилия {
                get {
                    try {
                        return ((string)(this[this.tableBannerJornalGruzovie.ФамилияColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Фамилия\' in table \'BannerJornalGruzovie\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBannerJornalGruzovie.ФамилияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Имя {
                get {
                    try {
                        return ((string)(this[this.tableBannerJornalGruzovie.ИмяColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Имя\' in table \'BannerJornalGruzovie\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBannerJornalGruzovie.ИмяColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Отчество {
                get {
                    try {
                        return ((string)(this[this.tableBannerJornalGruzovie.ОтчествоColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Отчество\' in table \'BannerJornalGruzovie\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBannerJornalGruzovie.ОтчествоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime срок_действия_мед__справки {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBannerJornalGruzovie.срок_действия_мед__справкиColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'срок действия мед_ справки\' in table \'BannerJornalGruzovie\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBannerJornalGruzovie.срок_действия_мед__справкиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int классность {
                get {
                    try {
                        return ((int)(this[this.tableBannerJornalGruzovie.классностьColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'классность\' in table \'BannerJornalGruzovie\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBannerJornalGruzovie.классностьColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string номер_водительского_удостоверения {
                get {
                    try {
                        return ((string)(this[this.tableBannerJornalGruzovie.номер_водительского_удостоверенияColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'номер водительского удостоверения\' in table \'BannerJornalGr" +
                                "uzovie\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBannerJornalGruzovie.номер_водительского_удостоверенияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Марка_и_модель {
                get {
                    return ((string)(this[this.tableBannerJornalGruzovie.Марка_и_модельColumn]));
                }
                set {
                    this[this.tableBannerJornalGruzovie.Марка_и_модельColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Гос_номер {
                get {
                    return ((string)(this[this.tableBannerJornalGruzovie.Гос_номерColumn]));
                }
                set {
                    this[this.tableBannerJornalGruzovie.Гос_номерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Гаражный_номер {
                get {
                    try {
                        return ((string)(this[this.tableBannerJornalGruzovie.Гаражный_номерColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Гаражный номер\' in table \'BannerJornalGruzovie\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBannerJornalGruzovie.Гаражный_номерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime дата_окончания_страховки {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBannerJornalGruzovie.дата_окончания_страховкиColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'дата окончания страховки\' in table \'BannerJornalGruzovie\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableBannerJornalGruzovie.дата_окончания_страховкиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Вид_топлива {
                get {
                    try {
                        return ((string)(this[this.tableBannerJornalGruzovie.Вид_топливаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Вид топлива\' in table \'BannerJornalGruzovie\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBannerJornalGruzovie.Вид_топливаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableBannerJornalGruzovie.IDColumn]));
                }
                set {
                    this[this.tableBannerJornalGruzovie.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsФамилияNull() {
                return this.IsNull(this.tableBannerJornalGruzovie.ФамилияColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetФамилияNull() {
                this[this.tableBannerJornalGruzovie.ФамилияColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsИмяNull() {
                return this.IsNull(this.tableBannerJornalGruzovie.ИмяColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetИмяNull() {
                this[this.tableBannerJornalGruzovie.ИмяColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsОтчествоNull() {
                return this.IsNull(this.tableBannerJornalGruzovie.ОтчествоColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetОтчествоNull() {
                this[this.tableBannerJornalGruzovie.ОтчествоColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isсрок_действия_мед__справкиNull() {
                return this.IsNull(this.tableBannerJornalGruzovie.срок_действия_мед__справкиColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setсрок_действия_мед__справкиNull() {
                this[this.tableBannerJornalGruzovie.срок_действия_мед__справкиColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsклассностьNull() {
                return this.IsNull(this.tableBannerJornalGruzovie.классностьColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetклассностьNull() {
                this[this.tableBannerJornalGruzovie.классностьColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isномер_водительского_удостоверенияNull() {
                return this.IsNull(this.tableBannerJornalGruzovie.номер_водительского_удостоверенияColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setномер_водительского_удостоверенияNull() {
                this[this.tableBannerJornalGruzovie.номер_водительского_удостоверенияColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsГаражный_номерNull() {
                return this.IsNull(this.tableBannerJornalGruzovie.Гаражный_номерColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetГаражный_номерNull() {
                this[this.tableBannerJornalGruzovie.Гаражный_номерColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isдата_окончания_страховкиNull() {
                return this.IsNull(this.tableBannerJornalGruzovie.дата_окончания_страховкиColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setдата_окончания_страховкиNull() {
                this[this.tableBannerJornalGruzovie.дата_окончания_страховкиColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsВид_топливаNull() {
                return this.IsNull(this.tableBannerJornalGruzovie.Вид_топливаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetВид_топливаNull() {
                this[this.tableBannerJornalGruzovie.Вид_топливаColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Движение_ТСМRow : global::System.Data.DataRow {
            
            private Движение_ТСМDataTable tableДвижение_ТСМ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Движение_ТСМRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableДвижение_ТСМ = ((Движение_ТСМDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Движение_ТМЦ {
                get {
                    return ((int)(this[this.tableДвижение_ТСМ.ID_Движение_ТМЦColumn]));
                }
                set {
                    this[this.tableДвижение_ТСМ.ID_Движение_ТМЦColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Путевого_листа {
                get {
                    return ((int)(this[this.tableДвижение_ТСМ.ID_Путевого_листаColumn]));
                }
                set {
                    this[this.tableДвижение_ТСМ.ID_Путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Остаток_ТСМ_при_выезде {
                get {
                    return ((string)(this[this.tableДвижение_ТСМ.Остаток_ТСМ_при_выездеColumn]));
                }
                set {
                    this[this.tableДвижение_ТСМ.Остаток_ТСМ_при_выездеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Остаток_ТСМ_при_возвращении {
                get {
                    try {
                        return ((string)(this[this.tableДвижение_ТСМ.Остаток_ТСМ_при_возвращенииColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Остаток ТСМ при возвращении\' in table \'Движение ТСМ\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableДвижение_ТСМ.Остаток_ТСМ_при_возвращенииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоRow Путевой_лист_Грузового_автоRow {
                get {
                    return ((Путевой_лист_Грузового_автоRow)(this.GetParentRow(this.Table.ParentRelations["FK_Движение ТСМ_Путевой лист Грузового авто"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Движение ТСМ_Путевой лист Грузового авто"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsОстаток_ТСМ_при_возвращенииNull() {
                return this.IsNull(this.tableДвижение_ТСМ.Остаток_ТСМ_при_возвращенииColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetОстаток_ТСМ_при_возвращенииNull() {
                this[this.tableДвижение_ТСМ.Остаток_ТСМ_при_возвращенииColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Заправка_ТСМRow : global::System.Data.DataRow {
            
            private Заправка_ТСМDataTable tableЗаправка_ТСМ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Заправка_ТСМRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableЗаправка_ТСМ = ((Заправка_ТСМDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Заправка_ТСМ {
                get {
                    return ((int)(this[this.tableЗаправка_ТСМ.ID_Заправка_ТСМColumn]));
                }
                set {
                    this[this.tableЗаправка_ТСМ.ID_Заправка_ТСМColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Дата {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableЗаправка_ТСМ.ДатаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Дата\' in table \'Заправка ТСМ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаправка_ТСМ.ДатаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Марка_ТСМ {
                get {
                    try {
                        return ((string)(this[this.tableЗаправка_ТСМ.Марка_ТСМColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Марка ТСМ\' in table \'Заправка ТСМ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаправка_ТСМ.Марка_ТСМColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Количество {
                get {
                    try {
                        return ((double)(this[this.tableЗаправка_ТСМ.КоличествоColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Количество\' in table \'Заправка ТСМ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаправка_ТСМ.КоличествоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Путевого_листа {
                get {
                    try {
                        return ((int)(this[this.tableЗаправка_ТСМ.ID_Путевого_листаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID_Путевого листа\' in table \'Заправка ТСМ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаправка_ТСМ.ID_Путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsДатаNull() {
                return this.IsNull(this.tableЗаправка_ТСМ.ДатаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetДатаNull() {
                this[this.tableЗаправка_ТСМ.ДатаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsМарка_ТСМNull() {
                return this.IsNull(this.tableЗаправка_ТСМ.Марка_ТСМColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetМарка_ТСМNull() {
                this[this.tableЗаправка_ТСМ.Марка_ТСМColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsКоличествоNull() {
                return this.IsNull(this.tableЗаправка_ТСМ.КоличествоColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetКоличествоNull() {
                this[this.tableЗаправка_ТСМ.КоличествоColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsID_Путевого_листаNull() {
                return this.IsNull(this.tableЗаправка_ТСМ.ID_Путевого_листаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetID_Путевого_листаNull() {
                this[this.tableЗаправка_ТСМ.ID_Путевого_листаColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Работа_водителя_и_автомобиляRow : global::System.Data.DataRow {
            
            private Работа_водителя_и_автомобиляDataTable tableРабота_водителя_и_автомобиля;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Работа_водителя_и_автомобиляRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableРабота_водителя_и_автомобиля = ((Работа_водителя_и_автомобиляDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_работа_водителя_и_авто {
                get {
                    return ((int)(this[this.tableРабота_водителя_и_автомобиля.ID_работа_водителя_и_автоColumn]));
                }
                set {
                    this[this.tableРабота_водителя_и_автомобиля.ID_работа_водителя_и_автоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Путевого_листа {
                get {
                    try {
                        return ((int)(this[this.tableРабота_водителя_и_автомобиля.ID_Путевого_листаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID_Путевого листа\' in table \'Работа водителя и автомобиля\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableРабота_водителя_и_автомобиля.ID_Путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Операции {
                get {
                    return ((string)(this[this.tableРабота_водителя_и_автомобиля.ОперацииColumn]));
                }
                set {
                    this[this.tableРабота_водителя_и_автомобиля.ОперацииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Показания_спидометра {
                get {
                    try {
                        return ((int)(this[this.tableРабота_водителя_и_автомобиля.Показания_спидометраColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Показания спидометра\' in table \'Работа водителя и автомобил" +
                                "я\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableРабота_водителя_и_автомобиля.Показания_спидометраColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Дата_и_время_фактически {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableРабота_водителя_и_автомобиля.Дата_и_время_фактическиColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Дата и время фактически\' in table \'Работа водителя и автомо" +
                                "биля\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableРабота_водителя_и_автомобиля.Дата_и_время_фактическиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Нулевой_пробег {
                get {
                    try {
                        return ((int)(this[this.tableРабота_водителя_и_автомобиля.Нулевой_пробегColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Нулевой пробег\' in table \'Работа водителя и автомобиля\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableРабота_водителя_и_автомобиля.Нулевой_пробегColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Время_работы_двигателя_час {
                get {
                    try {
                        return ((int)(this[this.tableРабота_водителя_и_автомобиля.Время_работы_двигателя_часColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Время работы двигателя час\' in table \'Работа водителя и авт" +
                                "омобиля\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableРабота_водителя_и_автомобиля.Время_работы_двигателя_часColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Время_работы_спецоборудования {
                get {
                    try {
                        return ((int)(this[this.tableРабота_водителя_и_автомобиля.Время_работы_спецоборудованияColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Время работы спецоборудования\' in table \'Работа водителя и " +
                                "автомобиля\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableРабота_водителя_и_автомобиля.Время_работы_спецоборудованияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Дата_и_время_по_графику {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableРабота_водителя_и_автомобиля.Дата_и_время_по_графикуColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Дата и время по графику\' in table \'Работа водителя и автомо" +
                                "биля\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableРабота_водителя_и_автомобиля.Дата_и_время_по_графикуColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоRow Путевой_лист_Грузового_автоRow {
                get {
                    return ((Путевой_лист_Грузового_автоRow)(this.GetParentRow(this.Table.ParentRelations["FK_Данные Путевой лист легкового авто_Путевой лист грузового автомобиля"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Данные Путевой лист легкового авто_Путевой лист грузового автомобиля"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsID_Путевого_листаNull() {
                return this.IsNull(this.tableРабота_водителя_и_автомобиля.ID_Путевого_листаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetID_Путевого_листаNull() {
                this[this.tableРабота_водителя_и_автомобиля.ID_Путевого_листаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsПоказания_спидометраNull() {
                return this.IsNull(this.tableРабота_водителя_и_автомобиля.Показания_спидометраColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetПоказания_спидометраNull() {
                this[this.tableРабота_водителя_и_автомобиля.Показания_спидометраColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsДата_и_время_фактическиNull() {
                return this.IsNull(this.tableРабота_водителя_и_автомобиля.Дата_и_время_фактическиColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetДата_и_время_фактическиNull() {
                this[this.tableРабота_водителя_и_автомобиля.Дата_и_время_фактическиColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsНулевой_пробегNull() {
                return this.IsNull(this.tableРабота_водителя_и_автомобиля.Нулевой_пробегColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetНулевой_пробегNull() {
                this[this.tableРабота_водителя_и_автомобиля.Нулевой_пробегColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsВремя_работы_двигателя_часNull() {
                return this.IsNull(this.tableРабота_водителя_и_автомобиля.Время_работы_двигателя_часColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetВремя_работы_двигателя_часNull() {
                this[this.tableРабота_водителя_и_автомобиля.Время_работы_двигателя_часColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsВремя_работы_спецоборудованияNull() {
                return this.IsNull(this.tableРабота_водителя_и_автомобиля.Время_работы_спецоборудованияColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetВремя_работы_спецоборудованияNull() {
                this[this.tableРабота_водителя_и_автомобиля.Время_работы_спецоборудованияColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsДата_и_время_по_графикуNull() {
                return this.IsNull(this.tableРабота_водителя_и_автомобиля.Дата_и_время_по_графикуColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetДата_и_время_по_графикуNull() {
                this[this.tableРабота_водителя_и_автомобиля.Дата_и_время_по_графикуColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ОтделыRow : global::System.Data.DataRow {
            
            private ОтделыDataTable tableОтделы;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ОтделыRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableОтделы = ((ОтделыDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableОтделы.IDColumn]));
                }
                set {
                    this[this.tableОтделы.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Название_отдела {
                get {
                    try {
                        return ((string)(this[this.tableОтделы.Название_отделаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Название отдела\' in table \'Отделы\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableОтделы.Название_отделаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Аббревиатура {
                get {
                    try {
                        return ((string)(this[this.tableОтделы.АббревиатураColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Аббревиатура\' in table \'Отделы\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableОтделы.АббревиатураColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsНазвание_отделаNull() {
                return this.IsNull(this.tableОтделы.Название_отделаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetНазвание_отделаNull() {
                this[this.tableОтделы.Название_отделаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsАббревиатураNull() {
                return this.IsNull(this.tableОтделы.АббревиатураColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetАббревиатураNull() {
                this[this.tableОтделы.АббревиатураColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PutevoiListLegkTableRow[] GetPutevoiListLegkTableRows() {
                if ((this.Table.ChildRelations["FK_Путевой лист легкового_id_отдела"] == null)) {
                    return new PutevoiListLegkTableRow[0];
                }
                else {
                    return ((PutevoiListLegkTableRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Путевой лист легкового_id_отдела"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Подвижной_составRowChangeEvent : global::System.EventArgs {
            
            private Подвижной_составRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Подвижной_составRowChangeEvent(Подвижной_составRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Подвижной_составRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class _Нормы_расхода_ГСМ_на_авто_тракторыRowChangeEvent : global::System.EventArgs {
            
            private _Нормы_расхода_ГСМ_на_авто_тракторыRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _Нормы_расхода_ГСМ_на_авто_тракторыRowChangeEvent(_Нормы_расхода_ГСМ_на_авто_тракторыRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _Нормы_расхода_ГСМ_на_авто_тракторыRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class VoditeliAutoRowChangeEvent : global::System.EventArgs {
            
            private VoditeliAutoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VoditeliAutoRowChangeEvent(VoditeliAutoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VoditeliAutoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Путевые_листы_легковыеRowChangeEvent : global::System.EventArgs {
            
            private Путевые_листы_легковыеRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевые_листы_легковыеRowChangeEvent(Путевые_листы_легковыеRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевые_листы_легковыеRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Путевые_листы_грузовыеRowChangeEvent : global::System.EventArgs {
            
            private Путевые_листы_грузовыеRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевые_листы_грузовыеRowChangeEvent(Путевые_листы_грузовыеRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевые_листы_грузовыеRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Путевой_лист_Грузового_автоRowChangeEvent : global::System.EventArgs {
            
            private Путевой_лист_Грузового_автоRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоRowChangeEvent(Путевой_лист_Грузового_автоRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PutevoiListLegkTableRowChangeEvent : global::System.EventArgs {
            
            private PutevoiListLegkTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PutevoiListLegkTableRowChangeEvent(PutevoiListLegkTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PutevoiListLegkTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Данные_Путевой_лист_легкового_автоRowChangeEvent : global::System.EventArgs {
            
            private Данные_Путевой_лист_легкового_автоRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Данные_Путевой_лист_легкового_автоRowChangeEvent(Данные_Путевой_лист_легкового_автоRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Данные_Путевой_лист_легкового_автоRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Личный_составRowChangeEvent : global::System.EventArgs {
            
            private Личный_составRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Личный_составRowChangeEvent(Личный_составRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Личный_составRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Задание_водителюRowChangeEvent : global::System.EventArgs {
            
            private Задание_водителюRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Задание_водителюRowChangeEvent(Задание_водителюRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Задание_водителюRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DanieJournalLegkovieRowChangeEvent : global::System.EventArgs {
            
            private DanieJournalLegkovieRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DanieJournalLegkovieRowChangeEvent(DanieJournalLegkovieRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DanieJournalLegkovieRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DanieJournalGruzovieRowChangeEvent : global::System.EventArgs {
            
            private DanieJournalGruzovieRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DanieJournalGruzovieRowChangeEvent(DanieJournalGruzovieRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DanieJournalGruzovieRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class BannerJornalGruzovieRowChangeEvent : global::System.EventArgs {
            
            private BannerJornalGruzovieRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BannerJornalGruzovieRowChangeEvent(BannerJornalGruzovieRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BannerJornalGruzovieRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Движение_ТСМRowChangeEvent : global::System.EventArgs {
            
            private Движение_ТСМRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Движение_ТСМRowChangeEvent(Движение_ТСМRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Движение_ТСМRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Заправка_ТСМRowChangeEvent : global::System.EventArgs {
            
            private Заправка_ТСМRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Заправка_ТСМRowChangeEvent(Заправка_ТСМRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Заправка_ТСМRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Работа_водителя_и_автомобиляRowChangeEvent : global::System.EventArgs {
            
            private Работа_водителя_и_автомобиляRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Работа_водителя_и_автомобиляRowChangeEvent(Работа_водителя_и_автомобиляRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Работа_водителя_и_автомобиляRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ОтделыRowChangeEvent : global::System.EventArgs {
            
            private ОтделыRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ОтделыRowChangeEvent(ОтделыRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ОтделыRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace AUTOPARK.AutoparkDBTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PodvijnoiTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PodvijnoiTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Подвижной состав";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Марка и модель", "Марка и модель");
            tableMapping.ColumnMappings.Add("Гаражный номер", "Гаражный номер");
            tableMapping.ColumnMappings.Add("Тип двигателя", "Тип двигателя");
            tableMapping.ColumnMappings.Add("Год выпуска", "Год выпуска");
            tableMapping.ColumnMappings.Add("Инвентарный номер", "Инвентарный номер");
            tableMapping.ColumnMappings.Add("Вид топлива", "Вид топлива");
            tableMapping.ColumnMappings.Add("дата окончания страховки", "дата окончания страховки");
            tableMapping.ColumnMappings.Add("Тип назначения авто", "Тип назначения авто");
            tableMapping.ColumnMappings.Add("Гос.номер", "Гос_номер");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Подвижной состав] WHERE (([ID] = @Original_ID) AND ([Марка и модель] = @Original_Марка_и_модель) AND ([Гос.номер] = @p2) AND ((@IsNull_Гаражный_номер = 1 AND [Гаражный номер] IS NULL) OR ([Гаражный номер] = @Original_Гаражный_номер)) AND ((@IsNull_Тип_двигателя = 1 AND [Тип двигателя] IS NULL) OR ([Тип двигателя] = @Original_Тип_двигателя)) AND ((@IsNull_Год_выпуска = 1 AND [Год выпуска] IS NULL) OR ([Год выпуска] = @Original_Год_выпуска)) AND ((@IsNull_Инвентарный_номер = 1 AND [Инвентарный номер] IS NULL) OR ([Инвентарный номер] = @Original_Инвентарный_номер)) AND ((@IsNull_Вид_топлива = 1 AND [Вид топлива] IS NULL) OR ([Вид топлива] = @Original_Вид_топлива)) AND ((@IsNull_дата_окончания_страховки = 1 AND [дата окончания страховки] IS NULL) OR ([дата окончания страховки] = @Original_дата_окончания_страховки)) AND ((@IsNull_Тип_назначения_авто = 1 AND [Тип назначения авто] IS NULL) OR ([Тип назначения авто] = @Original_Тип_назначения_авто)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Марка_и_модель", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка и модель", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Гос.номер", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Гаражный_номер", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Гаражный номер", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Гаражный_номер", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Гаражный номер", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Тип_двигателя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип двигателя", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Тип_двигателя", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип двигателя", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Год_выпуска", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Год выпуска", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Год_выпуска", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Год выпуска", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Инвентарный_номер", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Инвентарный номер", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Инвентарный_номер", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Инвентарный номер", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Вид_топлива", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид топлива", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Вид_топлива", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид топлива", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_дата_окончания_страховки", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "дата окончания страховки", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_дата_окончания_страховки", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "дата окончания страховки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Тип_назначения_авто", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип назначения авто", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Тип_назначения_авто", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип назначения авто", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Подвижной состав] ([Марка и модель], [Гос.номер], [Гаражный номер], [Тип двигателя], [Год выпуска], [Инвентарный номер], [Вид топлива], [дата окончания страховки], [Тип назначения авто]) VALUES (@Марка_и_модель, @p1, @Гаражный_номер, @Тип_двигателя, @Год_выпуска, @Инвентарный_номер, @Вид_топлива, @дата_окончания_страховки, @Тип_назначения_авто);
SELECT ID, [Марка и модель], [Гос.номер], [Гаражный номер], [Тип двигателя], [Год выпуска], [Инвентарный номер], [Вид топлива], [дата окончания страховки], [Тип назначения авто] FROM [Подвижной состав] WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Марка_и_модель", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка и модель", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Гос.номер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Гаражный_номер", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Гаражный номер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Тип_двигателя", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип двигателя", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Год_выпуска", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Год выпуска", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Инвентарный_номер", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Инвентарный номер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Вид_топлива", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид топлива", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@дата_окончания_страховки", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "дата окончания страховки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Тип_назначения_авто", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип назначения авто", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Подвижной состав] SET [Марка и модель] = @Марка_и_модель, [Гос.номер] = @" +
                "p1, [Гаражный номер] = @Гаражный_номер, [Тип двигателя] = @Тип_двигателя, [Год в" +
                "ыпуска] = @Год_выпуска, [Инвентарный номер] = @Инвентарный_номер, [Вид топлива] " +
                "= @Вид_топлива, [дата окончания страховки] = @дата_окончания_страховки, [Тип наз" +
                "начения авто] = @Тип_назначения_авто WHERE (([ID] = @Original_ID) AND ([Марка и " +
                "модель] = @Original_Марка_и_модель) AND ([Гос.номер] = @p2) AND ((@IsNull_Гаражн" +
                "ый_номер = 1 AND [Гаражный номер] IS NULL) OR ([Гаражный номер] = @Original_Гара" +
                "жный_номер)) AND ((@IsNull_Тип_двигателя = 1 AND [Тип двигателя] IS NULL) OR ([Т" +
                "ип двигателя] = @Original_Тип_двигателя)) AND ((@IsNull_Год_выпуска = 1 AND [Год" +
                " выпуска] IS NULL) OR ([Год выпуска] = @Original_Год_выпуска)) AND ((@IsNull_Инв" +
                "ентарный_номер = 1 AND [Инвентарный номер] IS NULL) OR ([Инвентарный номер] = @O" +
                "riginal_Инвентарный_номер)) AND ((@IsNull_Вид_топлива = 1 AND [Вид топлива] IS N" +
                "ULL) OR ([Вид топлива] = @Original_Вид_топлива)) AND ((@IsNull_дата_окончания_ст" +
                "раховки = 1 AND [дата окончания страховки] IS NULL) OR ([дата окончания страховк" +
                "и] = @Original_дата_окончания_страховки)) AND ((@IsNull_Тип_назначения_авто = 1 " +
                "AND [Тип назначения авто] IS NULL) OR ([Тип назначения авто] = @Original_Тип_наз" +
                "начения_авто)));\r\nSELECT ID, [Марка и модель], [Гос.номер], [Гаражный номер], [Т" +
                "ип двигателя], [Год выпуска], [Инвентарный номер], [Вид топлива], [дата окончани" +
                "я страховки], [Тип назначения авто] FROM [Подвижной состав] WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Марка_и_модель", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка и модель", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Гос.номер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Гаражный_номер", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Гаражный номер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Тип_двигателя", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип двигателя", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Год_выпуска", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Год выпуска", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Инвентарный_номер", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Инвентарный номер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Вид_топлива", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид топлива", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@дата_окончания_страховки", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "дата окончания страховки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Тип_назначения_авто", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип назначения авто", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Марка_и_модель", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка и модель", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Гос.номер", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Гаражный_номер", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Гаражный номер", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Гаражный_номер", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Гаражный номер", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Тип_двигателя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип двигателя", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Тип_двигателя", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип двигателя", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Год_выпуска", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Год выпуска", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Год_выпуска", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Год выпуска", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Инвентарный_номер", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Инвентарный номер", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Инвентарный_номер", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Инвентарный номер", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Вид_топлива", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид топлива", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Вид_топлива", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид топлива", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_дата_окончания_страховки", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "дата окончания страховки", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_дата_окончания_страховки", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "дата окончания страховки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Тип_назначения_авто", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип назначения авто", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Тип_назначения_авто", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип назначения авто", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        ID, [Марка и модель], [Гос.номер], [Гаражный номер], [Тип двигателя" +
                "], [Год выпуска], [Инвентарный номер], [Вид топлива], [дата окончания страховки]" +
                ", \r\n                         [Тип назначения авто]\r\nFROM            [Подвижной с" +
                "остав]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT ID, [Вид топлива], [Гаражный номер], [Год выпуска], [Гос.номер], [Инвентар" +
                "ный номер], [Марка и модель], [Тип двигателя], [Тип назначения авто], [дата окон" +
                "чания страховки] FROM [Подвижной состав] WHERE (ID = @ID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT ID, [Вид топлива], [Гаражный номер], [Год выпуска], [Гос.номер], [Инвентар" +
                "ный номер], [Марка и модель], [Тип двигателя], [Тип назначения авто], [дата окон" +
                "чания страховки] FROM [Подвижной состав] WHERE ([Тип назначения авто] = @type)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@type", global::System.Data.SqlDbType.Char, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Тип назначения авто", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutoparkDB.Подвижной_составDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutoparkDB.Подвижной_составDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutoparkDB.Подвижной_составDataTable dataTable = new AutoparkDB.Подвижной_составDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByID(AutoparkDB.Подвижной_составDataTable dataTable, int ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual AutoparkDB.Подвижной_составDataTable GetDataByID(int ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            AutoparkDB.Подвижной_составDataTable dataTable = new AutoparkDB.Подвижной_составDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByType(AutoparkDB.Подвижной_составDataTable dataTable, string type) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((type == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(type));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual AutoparkDB.Подвижной_составDataTable GetDataByType(string type) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((type == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(type));
            }
            AutoparkDB.Подвижной_составDataTable dataTable = new AutoparkDB.Подвижной_составDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoparkDB.Подвижной_составDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoparkDB dataSet) {
            return this.Adapter.Update(dataSet, "Подвижной состав");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_Марка_и_модель, string p2, string Original_Гаражный_номер, string Original_Тип_двигателя, global::System.Nullable<int> Original_Год_выпуска, string Original_Инвентарный_номер, string Original_Вид_топлива, global::System.Nullable<global::System.DateTime> Original_дата_окончания_страховки, string Original_Тип_назначения_авто) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_Марка_и_модель == null)) {
                throw new global::System.ArgumentNullException("Original_Марка_и_модель");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Марка_и_модель));
            }
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(p2));
            }
            if ((Original_Гаражный_номер == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Гаражный_номер));
            }
            if ((Original_Тип_двигателя == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Тип_двигателя));
            }
            if ((Original_Год_выпуска.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_Год_выпуска.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Инвентарный_номер == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Инвентарный_номер));
            }
            if ((Original_Вид_топлива == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Вид_топлива));
            }
            if ((Original_дата_окончания_страховки.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_дата_окончания_страховки.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Тип_назначения_авто == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Тип_назначения_авто));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Марка_и_модель, string p1, string Гаражный_номер, string Тип_двигателя, global::System.Nullable<int> Год_выпуска, string Инвентарный_номер, string Вид_топлива, global::System.Nullable<global::System.DateTime> дата_окончания_страховки, string Тип_назначения_авто) {
            if ((Марка_и_модель == null)) {
                throw new global::System.ArgumentNullException("Марка_и_модель");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Марка_и_модель));
            }
            if ((p1 == null)) {
                throw new global::System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(p1));
            }
            if ((Гаражный_номер == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Гаражный_номер));
            }
            if ((Тип_двигателя == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Тип_двигателя));
            }
            if ((Год_выпуска.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Год_выпуска.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Инвентарный_номер == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Инвентарный_номер));
            }
            if ((Вид_топлива == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Вид_топлива));
            }
            if ((дата_окончания_страховки.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(дата_окончания_страховки.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Тип_назначения_авто == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Тип_назначения_авто));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Марка_и_модель, 
                    string p1, 
                    string Гаражный_номер, 
                    string Тип_двигателя, 
                    global::System.Nullable<int> Год_выпуска, 
                    string Инвентарный_номер, 
                    string Вид_топлива, 
                    global::System.Nullable<global::System.DateTime> дата_окончания_страховки, 
                    string Тип_назначения_авто, 
                    int Original_ID, 
                    string Original_Марка_и_модель, 
                    string p2, 
                    string Original_Гаражный_номер, 
                    string Original_Тип_двигателя, 
                    global::System.Nullable<int> Original_Год_выпуска, 
                    string Original_Инвентарный_номер, 
                    string Original_Вид_топлива, 
                    global::System.Nullable<global::System.DateTime> Original_дата_окончания_страховки, 
                    string Original_Тип_назначения_авто, 
                    int ID) {
            if ((Марка_и_модель == null)) {
                throw new global::System.ArgumentNullException("Марка_и_модель");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Марка_и_модель));
            }
            if ((p1 == null)) {
                throw new global::System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(p1));
            }
            if ((Гаражный_номер == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Гаражный_номер));
            }
            if ((Тип_двигателя == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Тип_двигателя));
            }
            if ((Год_выпуска.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Год_выпуска.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Инвентарный_номер == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Инвентарный_номер));
            }
            if ((Вид_топлива == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Вид_топлива));
            }
            if ((дата_окончания_страховки.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(дата_окончания_страховки.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Тип_назначения_авто == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Тип_назначения_авто));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ID));
            if ((Original_Марка_и_модель == null)) {
                throw new global::System.ArgumentNullException("Original_Марка_и_модель");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Марка_и_модель));
            }
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(p2));
            }
            if ((Original_Гаражный_номер == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Гаражный_номер));
            }
            if ((Original_Тип_двигателя == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Тип_двигателя));
            }
            if ((Original_Год_выпуска.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_Год_выпуска.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Инвентарный_номер == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Инвентарный_номер));
            }
            if ((Original_Вид_топлива == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_Вид_топлива));
            }
            if ((Original_дата_окончания_страховки.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_дата_окончания_страховки.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_Тип_назначения_авто == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Тип_назначения_авто));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Марка_и_модель, 
                    string p1, 
                    string Гаражный_номер, 
                    string Тип_двигателя, 
                    global::System.Nullable<int> Год_выпуска, 
                    string Инвентарный_номер, 
                    string Вид_топлива, 
                    global::System.Nullable<global::System.DateTime> дата_окончания_страховки, 
                    string Тип_назначения_авто, 
                    int Original_ID, 
                    string Original_Марка_и_модель, 
                    string p2, 
                    string Original_Гаражный_номер, 
                    string Original_Тип_двигателя, 
                    global::System.Nullable<int> Original_Год_выпуска, 
                    string Original_Инвентарный_номер, 
                    string Original_Вид_топлива, 
                    global::System.Nullable<global::System.DateTime> Original_дата_окончания_страховки, 
                    string Original_Тип_назначения_авто) {
            return this.Update(Марка_и_модель, p1, Гаражный_номер, Тип_двигателя, Год_выпуска, Инвентарный_номер, Вид_топлива, дата_окончания_страховки, Тип_назначения_авто, Original_ID, Original_Марка_и_модель, p2, Original_Гаражный_номер, Original_Тип_двигателя, Original_Год_выпуска, Original_Инвентарный_номер, Original_Вид_топлива, Original_дата_окончания_страховки, Original_Тип_назначения_авто, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NormyTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public NormyTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Нормы расхода ГСМ на авто,тракторы";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Марка автомобиля", "Марка автомобиля");
            tableMapping.ColumnMappings.Add("Вид топлива", "Вид топлива");
            tableMapping.ColumnMappings.Add("Норма расхода на 100 км летняя 6%", "Норма расхода на 100 км летняя 6%");
            tableMapping.ColumnMappings.Add("Марка двигателя", "Марка двигателя");
            tableMapping.ColumnMappings.Add("Норма на машино час летняя", "Норма на машино час летняя");
            tableMapping.ColumnMappings.Add("Н-ма расх.масел на 100л р-да топлива моторное,л", "Н-ма расх_масел на 100л р-да топлива моторное,л");
            tableMapping.ColumnMappings.Add("Н-ма расх.масел на 100л р-да трансмиссионное,л", "Н-ма расх_масел на 100л р-да трансмиссионное,л");
            tableMapping.ColumnMappings.Add("Н-ма расх.масел на 100л р-да топлива специальное,л", "Н-ма расх_масел на 100л р-да топлива специальное,л");
            tableMapping.ColumnMappings.Add("Н-ма расх.масел на 100л р-да топлива пластичные смазки,л", "Н-ма расх_масел на 100л р-да топлива пластичные смазки,л");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Нормы расхода ГСМ на авто,тракторы] WHERE (([ID] = @Original_ID) AND ([Марка автомобиля] = @Original_Марка_автомобиля) AND ((@IsNull_Вид_топлива = 1 AND [Вид топлива] IS NULL) OR ([Вид топлива] = @Original_Вид_топлива)) AND ((@p3 = 1 AND [Норма расхода на 100 км летняя 6%] IS NULL) OR ([Норма расхода на 100 км летняя 6%] = @p2)) AND ((@IsNull_Марка_двигателя = 1 AND [Марка двигателя] IS NULL) OR ([Марка двигателя] = @Original_Марка_двигателя)) AND ((@IsNull_Норма_на_машино_час_летняя = 1 AND [Норма на машино час летняя] IS NULL) OR ([Норма на машино час летняя] = @Original_Норма_на_машино_час_летняя)) AND ((@p6 = 1 AND [Н-ма расх.масел на 100л р-да топлива моторное,л] IS NULL) OR ([Н-ма расх.масел на 100л р-да топлива моторное,л] = @p5)) AND ((@p9 = 1 AND [Н-ма расх.масел на 100л р-да трансмиссионное,л] IS NULL) OR ([Н-ма расх.масел на 100л р-да трансмиссионное,л] = @p8)) AND ((@p12 = 1 AND [Н-ма расх.масел на 100л р-да топлива специальное,л] IS NULL) OR ([Н-ма расх.масел на 100л р-да топлива специальное,л] = @p11)) AND ((@p15 = 1 AND [Н-ма расх.масел на 100л р-да топлива пластичные смазки,л] IS NULL) OR ([Н-ма расх.масел на 100л р-да топлива пластичные смазки,л] = @p14)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Марка_автомобиля", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка автомобиля", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Вид_топлива", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид топлива", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Вид_топлива", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид топлива", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма расхода на 100 км летняя 6%", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма расхода на 100 км летняя 6%", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Марка_двигателя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка двигателя", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Марка_двигателя", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка двигателя", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Норма_на_машино_час_летняя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма на машино час летняя", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Норма_на_машино_час_летняя", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма на машино час летняя", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива моторное,л", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива моторное,л", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да трансмиссионное,л", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да трансмиссионное,л", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p12", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива специальное,л", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива специальное,л", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p15", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива пластичные смазки,л", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p14", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива пластичные смазки,л", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Нормы расхода ГСМ на авто,тракторы] ([Марка автомобиля], [Вид топлива], [Норма расхода на 100 км летняя 6%], [Марка двигателя], [Норма на машино час летняя], [Н-ма расх.масел на 100л р-да топлива моторное,л], [Н-ма расх.масел на 100л р-да трансмиссионное,л], [Н-ма расх.масел на 100л р-да топлива специальное,л], [Н-ма расх.масел на 100л р-да топлива пластичные смазки,л]) VALUES (@Марка_автомобиля, @Вид_топлива, @p1, @Марка_двигателя, @Норма_на_машино_час_летняя, @p4, @p7, @p10, @p13);
SELECT ID, [Марка автомобиля], [Вид топлива], [Норма расхода на 100 км летняя 6%], [Марка двигателя], [Норма на машино час летняя], [Н-ма расх.масел на 100л р-да топлива моторное,л], [Н-ма расх.масел на 100л р-да трансмиссионное,л], [Н-ма расх.масел на 100л р-да топлива специальное,л], [Н-ма расх.масел на 100л р-да топлива пластичные смазки,л] FROM [Нормы расхода ГСМ на авто,тракторы] WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Марка_автомобиля", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка автомобиля", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Вид_топлива", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид топлива", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма расхода на 100 км летняя 6%", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Марка_двигателя", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка двигателя", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Норма_на_машино_час_летняя", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма на машино час летняя", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p4", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива моторное,л", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да трансмиссионное,л", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива специальное,л", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p13", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива пластичные смазки,л", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Нормы расхода ГСМ на авто,тракторы] SET [Марка автомобиля] = @Марка_автом" +
                "обиля, [Вид топлива] = @Вид_топлива, [Норма расхода на 100 км летняя 6%] = @p1, " +
                "[Марка двигателя] = @Марка_двигателя, [Норма на машино час летняя] = @Норма_на_м" +
                "ашино_час_летняя, [Н-ма расх.масел на 100л р-да топлива моторное,л] = @p4, [Н-ма" +
                " расх.масел на 100л р-да трансмиссионное,л] = @p7, [Н-ма расх.масел на 100л р-да" +
                " топлива специальное,л] = @p10, [Н-ма расх.масел на 100л р-да топлива пластичные" +
                " смазки,л] = @p13 WHERE (([ID] = @Original_ID) AND ([Марка автомобиля] = @Origin" +
                "al_Марка_автомобиля) AND ((@IsNull_Вид_топлива = 1 AND [Вид топлива] IS NULL) OR" +
                " ([Вид топлива] = @Original_Вид_топлива)) AND ((@p3 = 1 AND [Норма расхода на 10" +
                "0 км летняя 6%] IS NULL) OR ([Норма расхода на 100 км летняя 6%] = @p2)) AND ((@" +
                "IsNull_Марка_двигателя = 1 AND [Марка двигателя] IS NULL) OR ([Марка двигателя] " +
                "= @Original_Марка_двигателя)) AND ((@IsNull_Норма_на_машино_час_летняя = 1 AND [" +
                "Норма на машино час летняя] IS NULL) OR ([Норма на машино час летняя] = @Origina" +
                "l_Норма_на_машино_час_летняя)) AND ((@p6 = 1 AND [Н-ма расх.масел на 100л р-да т" +
                "оплива моторное,л] IS NULL) OR ([Н-ма расх.масел на 100л р-да топлива моторное,л" +
                "] = @p5)) AND ((@p9 = 1 AND [Н-ма расх.масел на 100л р-да трансмиссионное,л] IS " +
                "NULL) OR ([Н-ма расх.масел на 100л р-да трансмиссионное,л] = @p8)) AND ((@p12 = " +
                "1 AND [Н-ма расх.масел на 100л р-да топлива специальное,л] IS NULL) OR ([Н-ма ра" +
                "сх.масел на 100л р-да топлива специальное,л] = @p11)) AND ((@p15 = 1 AND [Н-ма р" +
                "асх.масел на 100л р-да топлива пластичные смазки,л] IS NULL) OR ([Н-ма расх.масе" +
                "л на 100л р-да топлива пластичные смазки,л] = @p14)));\r\nSELECT ID, [Марка автомо" +
                "биля], [Вид топлива], [Норма расхода на 100 км летняя 6%], [Марка двигателя], [Н" +
                "орма на машино час летняя], [Н-ма расх.масел на 100л р-да топлива моторное,л], [" +
                "Н-ма расх.масел на 100л р-да трансмиссионное,л], [Н-ма расх.масел на 100л р-да т" +
                "оплива специальное,л], [Н-ма расх.масел на 100л р-да топлива пластичные смазки,л" +
                "] FROM [Нормы расхода ГСМ на авто,тракторы] WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Марка_автомобиля", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка автомобиля", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Вид_топлива", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид топлива", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма расхода на 100 км летняя 6%", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Марка_двигателя", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка двигателя", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Норма_на_машино_час_летняя", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма на машино час летняя", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p4", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива моторное,л", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да трансмиссионное,л", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива специальное,л", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p13", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива пластичные смазки,л", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Марка_автомобиля", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка автомобиля", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Вид_топлива", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид топлива", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Вид_топлива", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид топлива", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма расхода на 100 км летняя 6%", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма расхода на 100 км летняя 6%", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Марка_двигателя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка двигателя", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Марка_двигателя", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка двигателя", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Норма_на_машино_час_летняя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма на машино час летняя", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Норма_на_машино_час_летняя", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма на машино час летняя", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива моторное,л", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива моторное,л", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да трансмиссионное,л", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да трансмиссионное,л", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p12", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива специальное,л", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива специальное,л", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p15", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива пластичные смазки,л", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p14", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива пластичные смазки,л", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        [Нормы расхода ГСМ на авто,тракторы].*\r\nFROM            [Нормы расх" +
                "ода ГСМ на авто,тракторы]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        ID, [Марка автомобиля], [Вид топлива], [Норма расхода на 100 км летняя 6%], [Марка двигателя], [Норма на машино час летняя], 
                         [Н-ма расх.масел на 100л р-да топлива моторное,л], [Н-ма расх.масел на 100л р-да трансмиссионное,л], 
                         [Н-ма расх.масел на 100л р-да топлива специальное,л], [Н-ма расх.масел на 100л р-да топлива пластичные смазки,л]
FROM            [Нормы расхода ГСМ на авто,тракторы]
WHERE        (ID = @AutoID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AutoID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutoparkDB._Нормы_расхода_ГСМ_на_авто_тракторыDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutoparkDB._Нормы_расхода_ГСМ_на_авто_тракторыDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutoparkDB._Нормы_расхода_ГСМ_на_авто_тракторыDataTable dataTable = new AutoparkDB._Нормы_расхода_ГСМ_на_авто_тракторыDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(AutoparkDB._Нормы_расхода_ГСМ_на_авто_тракторыDataTable dataTable, int AutoID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(AutoID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual AutoparkDB._Нормы_расхода_ГСМ_на_авто_тракторыDataTable GetDataBy(int AutoID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(AutoID));
            AutoparkDB._Нормы_расхода_ГСМ_на_авто_тракторыDataTable dataTable = new AutoparkDB._Нормы_расхода_ГСМ_на_авто_тракторыDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoparkDB._Нормы_расхода_ГСМ_на_авто_тракторыDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoparkDB dataSet) {
            return this.Adapter.Update(dataSet, "Нормы расхода ГСМ на авто,тракторы");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_Марка_автомобиля, string Original_Вид_топлива, global::System.Nullable<double> p2, string Original_Марка_двигателя, global::System.Nullable<double> Original_Норма_на_машино_час_летняя, global::System.Nullable<double> p5, global::System.Nullable<double> p8, global::System.Nullable<double> p11, global::System.Nullable<double> p14) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_Марка_автомобиля == null)) {
                throw new global::System.ArgumentNullException("Original_Марка_автомобиля");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Марка_автомобиля));
            }
            if ((Original_Вид_топлива == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Вид_топлива));
            }
            if ((p2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(p2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_Марка_двигателя == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Марка_двигателя));
            }
            if ((Original_Норма_на_машино_час_летняя.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((double)(Original_Норма_на_машино_час_летняя.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((p5.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((double)(p5.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((p8.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((double)(p8.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((p11.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((double)(p11.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((p14.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((double)(p14.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Марка_автомобиля, string Вид_топлива, global::System.Nullable<double> p1, string Марка_двигателя, global::System.Nullable<double> Норма_на_машино_час_летняя, global::System.Nullable<double> p4, global::System.Nullable<double> p7, global::System.Nullable<double> p10, global::System.Nullable<double> p13) {
            if ((Марка_автомобиля == null)) {
                throw new global::System.ArgumentNullException("Марка_автомобиля");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Марка_автомобиля));
            }
            if ((Вид_топлива == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Вид_топлива));
            }
            if ((p1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(p1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Марка_двигателя == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Марка_двигателя));
            }
            if ((Норма_на_машино_час_летняя.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(Норма_на_машино_час_летняя.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(p4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((p7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(p7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((p10.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(p10.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((p13.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(p13.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Марка_автомобиля, 
                    string Вид_топлива, 
                    global::System.Nullable<double> p1, 
                    string Марка_двигателя, 
                    global::System.Nullable<double> Норма_на_машино_час_летняя, 
                    global::System.Nullable<double> p4, 
                    global::System.Nullable<double> p7, 
                    global::System.Nullable<double> p10, 
                    global::System.Nullable<double> p13, 
                    int Original_ID, 
                    string Original_Марка_автомобиля, 
                    string Original_Вид_топлива, 
                    global::System.Nullable<double> p2, 
                    string Original_Марка_двигателя, 
                    global::System.Nullable<double> Original_Норма_на_машино_час_летняя, 
                    global::System.Nullable<double> p5, 
                    global::System.Nullable<double> p8, 
                    global::System.Nullable<double> p11, 
                    global::System.Nullable<double> p14, 
                    int ID) {
            if ((Марка_автомобиля == null)) {
                throw new global::System.ArgumentNullException("Марка_автомобиля");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Марка_автомобиля));
            }
            if ((Вид_топлива == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Вид_топлива));
            }
            if ((p1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(p1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Марка_двигателя == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Марка_двигателя));
            }
            if ((Норма_на_машино_час_летняя.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(Норма_на_машино_час_летняя.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(p4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((p7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(p7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((p10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(p10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((p13.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(p13.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ID));
            if ((Original_Марка_автомобиля == null)) {
                throw new global::System.ArgumentNullException("Original_Марка_автомобиля");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Марка_автомобиля));
            }
            if ((Original_Вид_топлива == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Вид_топлива));
            }
            if ((p2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(p2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Марка_двигателя == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Марка_двигателя));
            }
            if ((Original_Норма_на_машино_час_летняя.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(Original_Норма_на_машино_час_летняя.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((p5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(p5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((p8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(p8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((p11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(p11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((p14.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((double)(p14.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Марка_автомобиля, 
                    string Вид_топлива, 
                    global::System.Nullable<double> p1, 
                    string Марка_двигателя, 
                    global::System.Nullable<double> Норма_на_машино_час_летняя, 
                    global::System.Nullable<double> p4, 
                    global::System.Nullable<double> p7, 
                    global::System.Nullable<double> p10, 
                    global::System.Nullable<double> p13, 
                    int Original_ID, 
                    string Original_Марка_автомобиля, 
                    string Original_Вид_топлива, 
                    global::System.Nullable<double> p2, 
                    string Original_Марка_двигателя, 
                    global::System.Nullable<double> Original_Норма_на_машино_час_летняя, 
                    global::System.Nullable<double> p5, 
                    global::System.Nullable<double> p8, 
                    global::System.Nullable<double> p11, 
                    global::System.Nullable<double> p14) {
            return this.Update(Марка_автомобиля, Вид_топлива, p1, Марка_двигателя, Норма_на_машино_час_летняя, p4, p7, p10, p13, Original_ID, Original_Марка_автомобиля, Original_Вид_топлива, p2, Original_Марка_двигателя, Original_Норма_на_машино_час_летняя, p5, p8, p11, p14, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VoditeliAutoTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public VoditeliAutoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "VoditeliAuto";
            tableMapping.ColumnMappings.Add("ФИО", "ФИО");
            tableMapping.ColumnMappings.Add("табельный  номер", "табельный  номер");
            tableMapping.ColumnMappings.Add("серия водительского удостоверения", "серия водительского удостоверения");
            tableMapping.ColumnMappings.Add("номер водительского удостоверения", "номер водительского удостоверения");
            tableMapping.ColumnMappings.Add("классность", "классность");
            tableMapping.ColumnMappings.Add("срок действия мед. справки", "срок действия мед_ справки");
            tableMapping.ColumnMappings.Add("Марка и модель", "Марка и модель");
            tableMapping.ColumnMappings.Add("Гос.номер", "Гос_номер");
            tableMapping.ColumnMappings.Add("Гаражный номер", "Гаражный номер");
            tableMapping.ColumnMappings.Add("Тип двигателя", "Тип двигателя");
            tableMapping.ColumnMappings.Add("Год выпуска", "Год выпуска");
            tableMapping.ColumnMappings.Add("Инвентарный номер", "Инвентарный номер");
            tableMapping.ColumnMappings.Add("Вид топлива", "Вид топлива");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("дата окончания страховки", "дата окончания страховки");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        [Личный состав].[табельный  номер],  [Личный состав].Фамилия +' '+ [Личный состав].Имя +' '+ [Личный состав].Отчество AS N'ФИО', 
                         [Личный состав].[номер водительского удостоверения], [Личный состав].классность, [Личный состав].[срок действия мед. справки], [Подвижной состав].ID, 
                         [Подвижной состав].[Марка и модель], [Подвижной состав].[Гос.номер], [Подвижной состав].[Гаражный номер], [Подвижной состав].[Тип двигателя], 
                         [Подвижной состав].[Год выпуска], [Подвижной состав].[Инвентарный номер], [Подвижной состав].[Вид топлива], 
                         [Подвижной состав].[дата окончания страховки], [Подвижной состав].[Тип назначения авто]
FROM            [Водители авто] INNER JOIN
                         [Личный состав] ON [Водители авто].ID_Водитель = [Личный состав].[табельный  номер] INNER JOIN
                         [Подвижной состав] ON [Водители авто].ID_Авто = [Подвижной состав].ID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        [Личный состав].ФИО, [Личный состав].[табельный  номер], [Личный состав].классность, [Личный состав].[срок действия мед. справки], 
                         [Подвижной состав].[Марка и модель], [Подвижной состав].[Гос.номер], [Подвижной состав].[Гаражный номер]
FROM            [Водители авто] INNER JOIN
                         [Личный состав] ON [Водители авто].ID_Водитель = [Личный состав].[табельный  номер] INNER JOIN
                         [Подвижной состав] ON [Водители авто].ID_Авто = [Подвижной состав].ID
WHERE        ([Личный состав].[табельный  номер] = @VoditelID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoditelID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "табельный  номер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutoparkDB.VoditeliAutoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutoparkDB.VoditeliAutoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutoparkDB.VoditeliAutoDataTable dataTable = new AutoparkDB.VoditeliAutoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByVoditel(AutoparkDB.VoditeliAutoDataTable dataTable, int VoditelID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(VoditelID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual AutoparkDB.VoditeliAutoDataTable GetDataByVoditel(int VoditelID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(VoditelID));
            AutoparkDB.VoditeliAutoDataTable dataTable = new AutoparkDB.VoditeliAutoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PutevieLegkovieTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PutevieLegkovieTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Путевые листы легковые";
            tableMapping.ColumnMappings.Add("ID_Путевого листа", "ID_Путевого листа");
            tableMapping.ColumnMappings.Add("За период с", "За период с");
            tableMapping.ColumnMappings.Add("За период по", "За период по");
            tableMapping.ColumnMappings.Add("табельный  номер", "табельный  номер");
            tableMapping.ColumnMappings.Add("ФИО", "ФИО");
            tableMapping.ColumnMappings.Add("Марка и модель", "Марка и модель");
            tableMapping.ColumnMappings.Add("Гос.номер", "Гос_номер");
            tableMapping.ColumnMappings.Add("Гаражный номер", "Гаражный номер");
            tableMapping.ColumnMappings.Add("номер водительского удостоверения", "Водительское удостоверение");
            tableMapping.ColumnMappings.Add("ID_Автомобиль", "ID_Автомобиль");
            tableMapping.ColumnMappings.Add("ID_Водитель", "ID_Водитель");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        [Путевой лист легкового автомобиля].[ID_Путевого листа], [Путевой лист легкового автомобиля].[Номер путевого листа], 
                         [Путевой лист легкового автомобиля].[За период с], [Путевой лист легкового автомобиля].[За период по], [Личный состав].[табельный  номер], 
                         [Личный состав].Фамилия + ' ' + [Личный состав].Имя + ' ' + [Личный состав].Отчество AS 'ФИО', [Подвижной состав].[Марка и модель], 
                         [Подвижной состав].[Гос.номер], [Подвижной состав].[Гаражный номер], [Путевой лист легкового автомобиля].ID_Автомобиль, 
                         [Путевой лист легкового автомобиля].ID_Водитель
FROM            [Путевой лист легкового автомобиля] INNER JOIN
                         [Личный состав] ON [Путевой лист легкового автомобиля].ID_Водитель = [Личный состав].[табельный  номер] INNER JOIN
                         [Подвижной состав] ON [Путевой лист легкового автомобиля].ID_Автомобиль = [Подвижной состав].ID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        [Путевой лист легкового автомобиля].[ID_Путевого листа], [Путевой лист легкового автомобиля].[Номер путевого листа], 
                         [Путевой лист легкового автомобиля].[За период с], [Путевой лист легкового автомобиля].[За период по], [Личный состав].[табельный  номер], 
                         [Личный состав].Фамилия + ' ' + [Личный состав].Имя + ' ' + [Личный состав].Отчество AS 'ФИО', [Подвижной состав].[Марка и модель], 
                         [Подвижной состав].[Гос.номер], [Подвижной состав].[Гаражный номер], [Путевой лист легкового автомобиля].ID_Автомобиль, 
                         [Путевой лист легкового автомобиля].ID_Водитель, [Личный состав].[номер водительского удостоверения]
FROM            [Путевой лист легкового автомобиля] INNER JOIN
                         [Личный состав] ON [Путевой лист легкового автомобиля].ID_Водитель = [Личный состав].[табельный  номер] INNER JOIN
                         [Подвижной состав] ON [Путевой лист легкового автомобиля].ID_Автомобиль = [Подвижной состав].ID
WHERE        ([Путевой лист легкового автомобиля].[ID_Путевого листа] = @ID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT        ISNULL(MAX([Номер путевого листа]), 0) + 1 AS newID\r\nFROM          " +
                "  [Путевой лист легкового автомобиля]\r\nWHERE        (YEAR([За период с]) = YEAR(" +
                "GETDATE()))";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutoparkDB.Путевые_листы_легковыеDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutoparkDB.Путевые_листы_легковыеDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutoparkDB.Путевые_листы_легковыеDataTable dataTable = new AutoparkDB.Путевые_листы_легковыеDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByID(AutoparkDB.Путевые_листы_легковыеDataTable dataTable, int ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual AutoparkDB.Путевые_листы_легковыеDataTable GetDataByID(int ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            AutoparkDB.Путевые_листы_легковыеDataTable dataTable = new AutoparkDB.Путевые_листы_легковыеDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetNewLegkNumber() {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PutevieGruzovieTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PutevieGruzovieTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Путевые листы грузовые";
            tableMapping.ColumnMappings.Add("ID_Путевого листа", "ID_Путевого листа");
            tableMapping.ColumnMappings.Add("Номер путевого листа", "Номер путевого листа");
            tableMapping.ColumnMappings.Add("Дата путевого листа", "Дата путевого листа");
            tableMapping.ColumnMappings.Add("табельный  номер", "табельный  номер");
            tableMapping.ColumnMappings.Add("ФИО", "ФИО");
            tableMapping.ColumnMappings.Add("Марка и модель", "Марка и модель");
            tableMapping.ColumnMappings.Add("Гаражный номер", "Гаражный номер");
            tableMapping.ColumnMappings.Add("Гос.номер", "Гос_номер");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        [Путевой лист Грузового авто].[ID_Путевого листа], [Путевой лист Грузового авто].[Номер путевого листа], 
                         [Путевой лист Грузового авто].[Дата путевого листа], [Личный состав].[табельный  номер], [Подвижной состав].[Марка и модель], 
                         [Подвижной состав].[Гос.номер], [Подвижной состав].[Гаражный номер], 
                         [Личный состав].Фамилия + ' ' + [Личный состав].Имя + ' ' + [Личный состав].Отчество AS 'ФИО'
FROM            [Путевой лист Грузового авто] INNER JOIN
                         [Личный состав] ON [Путевой лист Грузового авто].ID_Водителя = [Личный состав].[табельный  номер] INNER JOIN
                         [Подвижной состав] ON [Путевой лист Грузового авто].ID_Автомобиля = [Подвижной состав].ID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutoparkDB.Путевые_листы_грузовыеDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutoparkDB.Путевые_листы_грузовыеDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutoparkDB.Путевые_листы_грузовыеDataTable dataTable = new AutoparkDB.Путевые_листы_грузовыеDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TablePutevieGruzovieTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TablePutevieGruzovieTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Путевой лист Грузового авто";
            tableMapping.ColumnMappings.Add("ID_Путевого листа", "ID_Путевого листа");
            tableMapping.ColumnMappings.Add("Номер путевого листа", "Номер путевого листа");
            tableMapping.ColumnMappings.Add("Дата путевого листа", "Дата путевого листа");
            tableMapping.ColumnMappings.Add("ID_Водителя", "ID_Водителя");
            tableMapping.ColumnMappings.Add("ID_Автомобиля", "ID_Автомобиля");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Путевой лист Грузового авто] WHERE (([ID_Путевого листа] = @Original_ID_Путевого_листа) AND ([Номер путевого листа] = @Original_Номер_путевого_листа) AND ([Дата путевого листа] = @Original_Дата_путевого_листа) AND ([ID_Водителя] = @Original_ID_Водителя) AND ([ID_Автомобиля] = @Original_ID_Автомобиля) AND ((@IsNull_ID_Работа_водителя_и_авто_выезд = 1 AND [ID_Работа водителя и авто выезд] IS NULL) OR ([ID_Работа водителя и авто выезд] = @Original_ID_Работа_водителя_и_авто_выезд)) AND ((@IsNull_ID_Работа_водителя_и_авто_возвращение = 1 AND [ID_Работа водителя и авто возвращение] IS NULL) OR ([ID_Работа водителя и авто возвращение] = @Original_ID_Работа_водителя_и_авто_возвращение)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Номер_путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_путевого_листа", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Водителя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водителя", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Автомобиля", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиля", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Работа_водителя_и_авто_выезд", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Работа водителя и авто выезд", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Работа_водителя_и_авто_выезд", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Работа водителя и авто выезд", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Работа_водителя_и_авто_возвращение", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Работа водителя и авто возвращение", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Работа_водителя_и_авто_возвращение", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Работа водителя и авто возвращение", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Путевой лист Грузового авто] ([Номер путевого листа], [Дата путевого листа], [ID_Водителя], [ID_Автомобиля], [ID_Работа водителя и авто выезд], [ID_Работа водителя и авто возвращение]) VALUES (@Номер_путевого_листа, @Дата_путевого_листа, @ID_Водителя, @ID_Автомобиля, @ID_Работа_водителя_и_авто_выезд, @ID_Работа_водителя_и_авто_возвращение);
SELECT [ID_Путевого листа], [Номер путевого листа], [Дата путевого листа], ID_Водителя, ID_Автомобиля, [ID_Работа водителя и авто выезд], [ID_Работа водителя и авто возвращение] FROM [Путевой лист Грузового авто] WHERE ([ID_Путевого листа] = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Номер_путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_путевого_листа", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Водителя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водителя", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Автомобиля", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиля", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Работа_водителя_и_авто_выезд", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Работа водителя и авто выезд", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Работа_водителя_и_авто_возвращение", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Работа водителя и авто возвращение", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Путевой лист Грузового авто] SET [Номер путевого листа] = @Номер_путевого_листа, [Дата путевого листа] = @Дата_путевого_листа, [ID_Водителя] = @ID_Водителя, [ID_Автомобиля] = @ID_Автомобиля, [ID_Работа водителя и авто выезд] = @ID_Работа_водителя_и_авто_выезд, [ID_Работа водителя и авто возвращение] = @ID_Работа_водителя_и_авто_возвращение WHERE (([ID_Путевого листа] = @Original_ID_Путевого_листа) AND ([Номер путевого листа] = @Original_Номер_путевого_листа) AND ([Дата путевого листа] = @Original_Дата_путевого_листа) AND ([ID_Водителя] = @Original_ID_Водителя) AND ([ID_Автомобиля] = @Original_ID_Автомобиля) AND ((@IsNull_ID_Работа_водителя_и_авто_выезд = 1 AND [ID_Работа водителя и авто выезд] IS NULL) OR ([ID_Работа водителя и авто выезд] = @Original_ID_Работа_водителя_и_авто_выезд)) AND ((@IsNull_ID_Работа_водителя_и_авто_возвращение = 1 AND [ID_Работа водителя и авто возвращение] IS NULL) OR ([ID_Работа водителя и авто возвращение] = @Original_ID_Работа_водителя_и_авто_возвращение)));
SELECT [ID_Путевого листа], [Номер путевого листа], [Дата путевого листа], ID_Водителя, ID_Автомобиля, [ID_Работа водителя и авто выезд], [ID_Работа водителя и авто возвращение] FROM [Путевой лист Грузового авто] WHERE ([ID_Путевого листа] = @ID_Путевого_листа)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Номер_путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_путевого_листа", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Водителя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водителя", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Автомобиля", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиля", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Работа_водителя_и_авто_выезд", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Работа водителя и авто выезд", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Работа_водителя_и_авто_возвращение", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Работа водителя и авто возвращение", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Номер_путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_путевого_листа", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Водителя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водителя", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Автомобиля", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиля", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Работа_водителя_и_авто_выезд", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Работа водителя и авто выезд", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Работа_водителя_и_авто_выезд", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Работа водителя и авто выезд", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Работа_водителя_и_авто_возвращение", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Работа водителя и авто возвращение", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Работа_водителя_и_авто_возвращение", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Работа водителя и авто возвращение", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Путевого_листа", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [ID_Путевого листа], [Номер путевого листа], [Дата путевого листа], ID_Вод" +
                "ителя, ID_Автомобиля FROM [Путевой лист Грузового авто]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM [Путевой лист Грузового авто]\r\nWHERE        ([ID_Путевого листа] = @O" +
                "riginal_ID_Путевого_листа)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT [ID_Путевого листа], [Номер путевого листа], [Дата путевого листа], ID_Авт" +
                "омобиля, ID_Водителя FROM [Путевой лист Грузового авто] WHERE ([ID_Путевого лист" +
                "а] = @ID)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutoparkDB.Путевой_лист_Грузового_автоDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutoparkDB.Путевой_лист_Грузового_автоDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutoparkDB.Путевой_лист_Грузового_автоDataTable dataTable = new AutoparkDB.Путевой_лист_Грузового_автоDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByID(AutoparkDB.Путевой_лист_Грузового_автоDataTable dataTable, int ID) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual AutoparkDB.Путевой_лист_Грузового_автоDataTable GetDataByID(int ID) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            AutoparkDB.Путевой_лист_Грузового_автоDataTable dataTable = new AutoparkDB.Путевой_лист_Грузового_автоDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoparkDB.Путевой_лист_Грузового_автоDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoparkDB dataSet) {
            return this.Adapter.Update(dataSet, "Путевой лист Грузового авто");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Путевого_листа, int Original_Номер_путевого_листа, System.DateTime Original_Дата_путевого_листа, int Original_ID_Водителя, int Original_ID_Автомобиля, global::System.Nullable<int> Original_ID_Работа_водителя_и_авто_выезд, global::System.Nullable<int> Original_ID_Работа_водителя_и_авто_возвращение) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Путевого_листа));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Номер_путевого_листа));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_Дата_путевого_листа));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_ID_Водителя));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_ID_Автомобиля));
            if ((Original_ID_Работа_водителя_и_авто_выезд.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_ID_Работа_водителя_и_авто_выезд.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_Работа_водителя_и_авто_возвращение.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_ID_Работа_водителя_и_авто_возвращение.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Номер_путевого_листа, System.DateTime Дата_путевого_листа, int ID_Водителя, int ID_Автомобиля, global::System.Nullable<int> ID_Работа_водителя_и_авто_выезд, global::System.Nullable<int> ID_Работа_водителя_и_авто_возвращение) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Номер_путевого_листа));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Дата_путевого_листа));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ID_Водителя));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(ID_Автомобиля));
            if ((ID_Работа_водителя_и_авто_выезд.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(ID_Работа_водителя_и_авто_выезд.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ID_Работа_водителя_и_авто_возвращение.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(ID_Работа_водителя_и_авто_возвращение.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Номер_путевого_листа, System.DateTime Дата_путевого_листа, int ID_Водителя, int ID_Автомобиля, global::System.Nullable<int> ID_Работа_водителя_и_авто_выезд, global::System.Nullable<int> ID_Работа_водителя_и_авто_возвращение, int Original_ID_Путевого_листа, int Original_Номер_путевого_листа, System.DateTime Original_Дата_путевого_листа, int Original_ID_Водителя, int Original_ID_Автомобиля, global::System.Nullable<int> Original_ID_Работа_водителя_и_авто_выезд, global::System.Nullable<int> Original_ID_Работа_водителя_и_авто_возвращение, int ID_Путевого_листа) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Номер_путевого_листа));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Дата_путевого_листа));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(ID_Водителя));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ID_Автомобиля));
            if ((ID_Работа_водителя_и_авто_выезд.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(ID_Работа_водителя_и_авто_выезд.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ID_Работа_водителя_и_авто_возвращение.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ID_Работа_водителя_и_авто_возвращение.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID_Путевого_листа));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_Номер_путевого_листа));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_Дата_путевого_листа));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ID_Водителя));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_ID_Автомобиля));
            if ((Original_ID_Работа_водителя_и_авто_выезд.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_ID_Работа_водителя_и_авто_выезд.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_Работа_водителя_и_авто_возвращение.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_ID_Работа_водителя_и_авто_возвращение.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(ID_Путевого_листа));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Номер_путевого_листа, System.DateTime Дата_путевого_листа, int ID_Водителя, int ID_Автомобиля, global::System.Nullable<int> ID_Работа_водителя_и_авто_выезд, global::System.Nullable<int> ID_Работа_водителя_и_авто_возвращение, int Original_ID_Путевого_листа, int Original_Номер_путевого_листа, System.DateTime Original_Дата_путевого_листа, int Original_ID_Водителя, int Original_ID_Автомобиля, global::System.Nullable<int> Original_ID_Работа_водителя_и_авто_выезд, global::System.Nullable<int> Original_ID_Работа_водителя_и_авто_возвращение) {
            return this.Update(Номер_путевого_листа, Дата_путевого_листа, ID_Водителя, ID_Автомобиля, ID_Работа_водителя_и_авто_выезд, ID_Работа_водителя_и_авто_возвращение, Original_ID_Путевого_листа, Original_Номер_путевого_листа, Original_Дата_путевого_листа, Original_ID_Водителя, Original_ID_Автомобиля, Original_ID_Работа_водителя_и_авто_выезд, Original_ID_Работа_водителя_и_авто_возвращение, Original_ID_Путевого_листа);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteQueryById(int Original_ID_Путевого_листа) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((int)(Original_ID_Путевого_листа));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PutevoiListLegkTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PutevoiListLegkTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PutevoiListLegkTable";
            tableMapping.ColumnMappings.Add("ID_Путевого листа", "ID_Путевого листа");
            tableMapping.ColumnMappings.Add("Номер путевого листа", "Номер путевого листа");
            tableMapping.ColumnMappings.Add("За период с", "За период с");
            tableMapping.ColumnMappings.Add("За период по", "За период по");
            tableMapping.ColumnMappings.Add("ID_Автомобиль", "ID_Автомобиль");
            tableMapping.ColumnMappings.Add("ID_Водитель", "ID_Водитель");
            tableMapping.ColumnMappings.Add("ID_Отдела", "ID_Отдела");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Путевой лист легкового автомобиля] WHERE (([ID_Путевого листа] = @Original_ID_Путевого_листа) AND ((@IsNull_Номер_путевого_листа = 1 AND [Номер путевого листа] IS NULL) OR ([Номер путевого листа] = @Original_Номер_путевого_листа)) AND ((@IsNull_За_период_с = 1 AND [За период с] IS NULL) OR ([За период с] = @Original_За_период_с)) AND ((@IsNull_За_период_по = 1 AND [За период по] IS NULL) OR ([За период по] = @Original_За_период_по)) AND ((@IsNull_ID_Автомобиль = 1 AND [ID_Автомобиль] IS NULL) OR ([ID_Автомобиль] = @Original_ID_Автомобиль)) AND ((@IsNull_ID_Водитель = 1 AND [ID_Водитель] IS NULL) OR ([ID_Водитель] = @Original_ID_Водитель)) AND ((@IsNull_ID_Отдела = 1 AND [ID_Отдела] IS NULL) OR ([ID_Отдела] = @Original_ID_Отдела)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Номер_путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер путевого листа", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Номер_путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_За_период_с", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "За период с", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_За_период_с", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "За период с", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_За_период_по", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "За период по", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_За_период_по", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "За период по", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Автомобиль", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиль", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Автомобиль", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиль", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Водитель", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водитель", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Водитель", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водитель", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Отдела", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Отдела", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Отдела", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Отдела", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Путевой лист легкового автомобиля] ([Номер путевого листа], [За период с], [За период по], [ID_Автомобиль], [ID_Водитель], [ID_Отдела]) VALUES (@Номер_путевого_листа, @За_период_с, @За_период_по, @ID_Автомобиль, @ID_Водитель, @ID_Отдела);
SELECT [ID_Путевого листа], [Номер путевого листа], [За период с], [За период по], ID_Автомобиль, ID_Водитель, ID_Отдела FROM [Путевой лист легкового автомобиля] WHERE ([ID_Путевого листа] = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Номер_путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@За_период_с", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "За период с", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@За_период_по", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "За период по", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Автомобиль", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиль", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Водитель", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водитель", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Отдела", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Отдела", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Путевой лист легкового автомобиля] SET [Номер путевого листа] = @Номер_путевого_листа, [За период с] = @За_период_с, [За период по] = @За_период_по, [ID_Автомобиль] = @ID_Автомобиль, [ID_Водитель] = @ID_Водитель, [ID_Отдела] = @ID_Отдела WHERE (([ID_Путевого листа] = @Original_ID_Путевого_листа) AND ((@IsNull_Номер_путевого_листа = 1 AND [Номер путевого листа] IS NULL) OR ([Номер путевого листа] = @Original_Номер_путевого_листа)) AND ((@IsNull_За_период_с = 1 AND [За период с] IS NULL) OR ([За период с] = @Original_За_период_с)) AND ((@IsNull_За_период_по = 1 AND [За период по] IS NULL) OR ([За период по] = @Original_За_период_по)) AND ((@IsNull_ID_Автомобиль = 1 AND [ID_Автомобиль] IS NULL) OR ([ID_Автомобиль] = @Original_ID_Автомобиль)) AND ((@IsNull_ID_Водитель = 1 AND [ID_Водитель] IS NULL) OR ([ID_Водитель] = @Original_ID_Водитель)) AND ((@IsNull_ID_Отдела = 1 AND [ID_Отдела] IS NULL) OR ([ID_Отдела] = @Original_ID_Отдела)));
SELECT [ID_Путевого листа], [Номер путевого листа], [За период с], [За период по], ID_Автомобиль, ID_Водитель, ID_Отдела FROM [Путевой лист легкового автомобиля] WHERE ([ID_Путевого листа] = @ID_Путевого_листа)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Номер_путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@За_период_с", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "За период с", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@За_период_по", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "За период по", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Автомобиль", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиль", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Водитель", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водитель", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Отдела", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Отдела", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Номер_путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер путевого листа", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Номер_путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_За_период_с", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "За период с", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_За_период_с", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "За период с", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_За_период_по", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "За период по", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_За_период_по", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "За период по", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Автомобиль", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиль", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Автомобиль", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиль", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Водитель", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водитель", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Водитель", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водитель", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Отдела", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Отдела", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Отдела", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Отдела", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Путевого_листа", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        [Путевой лист легкового автомобиля].*\r\nFROM            [Путевой лис" +
                "т легкового автомобиля]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM [Путевой лист легкового автомобиля]\r\nWHERE        ([ID_Путевого листа" +
                "] = @Original_ID_Путевого_листа)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT ID_Автомобиль, ID_Водитель, ID_Отдела, [ID_Путевого листа], [За период по]" +
                ", [За период с], [Номер путевого листа] FROM [Путевой лист легкового автомобиля]" +
                " WHERE ([ID_Путевого листа] = @ID)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT        ISNULL(MAX([Номер путевого листа]), 0) + 1 AS newID\r\nFROM          " +
                "  [Путевой лист легкового автомобиля]\r\nWHERE        (YEAR([За период с]) = YEAR(" +
                "GETDATE()))";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutoparkDB.PutevoiListLegkTableDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutoparkDB.PutevoiListLegkTableDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutoparkDB.PutevoiListLegkTableDataTable dataTable = new AutoparkDB.PutevoiListLegkTableDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByID(AutoparkDB.PutevoiListLegkTableDataTable dataTable, int ID) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual AutoparkDB.PutevoiListLegkTableDataTable GetDataByID(int ID) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            AutoparkDB.PutevoiListLegkTableDataTable dataTable = new AutoparkDB.PutevoiListLegkTableDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoparkDB.PutevoiListLegkTableDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoparkDB dataSet) {
            return this.Adapter.Update(dataSet, "PutevoiListLegkTable");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Путевого_листа, global::System.Nullable<int> Original_Номер_путевого_листа, global::System.Nullable<global::System.DateTime> Original_За_период_с, global::System.Nullable<global::System.DateTime> Original_За_период_по, global::System.Nullable<int> Original_ID_Автомобиль, global::System.Nullable<int> Original_ID_Водитель, global::System.Nullable<int> Original_ID_Отдела) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Путевого_листа));
            if ((Original_Номер_путевого_листа.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Номер_путевого_листа.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_За_период_с.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_За_период_с.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_За_период_по.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_За_период_по.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_Автомобиль.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_ID_Автомобиль.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_Водитель.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_ID_Водитель.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_Отдела.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_ID_Отдела.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> Номер_путевого_листа, global::System.Nullable<global::System.DateTime> За_период_с, global::System.Nullable<global::System.DateTime> За_период_по, global::System.Nullable<int> ID_Автомобиль, global::System.Nullable<int> ID_Водитель, global::System.Nullable<int> ID_Отдела) {
            if ((Номер_путевого_листа.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Номер_путевого_листа.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((За_период_с.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(За_период_с.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((За_период_по.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(За_период_по.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ID_Автомобиль.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(ID_Автомобиль.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ID_Водитель.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(ID_Водитель.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ID_Отдела.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(ID_Отдела.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> Номер_путевого_листа, global::System.Nullable<global::System.DateTime> За_период_с, global::System.Nullable<global::System.DateTime> За_период_по, global::System.Nullable<int> ID_Автомобиль, global::System.Nullable<int> ID_Водитель, global::System.Nullable<int> ID_Отдела, int Original_ID_Путевого_листа, global::System.Nullable<int> Original_Номер_путевого_листа, global::System.Nullable<global::System.DateTime> Original_За_период_с, global::System.Nullable<global::System.DateTime> Original_За_период_по, global::System.Nullable<int> Original_ID_Автомобиль, global::System.Nullable<int> Original_ID_Водитель, global::System.Nullable<int> Original_ID_Отдела, int ID_Путевого_листа) {
            if ((Номер_путевого_листа.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Номер_путевого_листа.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((За_период_с.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(За_период_с.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((За_период_по.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(За_период_по.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ID_Автомобиль.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ID_Автомобиль.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ID_Водитель.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(ID_Водитель.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ID_Отдела.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ID_Отдела.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID_Путевого_листа));
            if ((Original_Номер_путевого_листа.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Номер_путевого_листа.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_За_период_с.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_За_период_с.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_За_период_по.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_За_период_по.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_Автомобиль.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_ID_Автомобиль.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_Водитель.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_ID_Водитель.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_Отдела.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_ID_Отдела.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(ID_Путевого_листа));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> Номер_путевого_листа, global::System.Nullable<global::System.DateTime> За_период_с, global::System.Nullable<global::System.DateTime> За_период_по, global::System.Nullable<int> ID_Автомобиль, global::System.Nullable<int> ID_Водитель, global::System.Nullable<int> ID_Отдела, int Original_ID_Путевого_листа, global::System.Nullable<int> Original_Номер_путевого_листа, global::System.Nullable<global::System.DateTime> Original_За_период_с, global::System.Nullable<global::System.DateTime> Original_За_период_по, global::System.Nullable<int> Original_ID_Автомобиль, global::System.Nullable<int> Original_ID_Водитель, global::System.Nullable<int> Original_ID_Отдела) {
            return this.Update(Номер_путевого_листа, За_период_с, За_период_по, ID_Автомобиль, ID_Водитель, ID_Отдела, Original_ID_Путевого_листа, Original_Номер_путевого_листа, Original_За_период_с, Original_За_период_по, Original_ID_Автомобиль, Original_ID_Водитель, Original_ID_Отдела, Original_ID_Путевого_листа);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteQueryById(int Original_ID_Путевого_листа) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((int)(Original_ID_Путевого_листа));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> GetNewLegkNumber() {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PutListLegkovogoDannieTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PutListLegkovogoDannieTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Данные Путевой лист легкового авто";
            tableMapping.ColumnMappings.Add("id_Данных", "id_Данных");
            tableMapping.ColumnMappings.Add("ID_Путевого листа", "ID_Путевого листа");
            tableMapping.ColumnMappings.Add("Число", "Число");
            tableMapping.ColumnMappings.Add("Время выезда", "Время выезда");
            tableMapping.ColumnMappings.Add("Время возвращения", "Время возвращения");
            tableMapping.ColumnMappings.Add("Время в наряде", "Время в наряде");
            tableMapping.ColumnMappings.Add("Показания спидометра при выезде", "Показания спидометра при выезде");
            tableMapping.ColumnMappings.Add("Показания спидометра при возвращении", "Показания спидометра при возвращении");
            tableMapping.ColumnMappings.Add("Остаток топлива при выезде", "Остаток топлива при выезде");
            tableMapping.ColumnMappings.Add("Остаток топлива при возвращении", "Остаток топлива при возвращении");
            tableMapping.ColumnMappings.Add("Заправлено топлива л", "Заправлено топлива л");
            tableMapping.ColumnMappings.Add("Дата и № чека АЗС", "Дата и № чека АЗС");
            tableMapping.ColumnMappings.Add("Расход топлива по норме", "Расход топлива по норме");
            tableMapping.ColumnMappings.Add("Расход топлива фактически", "Расход топлива фактически");
            tableMapping.ColumnMappings.Add("Расход топлива экономия перерасход", "Расход топлива экономия перерасход");
            tableMapping.ColumnMappings.Add("Маршрут перевозки откуда", "Маршрут перевозки откуда");
            tableMapping.ColumnMappings.Add("Маршрут перевозки куда", "Маршрут перевозки куда");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Данные Путевой лист легкового авто] WHERE (([id_Данных] = @Original_" +
                "id_Данных) AND ((@IsNull_ID_Путевого_листа = 1 AND [ID_Путевого листа] IS NULL) " +
                "OR ([ID_Путевого листа] = @Original_ID_Путевого_листа)) AND ([Число] = @Original" +
                "_Число) AND ((@IsNull_Время_выезда = 1 AND [Время выезда] IS NULL) OR ([Время вы" +
                "езда] = @Original_Время_выезда)) AND ((@IsNull_Время_возвращения = 1 AND [Время " +
                "возвращения] IS NULL) OR ([Время возвращения] = @Original_Время_возвращения)) AN" +
                "D ((@IsNull_Время_в_наряде = 1 AND [Время в наряде] IS NULL) OR ([Время в наряде" +
                "] = @Original_Время_в_наряде)) AND ((@IsNull_Показания_спидометра_при_выезде = 1" +
                " AND [Показания спидометра при выезде] IS NULL) OR ([Показания спидометра при вы" +
                "езде] = @Original_Показания_спидометра_при_выезде)) AND ((@IsNull_Показания_спид" +
                "ометра_при_возвращении = 1 AND [Показания спидометра при возвращении] IS NULL) O" +
                "R ([Показания спидометра при возвращении] = @Original_Показания_спидометра_при_в" +
                "озвращении)) AND ((@IsNull_Остаток_топлива_при_выезде = 1 AND [Остаток топлива п" +
                "ри выезде] IS NULL) OR ([Остаток топлива при выезде] = @Original_Остаток_топлива" +
                "_при_выезде)) AND ((@IsNull_Остаток_топлива_при_возвращении = 1 AND [Остаток топ" +
                "лива при возвращении] IS NULL) OR ([Остаток топлива при возвращении] = @Original" +
                "_Остаток_топлива_при_возвращении)) AND ((@IsNull_Заправлено_топлива_л = 1 AND [З" +
                "аправлено топлива л] IS NULL) OR ([Заправлено топлива л] = @Original_Заправлено_" +
                "топлива_л)) AND ((@p3 = 1 AND [Дата и № чека АЗС] IS NULL) OR ([Дата и № чека АЗ" +
                "С] = @p2)) AND ((@IsNull_Расход_топлива_по_норме = 1 AND [Расход топлива по норм" +
                "е] IS NULL) OR ([Расход топлива по норме] = @Original_Расход_топлива_по_норме)) " +
                "AND ((@IsNull_Расход_топлива_фактически = 1 AND [Расход топлива фактически] IS N" +
                "ULL) OR ([Расход топлива фактически] = @Original_Расход_топлива_фактически)) AND" +
                " ((@IsNull_Расход_топлива_экономия_перерасход = 1 AND [Расход топлива экономия п" +
                "ерерасход] IS NULL) OR ([Расход топлива экономия перерасход] = @Original_Расход_" +
                "топлива_экономия_перерасход)) AND ((@IsNull_Маршрут_перевозки_откуда = 1 AND [Ма" +
                "ршрут перевозки откуда] IS NULL) OR ([Маршрут перевозки откуда] = @Original_Марш" +
                "рут_перевозки_откуда)) AND ((@IsNull_Маршрут_перевозки_куда = 1 AND [Маршрут пер" +
                "евозки куда] IS NULL) OR ([Маршрут перевозки куда] = @Original_Маршрут_перевозки" +
                "_куда)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_Данных", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_Данных", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Число", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Число", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Время_выезда", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время выезда", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Время_выезда", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время выезда", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Время_возвращения", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время возвращения", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Время_возвращения", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время возвращения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Время_в_наряде", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время в наряде", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Время_в_наряде", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время в наряде", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Показания_спидометра_при_выезде", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра при выезде", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Показания_спидометра_при_выезде", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра при выезде", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Показания_спидометра_при_возвращении", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра при возвращении", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Показания_спидометра_при_возвращении", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра при возвращении", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Остаток_топлива_при_выезде", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток топлива при выезде", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Остаток_топлива_при_выезде", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток топлива при выезде", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Остаток_топлива_при_возвращении", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток топлива при возвращении", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Остаток_топлива_при_возвращении", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток топлива при возвращении", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Заправлено_топлива_л", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заправлено топлива л", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Заправлено_топлива_л", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заправлено топлива л", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и № чека АЗС", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и № чека АЗС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Расход_топлива_по_норме", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива по норме", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Расход_топлива_по_норме", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива по норме", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Расход_топлива_фактически", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива фактически", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Расход_топлива_фактически", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива фактически", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Расход_топлива_экономия_перерасход", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива экономия перерасход", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Расход_топлива_экономия_перерасход", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива экономия перерасход", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Маршрут_перевозки_откуда", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Маршрут перевозки откуда", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Маршрут_перевозки_откуда", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Маршрут перевозки откуда", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Маршрут_перевозки_куда", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Маршрут перевозки куда", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Маршрут_перевозки_куда", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Маршрут перевозки куда", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Данные Путевой лист легкового авто] ([ID_Путевого листа], [Число], [Время выезда], [Время возвращения], [Время в наряде], [Показания спидометра при выезде], [Показания спидометра при возвращении], [Остаток топлива при выезде], [Остаток топлива при возвращении], [Заправлено топлива л], [Дата и № чека АЗС], [Расход топлива по норме], [Расход топлива фактически], [Расход топлива экономия перерасход], [Маршрут перевозки откуда], [Маршрут перевозки куда]) VALUES (@ID_Путевого_листа, @Число, @Время_выезда, @Время_возвращения, @Время_в_наряде, @Показания_спидометра_при_выезде, @Показания_спидометра_при_возвращении, @Остаток_топлива_при_выезде, @Остаток_топлива_при_возвращении, @Заправлено_топлива_л, @p1, @Расход_топлива_по_норме, @Расход_топлива_фактически, @Расход_топлива_экономия_перерасход, @Маршрут_перевозки_откуда, @Маршрут_перевозки_куда);
SELECT id_Данных, [ID_Путевого листа], Число, [Время выезда], [Время возвращения], [Время в наряде], [Показания спидометра при выезде], [Показания спидометра при возвращении], [Остаток топлива при выезде], [Остаток топлива при возвращении], [Заправлено топлива л], [Дата и № чека АЗС], [Расход топлива по норме], [Расход топлива фактически], [Расход топлива экономия перерасход], [Маршрут перевозки откуда], [Маршрут перевозки куда] FROM [Данные Путевой лист легкового авто] WHERE (id_Данных = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Число", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Число", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Время_выезда", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время выезда", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Время_возвращения", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время возвращения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Время_в_наряде", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время в наряде", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Показания_спидометра_при_выезде", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра при выезде", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Показания_спидометра_при_возвращении", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра при возвращении", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Остаток_топлива_при_выезде", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток топлива при выезде", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Остаток_топлива_при_возвращении", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток топлива при возвращении", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Заправлено_топлива_л", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заправлено топлива л", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и № чека АЗС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Расход_топлива_по_норме", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива по норме", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Расход_топлива_фактически", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива фактически", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Расход_топлива_экономия_перерасход", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива экономия перерасход", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Маршрут_перевозки_откуда", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Маршрут перевозки откуда", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Маршрут_перевозки_куда", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Маршрут перевозки куда", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Данные Путевой лист легкового авто] SET [ID_Путевого листа] = @ID_Путевог" +
                "о_листа, [Число] = @Число, [Время выезда] = @Время_выезда, [Время возвращения] =" +
                " @Время_возвращения, [Время в наряде] = @Время_в_наряде, [Показания спидометра п" +
                "ри выезде] = @Показания_спидометра_при_выезде, [Показания спидометра при возвращ" +
                "ении] = @Показания_спидометра_при_возвращении, [Остаток топлива при выезде] = @О" +
                "статок_топлива_при_выезде, [Остаток топлива при возвращении] = @Остаток_топлива_" +
                "при_возвращении, [Заправлено топлива л] = @Заправлено_топлива_л, [Дата и № чека " +
                "АЗС] = @p1, [Расход топлива по норме] = @Расход_топлива_по_норме, [Расход топлив" +
                "а фактически] = @Расход_топлива_фактически, [Расход топлива экономия перерасход]" +
                " = @Расход_топлива_экономия_перерасход, [Маршрут перевозки откуда] = @Маршрут_пе" +
                "ревозки_откуда, [Маршрут перевозки куда] = @Маршрут_перевозки_куда WHERE (([id_Д" +
                "анных] = @Original_id_Данных) AND ((@IsNull_ID_Путевого_листа = 1 AND [ID_Путево" +
                "го листа] IS NULL) OR ([ID_Путевого листа] = @Original_ID_Путевого_листа)) AND (" +
                "[Число] = @Original_Число) AND ((@IsNull_Время_выезда = 1 AND [Время выезда] IS " +
                "NULL) OR ([Время выезда] = @Original_Время_выезда)) AND ((@IsNull_Время_возвраще" +
                "ния = 1 AND [Время возвращения] IS NULL) OR ([Время возвращения] = @Original_Вре" +
                "мя_возвращения)) AND ((@IsNull_Время_в_наряде = 1 AND [Время в наряде] IS NULL) " +
                "OR ([Время в наряде] = @Original_Время_в_наряде)) AND ((@IsNull_Показания_спидом" +
                "етра_при_выезде = 1 AND [Показания спидометра при выезде] IS NULL) OR ([Показани" +
                "я спидометра при выезде] = @Original_Показания_спидометра_при_выезде)) AND ((@Is" +
                "Null_Показания_спидометра_при_возвращении = 1 AND [Показания спидометра при возв" +
                "ращении] IS NULL) OR ([Показания спидометра при возвращении] = @Original_Показан" +
                "ия_спидометра_при_возвращении)) AND ((@IsNull_Остаток_топлива_при_выезде = 1 AND" +
                " [Остаток топлива при выезде] IS NULL) OR ([Остаток топлива при выезде] = @Origi" +
                "nal_Остаток_топлива_при_выезде)) AND ((@IsNull_Остаток_топлива_при_возвращении =" +
                " 1 AND [Остаток топлива при возвращении] IS NULL) OR ([Остаток топлива при возвр" +
                "ащении] = @Original_Остаток_топлива_при_возвращении)) AND ((@IsNull_Заправлено_т" +
                "оплива_л = 1 AND [Заправлено топлива л] IS NULL) OR ([Заправлено топлива л] = @O" +
                "riginal_Заправлено_топлива_л)) AND ((@p3 = 1 AND [Дата и № чека АЗС] IS NULL) OR" +
                " ([Дата и № чека АЗС] = @p2)) AND ((@IsNull_Расход_топлива_по_норме = 1 AND [Рас" +
                "ход топлива по норме] IS NULL) OR ([Расход топлива по норме] = @Original_Расход_" +
                "топлива_по_норме)) AND ((@IsNull_Расход_топлива_фактически = 1 AND [Расход топли" +
                "ва фактически] IS NULL) OR ([Расход топлива фактически] = @Original_Расход_топли" +
                "ва_фактически)) AND ((@IsNull_Расход_топлива_экономия_перерасход = 1 AND [Расход" +
                " топлива экономия перерасход] IS NULL) OR ([Расход топлива экономия перерасход] " +
                "= @Original_Расход_топлива_экономия_перерасход)) AND ((@IsNull_Маршрут_перевозки" +
                "_откуда = 1 AND [Маршрут перевозки откуда] IS NULL) OR ([Маршрут перевозки откуд" +
                "а] = @Original_Маршрут_перевозки_откуда)) AND ((@IsNull_Маршрут_перевозки_куда =" +
                " 1 AND [Маршрут перевозки куда] IS NULL) OR ([Маршрут перевозки куда] = @Origina" +
                "l_Маршрут_перевозки_куда)));\r\nSELECT id_Данных, [ID_Путевого листа], Число, [Вре" +
                "мя выезда], [Время возвращения], [Время в наряде], [Показания спидометра при вые" +
                "зде], [Показания спидометра при возвращении], [Остаток топлива при выезде], [Ост" +
                "аток топлива при возвращении], [Заправлено топлива л], [Дата и № чека АЗС], [Рас" +
                "ход топлива по норме], [Расход топлива фактически], [Расход топлива экономия пер" +
                "ерасход], [Маршрут перевозки откуда], [Маршрут перевозки куда] FROM [Данные Путе" +
                "вой лист легкового авто] WHERE (id_Данных = @id_Данных)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Число", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Число", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Время_выезда", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время выезда", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Время_возвращения", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время возвращения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Время_в_наряде", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время в наряде", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Показания_спидометра_при_выезде", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра при выезде", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Показания_спидометра_при_возвращении", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра при возвращении", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Остаток_топлива_при_выезде", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток топлива при выезде", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Остаток_топлива_при_возвращении", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток топлива при возвращении", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Заправлено_топлива_л", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заправлено топлива л", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и № чека АЗС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Расход_топлива_по_норме", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива по норме", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Расход_топлива_фактически", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива фактически", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Расход_топлива_экономия_перерасход", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива экономия перерасход", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Маршрут_перевозки_откуда", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Маршрут перевозки откуда", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Маршрут_перевозки_куда", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Маршрут перевозки куда", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_Данных", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_Данных", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Число", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Число", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Время_выезда", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время выезда", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Время_выезда", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время выезда", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Время_возвращения", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время возвращения", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Время_возвращения", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время возвращения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Время_в_наряде", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время в наряде", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Время_в_наряде", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время в наряде", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Показания_спидометра_при_выезде", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра при выезде", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Показания_спидометра_при_выезде", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра при выезде", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Показания_спидометра_при_возвращении", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра при возвращении", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Показания_спидометра_при_возвращении", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра при возвращении", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Остаток_топлива_при_выезде", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток топлива при выезде", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Остаток_топлива_при_выезде", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток топлива при выезде", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Остаток_топлива_при_возвращении", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток топлива при возвращении", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Остаток_топлива_при_возвращении", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток топлива при возвращении", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Заправлено_топлива_л", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заправлено топлива л", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Заправлено_топлива_л", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заправлено топлива л", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и № чека АЗС", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и № чека АЗС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Расход_топлива_по_норме", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива по норме", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Расход_топлива_по_норме", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива по норме", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Расход_топлива_фактически", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива фактически", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Расход_топлива_фактически", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива фактически", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Расход_топлива_экономия_перерасход", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива экономия перерасход", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Расход_топлива_экономия_перерасход", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива экономия перерасход", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Маршрут_перевозки_откуда", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Маршрут перевозки откуда", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Маршрут_перевозки_откуда", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Маршрут перевозки откуда", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Маршрут_перевозки_куда", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Маршрут перевозки куда", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Маршрут_перевозки_куда", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Маршрут перевозки куда", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id_Данных", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id_Данных", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT id_Данных, [ID_Путевого листа], Число, [Время выезда], [Время возвращения], [Время в наряде], [Показания спидометра при выезде], [Показания спидометра при возвращении], [Остаток топлива при выезде], [Остаток топлива при возвращении], [Заправлено топлива л], [Дата и № чека АЗС], [Расход топлива по норме], [Расход топлива фактически], [Расход топлива экономия перерасход], [Маршрут перевозки откуда], [Маршрут перевозки куда] FROM [Данные Путевой лист легкового авто]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT [ID_Путевого листа], id_Данных, [Время в наряде], [Время возвращения], [Время выезда], [Дата и № чека АЗС], [Заправлено топлива л], [Маршрут перевозки куда], [Маршрут перевозки откуда], [Остаток топлива при возвращении], [Остаток топлива при выезде], [Показания спидометра при возвращении], [Показания спидометра при выезде], [Расход топлива по норме], [Расход топлива фактически], [Расход топлива экономия перерасход], Число FROM [Данные Путевой лист легкового авто] WHERE ([ID_Путевого листа] = @ID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutoparkDB.Данные_Путевой_лист_легкового_автоDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutoparkDB.Данные_Путевой_лист_легкового_автоDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutoparkDB.Данные_Путевой_лист_легкового_автоDataTable dataTable = new AutoparkDB.Данные_Путевой_лист_легкового_автоDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillWithCalculating(AutoparkDB.Данные_Путевой_лист_легкового_автоDataTable dataTable, global::System.Nullable<int> ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((ID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual AutoparkDB.Данные_Путевой_лист_легкового_автоDataTable GetDataWithCalculating(global::System.Nullable<int> ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((ID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            AutoparkDB.Данные_Путевой_лист_легкового_автоDataTable dataTable = new AutoparkDB.Данные_Путевой_лист_легкового_автоDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoparkDB.Данные_Путевой_лист_легкового_автоDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoparkDB dataSet) {
            return this.Adapter.Update(dataSet, "Данные Путевой лист легкового авто");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_id_Данных, 
                    global::System.Nullable<int> Original_ID_Путевого_листа, 
                    System.DateTime Original_Число, 
                    global::System.Nullable<global::System.TimeSpan> Original_Время_выезда, 
                    global::System.Nullable<global::System.TimeSpan> Original_Время_возвращения, 
                    global::System.Nullable<global::System.TimeSpan> Original_Время_в_наряде, 
                    global::System.Nullable<int> Original_Показания_спидометра_при_выезде, 
                    global::System.Nullable<int> Original_Показания_спидометра_при_возвращении, 
                    global::System.Nullable<double> Original_Остаток_топлива_при_выезде, 
                    global::System.Nullable<double> Original_Остаток_топлива_при_возвращении, 
                    global::System.Nullable<double> Original_Заправлено_топлива_л, 
                    string p2, 
                    global::System.Nullable<double> Original_Расход_топлива_по_норме, 
                    global::System.Nullable<double> Original_Расход_топлива_фактически, 
                    global::System.Nullable<double> Original_Расход_топлива_экономия_перерасход, 
                    string Original_Маршрут_перевозки_откуда, 
                    string Original_Маршрут_перевозки_куда) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id_Данных));
            if ((Original_ID_Путевого_листа.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_Путевого_листа.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_Число));
            if ((Original_Время_выезда.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.TimeSpan)(Original_Время_выезда.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_Время_возвращения.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((System.TimeSpan)(Original_Время_возвращения.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_Время_в_наряде.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((System.TimeSpan)(Original_Время_в_наряде.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_Показания_спидометра_при_выезде.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_Показания_спидометра_при_выезде.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_Показания_спидометра_при_возвращении.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_Показания_спидометра_при_возвращении.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_Остаток_топлива_при_выезде.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((double)(Original_Остаток_топлива_при_выезде.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_Остаток_топлива_при_возвращении.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((double)(Original_Остаток_топлива_при_возвращении.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Заправлено_топлива_л.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((double)(Original_Заправлено_топлива_л.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((p2 == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(p2));
            }
            if ((Original_Расход_топлива_по_норме.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((double)(Original_Расход_топлива_по_норме.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_Расход_топлива_фактически.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((double)(Original_Расход_топлива_фактически.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_Расход_топлива_экономия_перерасход.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((double)(Original_Расход_топлива_экономия_перерасход.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_Маршрут_перевозки_откуда == null)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_Маршрут_перевозки_откуда));
            }
            if ((Original_Маршрут_перевозки_куда == null)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_Маршрут_перевозки_куда));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<int> ID_Путевого_листа, 
                    System.DateTime Число, 
                    global::System.Nullable<global::System.TimeSpan> Время_выезда, 
                    global::System.Nullable<global::System.TimeSpan> Время_возвращения, 
                    global::System.Nullable<global::System.TimeSpan> Время_в_наряде, 
                    global::System.Nullable<int> Показания_спидометра_при_выезде, 
                    global::System.Nullable<int> Показания_спидометра_при_возвращении, 
                    global::System.Nullable<double> Остаток_топлива_при_выезде, 
                    global::System.Nullable<double> Остаток_топлива_при_возвращении, 
                    global::System.Nullable<double> Заправлено_топлива_л, 
                    string p1, 
                    global::System.Nullable<double> Расход_топлива_по_норме, 
                    global::System.Nullable<double> Расход_топлива_фактически, 
                    global::System.Nullable<double> Расход_топлива_экономия_перерасход, 
                    string Маршрут_перевозки_откуда, 
                    string Маршрут_перевозки_куда) {
            if ((ID_Путевого_листа.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Путевого_листа.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Число));
            if ((Время_выезда.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.TimeSpan)(Время_выезда.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Время_возвращения.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.TimeSpan)(Время_возвращения.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Время_в_наряде.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.TimeSpan)(Время_в_наряде.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Показания_спидометра_при_выезде.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Показания_спидометра_при_выезде.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Показания_спидометра_при_возвращении.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Показания_спидометра_при_возвращении.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Остаток_топлива_при_выезде.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(Остаток_топлива_при_выезде.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Остаток_топлива_при_возвращении.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(Остаток_топлива_при_возвращении.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Заправлено_топлива_л.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(Заправлено_топлива_л.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((p1 == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(p1));
            }
            if ((Расход_топлива_по_норме.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(Расход_топлива_по_норме.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Расход_топлива_фактически.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(Расход_топлива_фактически.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Расход_топлива_экономия_перерасход.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(Расход_топлива_экономия_перерасход.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Маршрут_перевозки_откуда == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Маршрут_перевозки_откуда));
            }
            if ((Маршрут_перевозки_куда == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Маршрут_перевозки_куда));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> ID_Путевого_листа, 
                    System.DateTime Число, 
                    global::System.Nullable<global::System.TimeSpan> Время_выезда, 
                    global::System.Nullable<global::System.TimeSpan> Время_возвращения, 
                    global::System.Nullable<global::System.TimeSpan> Время_в_наряде, 
                    global::System.Nullable<int> Показания_спидометра_при_выезде, 
                    global::System.Nullable<int> Показания_спидометра_при_возвращении, 
                    global::System.Nullable<double> Остаток_топлива_при_выезде, 
                    global::System.Nullable<double> Остаток_топлива_при_возвращении, 
                    global::System.Nullable<double> Заправлено_топлива_л, 
                    string p1, 
                    global::System.Nullable<double> Расход_топлива_по_норме, 
                    global::System.Nullable<double> Расход_топлива_фактически, 
                    global::System.Nullable<double> Расход_топлива_экономия_перерасход, 
                    string Маршрут_перевозки_откуда, 
                    string Маршрут_перевозки_куда, 
                    int Original_id_Данных, 
                    global::System.Nullable<int> Original_ID_Путевого_листа, 
                    System.DateTime Original_Число, 
                    global::System.Nullable<global::System.TimeSpan> Original_Время_выезда, 
                    global::System.Nullable<global::System.TimeSpan> Original_Время_возвращения, 
                    global::System.Nullable<global::System.TimeSpan> Original_Время_в_наряде, 
                    global::System.Nullable<int> Original_Показания_спидометра_при_выезде, 
                    global::System.Nullable<int> Original_Показания_спидометра_при_возвращении, 
                    global::System.Nullable<double> Original_Остаток_топлива_при_выезде, 
                    global::System.Nullable<double> Original_Остаток_топлива_при_возвращении, 
                    global::System.Nullable<double> Original_Заправлено_топлива_л, 
                    string p2, 
                    global::System.Nullable<double> Original_Расход_топлива_по_норме, 
                    global::System.Nullable<double> Original_Расход_топлива_фактически, 
                    global::System.Nullable<double> Original_Расход_топлива_экономия_перерасход, 
                    string Original_Маршрут_перевозки_откуда, 
                    string Original_Маршрут_перевозки_куда, 
                    int id_Данных) {
            if ((ID_Путевого_листа.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Путевого_листа.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Число));
            if ((Время_выезда.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.TimeSpan)(Время_выезда.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Время_возвращения.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.TimeSpan)(Время_возвращения.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Время_в_наряде.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.TimeSpan)(Время_в_наряде.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Показания_спидометра_при_выезде.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Показания_спидометра_при_выезде.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Показания_спидометра_при_возвращении.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Показания_спидометра_при_возвращении.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Остаток_топлива_при_выезде.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(Остаток_топлива_при_выезде.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Остаток_топлива_при_возвращении.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(Остаток_топлива_при_возвращении.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Заправлено_топлива_л.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Заправлено_топлива_л.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((p1 == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(p1));
            }
            if ((Расход_топлива_по_норме.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(Расход_топлива_по_норме.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Расход_топлива_фактически.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(Расход_топлива_фактически.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Расход_топлива_экономия_перерасход.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(Расход_топлива_экономия_перерасход.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Маршрут_перевозки_откуда == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Маршрут_перевозки_откуда));
            }
            if ((Маршрут_перевозки_куда == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Маршрут_перевозки_куда));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_id_Данных));
            if ((Original_ID_Путевого_листа.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_ID_Путевого_листа.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_Число));
            if ((Original_Время_выезда.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.TimeSpan)(Original_Время_выезда.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_Время_возвращения.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.TimeSpan)(Original_Время_возвращения.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_Время_в_наряде.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((System.TimeSpan)(Original_Время_в_наряде.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_Показания_спидометра_при_выезде.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Original_Показания_спидометра_при_выезде.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_Показания_спидометра_при_возвращении.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(Original_Показания_спидометра_при_возвращении.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_Остаток_топлива_при_выезде.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(Original_Остаток_топлива_при_выезде.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_Остаток_топлива_при_возвращении.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((double)(Original_Остаток_топлива_при_возвращении.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_Заправлено_топлива_л.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((double)(Original_Заправлено_топлива_л.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((p2 == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(p2));
            }
            if ((Original_Расход_топлива_по_норме.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((double)(Original_Расход_топлива_по_норме.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_Расход_топлива_фактически.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((double)(Original_Расход_топлива_фактически.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_Расход_топлива_экономия_перерасход.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((double)(Original_Расход_топлива_экономия_перерасход.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_Маршрут_перевозки_откуда == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_Маршрут_перевозки_откуда));
            }
            if ((Original_Маршрут_перевозки_куда == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_Маршрут_перевозки_куда));
            }
            this.Adapter.UpdateCommand.Parameters[48].Value = ((int)(id_Данных));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> ID_Путевого_листа, 
                    System.DateTime Число, 
                    global::System.Nullable<global::System.TimeSpan> Время_выезда, 
                    global::System.Nullable<global::System.TimeSpan> Время_возвращения, 
                    global::System.Nullable<global::System.TimeSpan> Время_в_наряде, 
                    global::System.Nullable<int> Показания_спидометра_при_выезде, 
                    global::System.Nullable<int> Показания_спидометра_при_возвращении, 
                    global::System.Nullable<double> Остаток_топлива_при_выезде, 
                    global::System.Nullable<double> Остаток_топлива_при_возвращении, 
                    global::System.Nullable<double> Заправлено_топлива_л, 
                    string p1, 
                    global::System.Nullable<double> Расход_топлива_по_норме, 
                    global::System.Nullable<double> Расход_топлива_фактически, 
                    global::System.Nullable<double> Расход_топлива_экономия_перерасход, 
                    string Маршрут_перевозки_откуда, 
                    string Маршрут_перевозки_куда, 
                    int Original_id_Данных, 
                    global::System.Nullable<int> Original_ID_Путевого_листа, 
                    System.DateTime Original_Число, 
                    global::System.Nullable<global::System.TimeSpan> Original_Время_выезда, 
                    global::System.Nullable<global::System.TimeSpan> Original_Время_возвращения, 
                    global::System.Nullable<global::System.TimeSpan> Original_Время_в_наряде, 
                    global::System.Nullable<int> Original_Показания_спидометра_при_выезде, 
                    global::System.Nullable<int> Original_Показания_спидометра_при_возвращении, 
                    global::System.Nullable<double> Original_Остаток_топлива_при_выезде, 
                    global::System.Nullable<double> Original_Остаток_топлива_при_возвращении, 
                    global::System.Nullable<double> Original_Заправлено_топлива_л, 
                    string p2, 
                    global::System.Nullable<double> Original_Расход_топлива_по_норме, 
                    global::System.Nullable<double> Original_Расход_топлива_фактически, 
                    global::System.Nullable<double> Original_Расход_топлива_экономия_перерасход, 
                    string Original_Маршрут_перевозки_откуда, 
                    string Original_Маршрут_перевозки_куда) {
            return this.Update(ID_Путевого_листа, Число, Время_выезда, Время_возвращения, Время_в_наряде, Показания_спидометра_при_выезде, Показания_спидометра_при_возвращении, Остаток_топлива_при_выезде, Остаток_топлива_при_возвращении, Заправлено_топлива_л, p1, Расход_топлива_по_норме, Расход_топлива_фактически, Расход_топлива_экономия_перерасход, Маршрут_перевозки_откуда, Маршрут_перевозки_куда, Original_id_Данных, Original_ID_Путевого_листа, Original_Число, Original_Время_выезда, Original_Время_возвращения, Original_Время_в_наряде, Original_Показания_спидометра_при_выезде, Original_Показания_спидометра_при_возвращении, Original_Остаток_топлива_при_выезде, Original_Остаток_топлива_при_возвращении, Original_Заправлено_топлива_л, p2, Original_Расход_топлива_по_норме, Original_Расход_топлива_фактически, Original_Расход_топлива_экономия_перерасход, Original_Маршрут_перевозки_откуда, Original_Маршрут_перевозки_куда, Original_id_Данных);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LichniiTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LichniiTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Личный состав";
            tableMapping.ColumnMappings.Add("табельный  номер", "табельный_номер");
            tableMapping.ColumnMappings.Add("Фамилия", "Фамилия");
            tableMapping.ColumnMappings.Add("Имя", "Имя");
            tableMapping.ColumnMappings.Add("Отчество", "Отчество");
            tableMapping.ColumnMappings.Add("номер водительского удостоверения", "номер водительского удостоверения");
            tableMapping.ColumnMappings.Add("классность", "классность");
            tableMapping.ColumnMappings.Add("срок действия мед. справки", "срок действия мед_ справки");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Личный состав] WHERE (([табельный  номер] = @Original_табельный__номер) AND ([Фамилия] = @Original_Фамилия) AND ([Имя] = @Original_Имя) AND ([Отчество] = @Original_Отчество) AND ([номер водительского удостоверения] = @Original_номер_водительского_удостоверения) AND ([классность] = @Original_классность) AND ([срок действия мед. справки] = @p2))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_табельный__номер", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "табельный  номер", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Фамилия", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Имя", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Отчество", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_номер_водительского_удостоверения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "номер водительского удостоверения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_классность", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "классность", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "срок действия мед. справки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Личный состав] ([табельный  номер], [Фамилия], [Имя], [Отчество], [номер водительского удостоверения], [классность], [срок действия мед. справки]) VALUES (@табельный__номер, @Фамилия, @Имя, @Отчество, @номер_водительского_удостоверения, @классность, @p1);
SELECT [табельный  номер], Фамилия, Имя, Отчество, [номер водительского удостоверения], классность, [срок действия мед. справки] FROM [Личный состав] WHERE ([табельный  номер] = @табельный__номер)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@табельный__номер", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "табельный  номер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Фамилия", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Имя", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Отчество", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@номер_водительского_удостоверения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "номер водительского удостоверения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@классность", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "классность", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "срок действия мед. справки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Личный состав] SET [табельный  номер] = @табельный__номер, [Фамилия] = @Фамилия, [Имя] = @Имя, [Отчество] = @Отчество, [номер водительского удостоверения] = @номер_водительского_удостоверения, [классность] = @классность, [срок действия мед. справки] = @p1 WHERE (([табельный  номер] = @Original_табельный__номер) AND ([Фамилия] = @Original_Фамилия) AND ([Имя] = @Original_Имя) AND ([Отчество] = @Original_Отчество) AND ([номер водительского удостоверения] = @Original_номер_водительского_удостоверения) AND ([классность] = @Original_классность) AND ([срок действия мед. справки] = @p2));
SELECT [табельный  номер], Фамилия, Имя, Отчество, [номер водительского удостоверения], классность, [срок действия мед. справки] FROM [Личный состав] WHERE ([табельный  номер] = @табельный__номер)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@табельный__номер", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "табельный  номер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Фамилия", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Имя", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Отчество", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@номер_водительского_удостоверения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "номер водительского удостоверения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@классность", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "классность", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "срок действия мед. справки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_табельный__номер", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "табельный  номер", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Фамилия", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Имя", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Отчество", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_номер_водительского_удостоверения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "номер водительского удостоверения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_классность", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "классность", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "срок действия мед. справки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        [Личный состав].*\r\nFROM            [Личный состав]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        [табельный  номер], Фамилия, Имя, Отчество, [номер водительского уд" +
                "остоверения], классность, [срок действия мед. справки],Фамилия+\' \'+ Имя+\' \'+Отче" +
                "ство AS \'ФИО\'\r\nFROM            [Личный состав]\r\nWHERE        ([табельный  номер]" +
                " = @ID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "табельный  номер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT        классность,Фамилия +\' \'+Имя +\' \'+Отчество AS \'ФИО\', [номер водитель" +
                "ского удостоверения], [срок действия мед. справки], [табельный  номер], [классно" +
                "сть]\r\nFROM            [Личный состав]";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutoparkDB.Личный_составDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutoparkDB.Личный_составDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutoparkDB.Личный_составDataTable dataTable = new AutoparkDB.Личный_составDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByID(AutoparkDB.Личный_составDataTable dataTable, int ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual AutoparkDB.Личный_составDataTable GetDataByID(int ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            AutoparkDB.Личный_составDataTable dataTable = new AutoparkDB.Личный_составDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillSpisokVoditeli(AutoparkDB.Личный_составDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual AutoparkDB.Личный_составDataTable GetDataSpisokVoditeli() {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            AutoparkDB.Личный_составDataTable dataTable = new AutoparkDB.Личный_составDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoparkDB.Личный_составDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoparkDB dataSet) {
            return this.Adapter.Update(dataSet, "Личный состав");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_табельный__номер, string Original_Фамилия, string Original_Имя, string Original_Отчество, string Original_номер_водительского_удостоверения, global::System.Nullable<int> Original_классность, System.DateTime p2) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_табельный__номер));
            if ((Original_Фамилия == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Фамилия));
            }
            if ((Original_Имя == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Имя));
            }
            if ((Original_Отчество == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Отчество));
            }
            if ((Original_номер_водительского_удостоверения == null)) {
                throw new global::System.ArgumentNullException("Original_номер_водительского_удостоверения");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_номер_водительского_удостоверения));
            }
            if ((Original_классность.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_классность.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(p2));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int табельный__номер, string Фамилия, string Имя, string Отчество, string номер_водительского_удостоверения, global::System.Nullable<int> классность, System.DateTime p1) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(табельный__номер));
            if ((Фамилия == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Фамилия));
            }
            if ((Имя == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Имя));
            }
            if ((Отчество == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Отчество));
            }
            if ((номер_водительского_удостоверения == null)) {
                throw new global::System.ArgumentNullException("номер_водительского_удостоверения");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(номер_водительского_удостоверения));
            }
            if ((классность.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(классность.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(p1));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int табельный__номер, string Фамилия, string Имя, string Отчество, string номер_водительского_удостоверения, global::System.Nullable<int> классность, System.DateTime p1, int Original_табельный__номер, string Original_Фамилия, string Original_Имя, string Original_Отчество, string Original_номер_водительского_удостоверения, global::System.Nullable<int> Original_классность, System.DateTime p2) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(табельный__номер));
            if ((Фамилия == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Фамилия));
            }
            if ((Имя == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Имя));
            }
            if ((Отчество == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Отчество));
            }
            if ((номер_водительского_удостоверения == null)) {
                throw new global::System.ArgumentNullException("номер_водительского_удостоверения");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(номер_водительского_удостоверения));
            }
            if ((классность.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(классность.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(p1));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_табельный__номер));
            if ((Original_Фамилия == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Фамилия));
            }
            if ((Original_Имя == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Имя));
            }
            if ((Original_Отчество == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Отчество));
            }
            if ((Original_номер_водительского_удостоверения == null)) {
                throw new global::System.ArgumentNullException("Original_номер_водительского_удостоверения");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_номер_водительского_удостоверения));
            }
            if ((Original_классность.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_классность.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(p2));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ZadanieVoditelTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ZadanieVoditelTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Задание водителю";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("ID_Путевого листа", "ID_Путевого листа");
            tableMapping.ColumnMappings.Add("Заказчик", "Заказчик");
            tableMapping.ColumnMappings.Add("Дата и время прибытия", "Дата и время прибытия");
            tableMapping.ColumnMappings.Add("Дата и время убытия", "Дата и время убытия");
            tableMapping.ColumnMappings.Add("Пункт отправления", "Пункт отправления");
            tableMapping.ColumnMappings.Add("Пункт назначения", "Пункт назначения");
            tableMapping.ColumnMappings.Add("Расстояние км", "Расстояние км");
            tableMapping.ColumnMappings.Add("Наименование груза", "Наименование груза");
            tableMapping.ColumnMappings.Add("Вес груза т", "Вес груза т");
            tableMapping.ColumnMappings.Add("Количество поездок с грузом час", "Количество поездок с грузом час");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Задание водителю] WHERE (([id] = @Original_id) AND ([ID_Путевого листа] = @Original_ID_Путевого_листа) AND ((@IsNull_Заказчик = 1 AND [Заказчик] IS NULL) OR ([Заказчик] = @Original_Заказчик)) AND ((@IsNull_Дата_и_время_прибытия = 1 AND [Дата и время прибытия] IS NULL) OR ([Дата и время прибытия] = @Original_Дата_и_время_прибытия)) AND ((@IsNull_Дата_и_время_убытия = 1 AND [Дата и время убытия] IS NULL) OR ([Дата и время убытия] = @Original_Дата_и_время_убытия)) AND ((@IsNull_Пункт_отправления = 1 AND [Пункт отправления] IS NULL) OR ([Пункт отправления] = @Original_Пункт_отправления)) AND ((@IsNull_Пункт_назначения = 1 AND [Пункт назначения] IS NULL) OR ([Пункт назначения] = @Original_Пункт_назначения)) AND ((@IsNull_Расстояние_км = 1 AND [Расстояние км] IS NULL) OR ([Расстояние км] = @Original_Расстояние_км)) AND ((@IsNull_Наименование_груза = 1 AND [Наименование груза] IS NULL) OR ([Наименование груза] = @Original_Наименование_груза)) AND ((@IsNull_Вес_груза_т = 1 AND [Вес груза т] IS NULL) OR ([Вес груза т] = @Original_Вес_груза_т)) AND ((@IsNull_Количество_поездок_с_грузом_час = 1 AND [Количество поездок с грузом час] IS NULL) OR ([Количество поездок с грузом час] = @Original_Количество_поездок_с_грузом_час)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Заказчик", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заказчик", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Заказчик", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заказчик", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Дата_и_время_прибытия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время прибытия", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_и_время_прибытия", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время прибытия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Дата_и_время_убытия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время убытия", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_и_время_убытия", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время убытия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Пункт_отправления", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пункт отправления", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Пункт_отправления", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пункт отправления", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Пункт_назначения", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пункт назначения", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Пункт_назначения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пункт назначения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Расстояние_км", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расстояние км", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Расстояние_км", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расстояние км", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Наименование_груза", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование груза", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование_груза", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование груза", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Вес_груза_т", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вес груза т", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Вес_груза_т", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вес груза т", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Количество_поездок_с_грузом_час", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество поездок с грузом час", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество_поездок_с_грузом_час", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество поездок с грузом час", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Задание водителю] ([ID_Путевого листа], [Заказчик], [Дата и время прибытия], [Дата и время убытия], [Пункт отправления], [Пункт назначения], [Расстояние км], [Наименование груза], [Вес груза т], [Количество поездок с грузом час]) VALUES (@ID_Путевого_листа, @Заказчик, @Дата_и_время_прибытия, @Дата_и_время_убытия, @Пункт_отправления, @Пункт_назначения, @Расстояние_км, @Наименование_груза, @Вес_груза_т, @Количество_поездок_с_грузом_час);
SELECT id, [ID_Путевого листа], Заказчик, [Дата и время прибытия], [Дата и время убытия], [Пункт отправления], [Пункт назначения], [Расстояние км], [Наименование груза], [Вес груза т], [Количество поездок с грузом час] FROM [Задание водителю] WHERE (id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Заказчик", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заказчик", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_и_время_прибытия", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время прибытия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_и_время_убытия", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время убытия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Пункт_отправления", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пункт отправления", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Пункт_назначения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пункт назначения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Расстояние_км", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расстояние км", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование_груза", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование груза", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Вес_груза_т", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вес груза т", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество_поездок_с_грузом_час", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество поездок с грузом час", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Задание водителю] SET [ID_Путевого листа] = @ID_Путевого_листа, [Заказчик" +
                "] = @Заказчик, [Дата и время прибытия] = @Дата_и_время_прибытия, [Дата и время у" +
                "бытия] = @Дата_и_время_убытия, [Пункт отправления] = @Пункт_отправления, [Пункт " +
                "назначения] = @Пункт_назначения, [Расстояние км] = @Расстояние_км, [Наименование" +
                " груза] = @Наименование_груза, [Вес груза т] = @Вес_груза_т, [Количество поездок" +
                " с грузом час] = @Количество_поездок_с_грузом_час WHERE (([id] = @Original_id) A" +
                "ND ([ID_Путевого листа] = @Original_ID_Путевого_листа) AND ((@IsNull_Заказчик = " +
                "1 AND [Заказчик] IS NULL) OR ([Заказчик] = @Original_Заказчик)) AND ((@IsNull_Да" +
                "та_и_время_прибытия = 1 AND [Дата и время прибытия] IS NULL) OR ([Дата и время п" +
                "рибытия] = @Original_Дата_и_время_прибытия)) AND ((@IsNull_Дата_и_время_убытия =" +
                " 1 AND [Дата и время убытия] IS NULL) OR ([Дата и время убытия] = @Original_Дата" +
                "_и_время_убытия)) AND ((@IsNull_Пункт_отправления = 1 AND [Пункт отправления] IS" +
                " NULL) OR ([Пункт отправления] = @Original_Пункт_отправления)) AND ((@IsNull_Пун" +
                "кт_назначения = 1 AND [Пункт назначения] IS NULL) OR ([Пункт назначения] = @Orig" +
                "inal_Пункт_назначения)) AND ((@IsNull_Расстояние_км = 1 AND [Расстояние км] IS N" +
                "ULL) OR ([Расстояние км] = @Original_Расстояние_км)) AND ((@IsNull_Наименование_" +
                "груза = 1 AND [Наименование груза] IS NULL) OR ([Наименование груза] = @Original" +
                "_Наименование_груза)) AND ((@IsNull_Вес_груза_т = 1 AND [Вес груза т] IS NULL) O" +
                "R ([Вес груза т] = @Original_Вес_груза_т)) AND ((@IsNull_Количество_поездок_с_гр" +
                "узом_час = 1 AND [Количество поездок с грузом час] IS NULL) OR ([Количество поез" +
                "док с грузом час] = @Original_Количество_поездок_с_грузом_час)));\r\nSELECT id, [I" +
                "D_Путевого листа], Заказчик, [Дата и время прибытия], [Дата и время убытия], [Пу" +
                "нкт отправления], [Пункт назначения], [Расстояние км], [Наименование груза], [Ве" +
                "с груза т], [Количество поездок с грузом час] FROM [Задание водителю] WHERE (id " +
                "= @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Заказчик", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заказчик", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_и_время_прибытия", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время прибытия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_и_время_убытия", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время убытия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Пункт_отправления", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пункт отправления", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Пункт_назначения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пункт назначения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Расстояние_км", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расстояние км", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование_груза", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование груза", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Вес_груза_т", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вес груза т", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество_поездок_с_грузом_час", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество поездок с грузом час", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Заказчик", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заказчик", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Заказчик", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заказчик", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Дата_и_время_прибытия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время прибытия", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_и_время_прибытия", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время прибытия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Дата_и_время_убытия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время убытия", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_и_время_убытия", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время убытия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Пункт_отправления", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пункт отправления", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Пункт_отправления", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пункт отправления", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Пункт_назначения", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пункт назначения", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Пункт_назначения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пункт назначения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Расстояние_км", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расстояние км", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Расстояние_км", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расстояние км", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Наименование_груза", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование груза", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование_груза", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование груза", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Вес_груза_т", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вес груза т", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Вес_груза_т", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вес груза т", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Количество_поездок_с_грузом_час", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество поездок с грузом час", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество_поездок_с_грузом_час", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество поездок с грузом час", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        id, [ID_Путевого листа], Заказчик, [Дата и время прибытия], [Дата и время убытия], [Пункт отправления], [Пункт назначения], [Расстояние км], [Наименование груза], [Вес груза т], [Количество поездок с грузом час]
                         
FROM            [Задание водителю]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        id, [ID_Путевого листа], Заказчик, [Дата и время прибытия], [Дата и время убытия], [Пункт отправления], [Пункт назначения], [Расстояние км], [Наименование груза], [Вес груза т], [Количество поездок с грузом час]
                         
FROM            [Задание водителю]
WHERE  [ID_Путевого листа]=@IdPutevoi";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdPutevoi", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutoparkDB.Задание_водителюDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutoparkDB.Задание_водителюDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutoparkDB.Задание_водителюDataTable dataTable = new AutoparkDB.Задание_водителюDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByPutevoiId(AutoparkDB.Задание_водителюDataTable dataTable, int IdPutevoi) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(IdPutevoi));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual AutoparkDB.Задание_водителюDataTable GetDataByPutevoiId(int IdPutevoi) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(IdPutevoi));
            AutoparkDB.Задание_водителюDataTable dataTable = new AutoparkDB.Задание_водителюDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoparkDB.Задание_водителюDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoparkDB dataSet) {
            return this.Adapter.Update(dataSet, "Задание водителю");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, int Original_ID_Путевого_листа, string Original_Заказчик, global::System.Nullable<global::System.DateTime> Original_Дата_и_время_прибытия, global::System.Nullable<global::System.DateTime> Original_Дата_и_время_убытия, string Original_Пункт_отправления, string Original_Пункт_назначения, global::System.Nullable<double> Original_Расстояние_км, string Original_Наименование_груза, global::System.Nullable<double> Original_Вес_груза_т, global::System.Nullable<int> Original_Количество_поездок_с_грузом_час) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Путевого_листа));
            if ((Original_Заказчик == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Заказчик));
            }
            if ((Original_Дата_и_время_прибытия.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_Дата_и_время_прибытия.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_Дата_и_время_убытия.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_Дата_и_время_убытия.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_Пункт_отправления == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Пункт_отправления));
            }
            if ((Original_Пункт_назначения == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Пункт_назначения));
            }
            if ((Original_Расстояние_км.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((double)(Original_Расстояние_км.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_Наименование_груза == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_Наименование_груза));
            }
            if ((Original_Вес_груза_т.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((double)(Original_Вес_груза_т.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Количество_поездок_с_грузом_час.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_Количество_поездок_с_грузом_час.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Путевого_листа, string Заказчик, global::System.Nullable<global::System.DateTime> Дата_и_время_прибытия, global::System.Nullable<global::System.DateTime> Дата_и_время_убытия, string Пункт_отправления, string Пункт_назначения, global::System.Nullable<double> Расстояние_км, string Наименование_груза, global::System.Nullable<double> Вес_груза_т, global::System.Nullable<int> Количество_поездок_с_грузом_час) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Путевого_листа));
            if ((Заказчик == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Заказчик));
            }
            if ((Дата_и_время_прибытия.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Дата_и_время_прибытия.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Дата_и_время_убытия.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Дата_и_время_убытия.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Пункт_отправления == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Пункт_отправления));
            }
            if ((Пункт_назначения == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Пункт_назначения));
            }
            if ((Расстояние_км.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(Расстояние_км.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Наименование_груза == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Наименование_груза));
            }
            if ((Вес_груза_т.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(Вес_груза_т.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Количество_поездок_с_грузом_час.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(Количество_поездок_с_грузом_час.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID_Путевого_листа, 
                    string Заказчик, 
                    global::System.Nullable<global::System.DateTime> Дата_и_время_прибытия, 
                    global::System.Nullable<global::System.DateTime> Дата_и_время_убытия, 
                    string Пункт_отправления, 
                    string Пункт_назначения, 
                    global::System.Nullable<double> Расстояние_км, 
                    string Наименование_груза, 
                    global::System.Nullable<double> Вес_груза_т, 
                    global::System.Nullable<int> Количество_поездок_с_грузом_час, 
                    int Original_id, 
                    int Original_ID_Путевого_листа, 
                    string Original_Заказчик, 
                    global::System.Nullable<global::System.DateTime> Original_Дата_и_время_прибытия, 
                    global::System.Nullable<global::System.DateTime> Original_Дата_и_время_убытия, 
                    string Original_Пункт_отправления, 
                    string Original_Пункт_назначения, 
                    global::System.Nullable<double> Original_Расстояние_км, 
                    string Original_Наименование_груза, 
                    global::System.Nullable<double> Original_Вес_груза_т, 
                    global::System.Nullable<int> Original_Количество_поездок_с_грузом_час, 
                    int id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Путевого_листа));
            if ((Заказчик == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Заказчик));
            }
            if ((Дата_и_время_прибытия.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Дата_и_время_прибытия.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Дата_и_время_убытия.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Дата_и_время_убытия.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Пункт_отправления == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Пункт_отправления));
            }
            if ((Пункт_назначения == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Пункт_назначения));
            }
            if ((Расстояние_км.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(Расстояние_км.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Наименование_груза == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Наименование_груза));
            }
            if ((Вес_груза_т.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(Вес_груза_т.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Количество_поездок_с_грузом_час.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Количество_поездок_с_грузом_час.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_id));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_ID_Путевого_листа));
            if ((Original_Заказчик == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Заказчик));
            }
            if ((Original_Дата_и_время_прибытия.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_Дата_и_время_прибытия.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_Дата_и_время_убытия.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_Дата_и_время_убытия.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Пункт_отправления == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Пункт_отправления));
            }
            if ((Original_Пункт_назначения == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_Пункт_назначения));
            }
            if ((Original_Расстояние_км.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(Original_Расстояние_км.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_Наименование_груза == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Наименование_груза));
            }
            if ((Original_Вес_груза_т.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(Original_Вес_груза_т.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_Количество_поездок_с_грузом_час.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(Original_Количество_поездок_с_грузом_час.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID_Путевого_листа, 
                    string Заказчик, 
                    global::System.Nullable<global::System.DateTime> Дата_и_время_прибытия, 
                    global::System.Nullable<global::System.DateTime> Дата_и_время_убытия, 
                    string Пункт_отправления, 
                    string Пункт_назначения, 
                    global::System.Nullable<double> Расстояние_км, 
                    string Наименование_груза, 
                    global::System.Nullable<double> Вес_груза_т, 
                    global::System.Nullable<int> Количество_поездок_с_грузом_час, 
                    int Original_id, 
                    int Original_ID_Путевого_листа, 
                    string Original_Заказчик, 
                    global::System.Nullable<global::System.DateTime> Original_Дата_и_время_прибытия, 
                    global::System.Nullable<global::System.DateTime> Original_Дата_и_время_убытия, 
                    string Original_Пункт_отправления, 
                    string Original_Пункт_назначения, 
                    global::System.Nullable<double> Original_Расстояние_км, 
                    string Original_Наименование_груза, 
                    global::System.Nullable<double> Original_Вес_груза_т, 
                    global::System.Nullable<int> Original_Количество_поездок_с_грузом_час) {
            return this.Update(ID_Путевого_листа, Заказчик, Дата_и_время_прибытия, Дата_и_время_убытия, Пункт_отправления, Пункт_назначения, Расстояние_км, Наименование_груза, Вес_груза_т, Количество_поездок_с_грузом_час, Original_id, Original_ID_Путевого_листа, Original_Заказчик, Original_Дата_и_время_прибытия, Original_Дата_и_время_убытия, Original_Пункт_отправления, Original_Пункт_назначения, Original_Расстояние_км, Original_Наименование_груза, Original_Вес_груза_т, Original_Количество_поездок_с_грузом_час, Original_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DanieJournalLegkovieTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DanieJournalLegkovieTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DanieJournalLegkovie";
            tableMapping.ColumnMappings.Add("Число", "Число");
            tableMapping.ColumnMappings.Add("Номер путевого листа", "Номер путевого листа");
            tableMapping.ColumnMappings.Add("Остаток топлива при выезде", "Остаток топлива при выезде");
            tableMapping.ColumnMappings.Add("Остаток топлива при возвращении", "Остаток топлива при возвращении");
            tableMapping.ColumnMappings.Add("Время выезда", "Время выезда");
            tableMapping.ColumnMappings.Add("Время возвращения", "Время возвращения");
            tableMapping.ColumnMappings.Add("Показания спидометра при выезде", "Показания спидометра при выезде");
            tableMapping.ColumnMappings.Add("Показания спидометра при возвращении", "Показания спидометра при возвращении");
            tableMapping.ColumnMappings.Add("В чье распоряжение занаряжена автомашина", "В чье распоряжение занаряжена автомашина");
            tableMapping.ColumnMappings.Add("Маршрут перевозки откуда", "Маршрут перевозки откуда");
            tableMapping.ColumnMappings.Add("Маршрут перевозки куда", "Маршрут перевозки куда");
            tableMapping.ColumnMappings.Add("Заправлено топлива л", "Заправлено топлива л");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        [Данные Путевой лист легкового авто].Число, [Путевой лист легкового автомобиля].[Номер путевого листа], 
                         [Данные Путевой лист легкового авто].[Остаток топлива при выезде], [Данные Путевой лист легкового авто].[Остаток топлива при возвращении], 
                         [Данные Путевой лист легкового авто].[Время выезда], [Данные Путевой лист легкового авто].[Время возвращения], 
                         [Данные Путевой лист легкового авто].[Показания спидометра при выезде], 
                         [Данные Путевой лист легкового авто].[Показания спидометра при возвращении], [Подвижной состав].[В чье распоряжение занаряжена автомашина], 
                         [Данные Путевой лист легкового авто].[Маршрут перевозки откуда], [Данные Путевой лист легкового авто].[Маршрут перевозки куда], 
                         [Данные Путевой лист легкового авто].[Заправлено топлива л]
FROM            [Путевой лист легкового автомобиля] INNER JOIN
                         [Подвижной состав] ON [Путевой лист легкового автомобиля].ID_Автомобиль = [Подвижной состав].ID INNER JOIN
                         [Данные Путевой лист легкового авто] ON 
                         [Путевой лист легкового автомобиля].[ID_Путевого листа] = [Данные Путевой лист легкового авто].[ID_Путевого листа]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutoparkDB.DanieJournalLegkovieDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutoparkDB.DanieJournalLegkovieDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutoparkDB.DanieJournalLegkovieDataTable dataTable = new AutoparkDB.DanieJournalLegkovieDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DanieJournalGruzovieTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DanieJournalGruzovieTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DanieJournalGruzovie";
            tableMapping.ColumnMappings.Add("Номер путевого листа", "Номер путевого листа");
            tableMapping.ColumnMappings.Add("Дата путевого листа", "Дата путевого листа");
            tableMapping.ColumnMappings.Add("В чье распоряжение занаряжена автомашина", "В чье распоряжение занаряжена автомашина");
            tableMapping.ColumnMappings.Add("Пункт отправления", "Пункт отправления");
            tableMapping.ColumnMappings.Add("Пункт назначения", "Пункт назначения");
            tableMapping.ColumnMappings.Add("Количество", "Количество");
            tableMapping.ColumnMappings.Add("Спидометр при выезде", "Спидометр при выезде");
            tableMapping.ColumnMappings.Add("Спидометр при возвращении", "Спидометр при возвращении");
            tableMapping.ColumnMappings.Add("Время выезда", "Время выезда");
            tableMapping.ColumnMappings.Add("Время возвращения", "Время возвращения");
            tableMapping.ColumnMappings.Add("Остаток ТСМ при выезде", "Остаток ТСМ при выезде");
            tableMapping.ColumnMappings.Add("Остаток ТСМ при возвращении", "Остаток ТСМ при возвращении");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        [Путевой лист Грузового авто].[Номер путевого листа], [Путевой лист Грузового авто].[Дата путевого листа], 
                         [Подвижной состав].[В чье распоряжение занаряжена автомашина], [Задание водителю].[Пункт отправления], [Задание водителю].[Пункт назначения], 
                         [Заправка ТСМ].Количество, [Путевой лист Грузового авто].[Спидометр при выезде], [Путевой лист Грузового авто].[Спидометр при возвращении], 
                         [Путевой лист Грузового авто].[Время выезда], [Путевой лист Грузового авто].[Время возвращения], [Движение ТСМ].[Остаток ТСМ при выезде], 
                         [Движение ТСМ].[Остаток ТСМ при возвращении]
FROM            [Путевой лист Грузового авто] INNER JOIN
                         [Подвижной состав] ON [Путевой лист Грузового авто].ID_Автомобиля = [Подвижной состав].ID INNER JOIN
                         [Задание водителю] ON [Путевой лист Грузового авто].[ID_Путевого листа] = [Задание водителю].[ID_Путевого листа] INNER JOIN
                         [Заправка ТСМ] ON [Путевой лист Грузового авто].[ID_Путевого листа] = [Заправка ТСМ].[ID_Путевого листа] INNER JOIN
                         [Движение ТСМ] ON [Путевой лист Грузового авто].[ID_Путевого листа] = [Движение ТСМ].[ID_Путевого листа]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutoparkDB.DanieJournalGruzovieDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutoparkDB.DanieJournalGruzovieDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutoparkDB.DanieJournalGruzovieDataTable dataTable = new AutoparkDB.DanieJournalGruzovieDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BannerJornalGruzovieTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BannerJornalGruzovieTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BannerJornalGruzovie";
            tableMapping.ColumnMappings.Add("Фамилия", "Фамилия");
            tableMapping.ColumnMappings.Add("Имя", "Имя");
            tableMapping.ColumnMappings.Add("Отчество", "Отчество");
            tableMapping.ColumnMappings.Add("срок действия мед. справки", "срок действия мед_ справки");
            tableMapping.ColumnMappings.Add("классность", "классность");
            tableMapping.ColumnMappings.Add("номер водительского удостоверения", "номер водительского удостоверения");
            tableMapping.ColumnMappings.Add("Марка и модель", "Марка и модель");
            tableMapping.ColumnMappings.Add("Гос.номер", "Гос_номер");
            tableMapping.ColumnMappings.Add("Гаражный номер", "Гаражный номер");
            tableMapping.ColumnMappings.Add("дата окончания страховки", "дата окончания страховки");
            tableMapping.ColumnMappings.Add("Вид топлива", "Вид топлива");
            tableMapping.ColumnMappings.Add("ID", "ID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        [Личный состав].Фамилия, [Личный состав].Имя, [Личный состав].Отчество, [Личный состав].[срок действия мед. справки], [Личный состав].классность, 
                         [Личный состав].[номер водительского удостоверения], [Подвижной состав].[Марка и модель], [Подвижной состав].[Гос.номер], 
                         [Подвижной состав].[Гаражный номер], [Подвижной состав].[дата окончания страховки], [Подвижной состав].[Вид топлива], [Подвижной состав].ID
FROM            [Личный состав] CROSS JOIN
                         [Подвижной состав]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        классность,Фамилия +' '+Имя +' '+Отчество AS 'ФИО', [номер водительского удостоверения], [срок действия мед_ справки], [Гос_номер], [классность],[Гаражный номер], [дата окончания страховки],[Марка и модель],[Вид топлива],ID
FROM            [Личный состав] CROSS JOIN
                         [Подвижной состав]";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutoparkDB.BannerJornalGruzovieDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutoparkDB.BannerJornalGruzovieDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutoparkDB.BannerJornalGruzovieDataTable dataTable = new AutoparkDB.BannerJornalGruzovieDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillSpisokVoditel(AutoparkDB.BannerJornalGruzovieDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual AutoparkDB.BannerJornalGruzovieDataTable GetDataSpisokVoditel() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            AutoparkDB.BannerJornalGruzovieDataTable dataTable = new AutoparkDB.BannerJornalGruzovieDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Движение_ТСМTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Движение_ТСМTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Движение ТСМ";
            tableMapping.ColumnMappings.Add("ID_Движение ТМЦ", "ID_Движение ТМЦ");
            tableMapping.ColumnMappings.Add("ID_Путевого листа", "ID_Путевого листа");
            tableMapping.ColumnMappings.Add("Остаток ТСМ при выезде", "Остаток ТСМ при выезде");
            tableMapping.ColumnMappings.Add("Остаток ТСМ при возвращении", "Остаток ТСМ при возвращении");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Движение ТСМ] WHERE (([ID_Движение ТМЦ] = @Original_ID_Движение_ТМЦ) AND ([ID_Путевого листа] = @Original_ID_Путевого_листа) AND ([Остаток ТСМ при выезде] = @Original_Остаток_ТСМ_при_выезде) AND ((@IsNull_Остаток_ТСМ_при_возвращении = 1 AND [Остаток ТСМ при возвращении] IS NULL) OR ([Остаток ТСМ при возвращении] = @Original_Остаток_ТСМ_при_возвращении)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Движение_ТМЦ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Движение ТМЦ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Остаток_ТСМ_при_выезде", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток ТСМ при выезде", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Остаток_ТСМ_при_возвращении", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток ТСМ при возвращении", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Остаток_ТСМ_при_возвращении", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток ТСМ при возвращении", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Движение ТСМ] ([ID_Путевого листа], [Остаток ТСМ при выезде], [Остаток ТСМ при возвращении]) VALUES (@ID_Путевого_листа, @Остаток_ТСМ_при_выезде, @Остаток_ТСМ_при_возвращении);
SELECT [ID_Движение ТМЦ], [ID_Путевого листа], [Остаток ТСМ при выезде], [Остаток ТСМ при возвращении] FROM [Движение ТСМ] WHERE ([ID_Движение ТМЦ] = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Остаток_ТСМ_при_выезде", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток ТСМ при выезде", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Остаток_ТСМ_при_возвращении", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток ТСМ при возвращении", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Движение ТСМ] SET [ID_Путевого листа] = @ID_Путевого_листа, [Остаток ТСМ при выезде] = @Остаток_ТСМ_при_выезде, [Остаток ТСМ при возвращении] = @Остаток_ТСМ_при_возвращении WHERE (([ID_Движение ТМЦ] = @Original_ID_Движение_ТМЦ) AND ([ID_Путевого листа] = @Original_ID_Путевого_листа) AND ([Остаток ТСМ при выезде] = @Original_Остаток_ТСМ_при_выезде) AND ((@IsNull_Остаток_ТСМ_при_возвращении = 1 AND [Остаток ТСМ при возвращении] IS NULL) OR ([Остаток ТСМ при возвращении] = @Original_Остаток_ТСМ_при_возвращении)));
SELECT [ID_Движение ТМЦ], [ID_Путевого листа], [Остаток ТСМ при выезде], [Остаток ТСМ при возвращении] FROM [Движение ТСМ] WHERE ([ID_Движение ТМЦ] = @ID_Движение_ТМЦ)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Остаток_ТСМ_при_выезде", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток ТСМ при выезде", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Остаток_ТСМ_при_возвращении", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток ТСМ при возвращении", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Движение_ТМЦ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Движение ТМЦ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Остаток_ТСМ_при_выезде", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток ТСМ при выезде", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Остаток_ТСМ_при_возвращении", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток ТСМ при возвращении", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Остаток_ТСМ_при_возвращении", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток ТСМ при возвращении", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Движение_ТМЦ", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Движение ТМЦ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        [ID_Движение ТМЦ], [ID_Путевого листа], [Остаток ТСМ при выезде], [" +
                "Остаток ТСМ при возвращении]\r\nFROM            [Движение ТСМ]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        [ID_Движение ТМЦ], [ID_Путевого листа], [Остаток ТСМ при выезде], [" +
                "Остаток ТСМ при возвращении]\r\nFROM            [Движение ТСМ]\r\nWHERE ([ID_Путевог" +
                "о листа] = @ID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutoparkDB.Движение_ТСМDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutoparkDB.Движение_ТСМDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutoparkDB.Движение_ТСМDataTable dataTable = new AutoparkDB.Движение_ТСМDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByID(AutoparkDB.Движение_ТСМDataTable dataTable, int ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual AutoparkDB.Движение_ТСМDataTable GetDataByID(int ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            AutoparkDB.Движение_ТСМDataTable dataTable = new AutoparkDB.Движение_ТСМDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoparkDB.Движение_ТСМDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoparkDB dataSet) {
            return this.Adapter.Update(dataSet, "Движение ТСМ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Движение_ТМЦ, int Original_ID_Путевого_листа, string Original_Остаток_ТСМ_при_выезде, string Original_Остаток_ТСМ_при_возвращении) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Движение_ТМЦ));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Путевого_листа));
            if ((Original_Остаток_ТСМ_при_выезде == null)) {
                throw new global::System.ArgumentNullException("Original_Остаток_ТСМ_при_выезде");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Остаток_ТСМ_при_выезде));
            }
            if ((Original_Остаток_ТСМ_при_возвращении == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Остаток_ТСМ_при_возвращении));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Путевого_листа, string Остаток_ТСМ_при_выезде, string Остаток_ТСМ_при_возвращении) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Путевого_листа));
            if ((Остаток_ТСМ_при_выезде == null)) {
                throw new global::System.ArgumentNullException("Остаток_ТСМ_при_выезде");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Остаток_ТСМ_при_выезде));
            }
            if ((Остаток_ТСМ_при_возвращении == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Остаток_ТСМ_при_возвращении));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Путевого_листа, string Остаток_ТСМ_при_выезде, string Остаток_ТСМ_при_возвращении, int Original_ID_Движение_ТМЦ, int Original_ID_Путевого_листа, string Original_Остаток_ТСМ_при_выезде, string Original_Остаток_ТСМ_при_возвращении, int ID_Движение_ТМЦ) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Путевого_листа));
            if ((Остаток_ТСМ_при_выезде == null)) {
                throw new global::System.ArgumentNullException("Остаток_ТСМ_при_выезде");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Остаток_ТСМ_при_выезде));
            }
            if ((Остаток_ТСМ_при_возвращении == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Остаток_ТСМ_при_возвращении));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_Движение_ТМЦ));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_Путевого_листа));
            if ((Original_Остаток_ТСМ_при_выезде == null)) {
                throw new global::System.ArgumentNullException("Original_Остаток_ТСМ_при_выезде");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Остаток_ТСМ_при_выезде));
            }
            if ((Original_Остаток_ТСМ_при_возвращении == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Остаток_ТСМ_при_возвращении));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(ID_Движение_ТМЦ));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Путевого_листа, string Остаток_ТСМ_при_выезде, string Остаток_ТСМ_при_возвращении, int Original_ID_Движение_ТМЦ, int Original_ID_Путевого_листа, string Original_Остаток_ТСМ_при_выезде, string Original_Остаток_ТСМ_при_возвращении) {
            return this.Update(ID_Путевого_листа, Остаток_ТСМ_при_выезде, Остаток_ТСМ_при_возвращении, Original_ID_Движение_ТМЦ, Original_ID_Путевого_листа, Original_Остаток_ТСМ_при_выезде, Original_Остаток_ТСМ_при_возвращении, Original_ID_Движение_ТМЦ);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Заправка_ТСМTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Заправка_ТСМTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Заправка ТСМ";
            tableMapping.ColumnMappings.Add("ID_Заправка ТСМ", "ID_Заправка ТСМ");
            tableMapping.ColumnMappings.Add("Дата", "Дата");
            tableMapping.ColumnMappings.Add("Марка ТСМ", "Марка ТСМ");
            tableMapping.ColumnMappings.Add("Количество", "Количество");
            tableMapping.ColumnMappings.Add("ID_Путевого листа", "ID_Путевого листа");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Заправка ТСМ] WHERE (([ID_Заправка ТСМ] = @Original_ID_Заправка_ТСМ) AND ((@IsNull_Дата = 1 AND [Дата] IS NULL) OR ([Дата] = @Original_Дата)) AND ((@IsNull_Марка_ТСМ = 1 AND [Марка ТСМ] IS NULL) OR ([Марка ТСМ] = @Original_Марка_ТСМ)) AND ((@IsNull_Количество = 1 AND [Количество] IS NULL) OR ([Количество] = @Original_Количество)) AND ((@IsNull_ID_Путевого_листа = 1 AND [ID_Путевого листа] IS NULL) OR ([ID_Путевого листа] = @Original_ID_Путевого_листа)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Заправка_ТСМ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Заправка ТСМ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Дата", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Марка_ТСМ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка ТСМ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Марка_ТСМ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка ТСМ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Заправка ТСМ] ([Дата], [Марка ТСМ], [Количество], [ID_Путевого листа]) VALUES (@Дата, @Марка_ТСМ, @Количество, @ID_Путевого_листа);
SELECT [ID_Заправка ТСМ], Дата, [Марка ТСМ], Количество, [ID_Путевого листа] FROM [Заправка ТСМ] WHERE ([ID_Заправка ТСМ] = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Марка_ТСМ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка ТСМ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Заправка ТСМ] SET [Дата] = @Дата, [Марка ТСМ] = @Марка_ТСМ, [Количество] = @Количество, [ID_Путевого листа] = @ID_Путевого_листа WHERE (([ID_Заправка ТСМ] = @Original_ID_Заправка_ТСМ) AND ((@IsNull_Дата = 1 AND [Дата] IS NULL) OR ([Дата] = @Original_Дата)) AND ((@IsNull_Марка_ТСМ = 1 AND [Марка ТСМ] IS NULL) OR ([Марка ТСМ] = @Original_Марка_ТСМ)) AND ((@IsNull_Количество = 1 AND [Количество] IS NULL) OR ([Количество] = @Original_Количество)) AND ((@IsNull_ID_Путевого_листа = 1 AND [ID_Путевого листа] IS NULL) OR ([ID_Путевого листа] = @Original_ID_Путевого_листа)));
SELECT [ID_Заправка ТСМ], Дата, [Марка ТСМ], Количество, [ID_Путевого листа] FROM [Заправка ТСМ] WHERE ([ID_Заправка ТСМ] = @ID_Заправка_ТСМ)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Марка_ТСМ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка ТСМ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Заправка_ТСМ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Заправка ТСМ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Дата", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Марка_ТСМ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка ТСМ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Марка_ТСМ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка ТСМ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Заправка_ТСМ", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Заправка ТСМ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        [ID_Заправка ТСМ], Дата, [Марка ТСМ], Количество, [ID_Путевого лист" +
                "а]\r\nFROM            [Заправка ТСМ]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        [ID_Заправка ТСМ], Дата, [Марка ТСМ], Количество, [ID_Путевого лист" +
                "а]\r\nFROM            [Заправка ТСМ]\r\n WHERE ([ID_Путевого листа] = @ID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutoparkDB.Заправка_ТСМDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutoparkDB.Заправка_ТСМDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutoparkDB.Заправка_ТСМDataTable dataTable = new AutoparkDB.Заправка_ТСМDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByID(AutoparkDB.Заправка_ТСМDataTable dataTable, global::System.Nullable<int> ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((ID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual AutoparkDB.Заправка_ТСМDataTable GetDataByID(global::System.Nullable<int> ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((ID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            AutoparkDB.Заправка_ТСМDataTable dataTable = new AutoparkDB.Заправка_ТСМDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoparkDB.Заправка_ТСМDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoparkDB dataSet) {
            return this.Adapter.Update(dataSet, "Заправка ТСМ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Заправка_ТСМ, global::System.Nullable<global::System.DateTime> Original_Дата, string Original_Марка_ТСМ, global::System.Nullable<double> Original_Количество, global::System.Nullable<int> Original_ID_Путевого_листа) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Заправка_ТСМ));
            if ((Original_Дата.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_Дата.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Марка_ТСМ == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Марка_ТСМ));
            }
            if ((Original_Количество.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_Количество.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_Путевого_листа.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_ID_Путевого_листа.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<global::System.DateTime> Дата, string Марка_ТСМ, global::System.Nullable<double> Количество, global::System.Nullable<int> ID_Путевого_листа) {
            if ((Дата.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Дата.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Марка_ТСМ == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Марка_ТСМ));
            }
            if ((Количество.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(Количество.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ID_Путевого_листа.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(ID_Путевого_листа.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.DateTime> Дата, string Марка_ТСМ, global::System.Nullable<double> Количество, global::System.Nullable<int> ID_Путевого_листа, int Original_ID_Заправка_ТСМ, global::System.Nullable<global::System.DateTime> Original_Дата, string Original_Марка_ТСМ, global::System.Nullable<double> Original_Количество, global::System.Nullable<int> Original_ID_Путевого_листа, int ID_Заправка_ТСМ) {
            if ((Дата.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Дата.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Марка_ТСМ == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Марка_ТСМ));
            }
            if ((Количество.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(Количество.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ID_Путевого_листа.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ID_Путевого_листа.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_Заправка_ТСМ));
            if ((Original_Дата.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_Дата.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_Марка_ТСМ == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Марка_ТСМ));
            }
            if ((Original_Количество.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(Original_Количество.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_Путевого_листа.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_ID_Путевого_листа.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(ID_Заправка_ТСМ));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.DateTime> Дата, string Марка_ТСМ, global::System.Nullable<double> Количество, global::System.Nullable<int> ID_Путевого_листа, int Original_ID_Заправка_ТСМ, global::System.Nullable<global::System.DateTime> Original_Дата, string Original_Марка_ТСМ, global::System.Nullable<double> Original_Количество, global::System.Nullable<int> Original_ID_Путевого_листа) {
            return this.Update(Дата, Марка_ТСМ, Количество, ID_Путевого_листа, Original_ID_Заправка_ТСМ, Original_Дата, Original_Марка_ТСМ, Original_Количество, Original_ID_Путевого_листа, Original_ID_Заправка_ТСМ);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Работа_водителя_и_автомобиляTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Работа_водителя_и_автомобиляTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Работа водителя и автомобиля";
            tableMapping.ColumnMappings.Add("ID_работа водителя и авто", "ID_работа водителя и авто");
            tableMapping.ColumnMappings.Add("ID_Путевого листа", "ID_Путевого листа");
            tableMapping.ColumnMappings.Add("Операции", "Операции");
            tableMapping.ColumnMappings.Add("Показания спидометра", "Показания спидометра");
            tableMapping.ColumnMappings.Add("Дата и время фактически", "Дата и время фактически");
            tableMapping.ColumnMappings.Add("Нулевой пробег", "Нулевой пробег");
            tableMapping.ColumnMappings.Add("Время работы двигателя час", "Время работы двигателя час");
            tableMapping.ColumnMappings.Add("Время работы спецоборудования", "Время работы спецоборудования");
            tableMapping.ColumnMappings.Add("Дата и время по графику", "Дата и время по графику");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Работа водителя и автомобиля] WHERE (([ID_работа водителя и авто] = @Original_ID_работа_водителя_и_авто) AND ((@IsNull_ID_Путевого_листа = 1 AND [ID_Путевого листа] IS NULL) OR ([ID_Путевого листа] = @Original_ID_Путевого_листа)) AND ([Операции] = @Original_Операции) AND ((@IsNull_Показания_спидометра = 1 AND [Показания спидометра] IS NULL) OR ([Показания спидометра] = @Original_Показания_спидометра)) AND ((@IsNull_Дата_и_время_фактически = 1 AND [Дата и время фактически] IS NULL) OR ([Дата и время фактически] = @Original_Дата_и_время_фактически)) AND ((@IsNull_Нулевой_пробег = 1 AND [Нулевой пробег] IS NULL) OR ([Нулевой пробег] = @Original_Нулевой_пробег)) AND ((@IsNull_Время_работы_двигателя_час = 1 AND [Время работы двигателя час] IS NULL) OR ([Время работы двигателя час] = @Original_Время_работы_двигателя_час)) AND ((@IsNull_Время_работы_спецоборудования = 1 AND [Время работы спецоборудования] IS NULL) OR ([Время работы спецоборудования] = @Original_Время_работы_спецоборудования)) AND ((@IsNull_Дата_и_время_по_графику = 1 AND [Дата и время по графику] IS NULL) OR ([Дата и время по графику] = @Original_Дата_и_время_по_графику)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_работа_водителя_и_авто", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_работа водителя и авто", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Операции", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Операции", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Показания_спидометра", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Показания_спидометра", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Дата_и_время_фактически", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время фактически", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_и_время_фактически", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время фактически", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Нулевой_пробег", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Нулевой пробег", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Нулевой_пробег", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Нулевой пробег", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Время_работы_двигателя_час", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время работы двигателя час", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Время_работы_двигателя_час", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время работы двигателя час", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Время_работы_спецоборудования", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время работы спецоборудования", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Время_работы_спецоборудования", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время работы спецоборудования", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Дата_и_время_по_графику", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время по графику", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_и_время_по_графику", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время по графику", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Работа водителя и автомобиля] ([ID_Путевого листа], [Операции], [Показания спидометра], [Дата и время фактически], [Нулевой пробег], [Время работы двигателя час], [Время работы спецоборудования], [Дата и время по графику]) VALUES (@ID_Путевого_листа, @Операции, @Показания_спидометра, @Дата_и_время_фактически, @Нулевой_пробег, @Время_работы_двигателя_час, @Время_работы_спецоборудования, @Дата_и_время_по_графику);
SELECT [ID_работа водителя и авто], [ID_Путевого листа], Операции, [Показания спидометра], [Дата и время фактически], [Нулевой пробег], [Время работы двигателя час], [Время работы спецоборудования], [Дата и время по графику] FROM [Работа водителя и автомобиля] WHERE ([ID_работа водителя и авто] = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Операции", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Операции", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Показания_спидометра", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_и_время_фактически", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время фактически", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Нулевой_пробег", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Нулевой пробег", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Время_работы_двигателя_час", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время работы двигателя час", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Время_работы_спецоборудования", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время работы спецоборудования", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_и_время_по_графику", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время по графику", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Работа водителя и автомобиля] SET [ID_Путевого листа] = @ID_Путевого_лист" +
                "а, [Операции] = @Операции, [Показания спидометра] = @Показания_спидометра, [Дата" +
                " и время фактически] = @Дата_и_время_фактически, [Нулевой пробег] = @Нулевой_про" +
                "бег, [Время работы двигателя час] = @Время_работы_двигателя_час, [Время работы с" +
                "пецоборудования] = @Время_работы_спецоборудования, [Дата и время по графику] = @" +
                "Дата_и_время_по_графику WHERE (([ID_работа водителя и авто] = @Original_ID_работ" +
                "а_водителя_и_авто) AND ((@IsNull_ID_Путевого_листа = 1 AND [ID_Путевого листа] I" +
                "S NULL) OR ([ID_Путевого листа] = @Original_ID_Путевого_листа)) AND ([Операции] " +
                "= @Original_Операции) AND ((@IsNull_Показания_спидометра = 1 AND [Показания спид" +
                "ометра] IS NULL) OR ([Показания спидометра] = @Original_Показания_спидометра)) A" +
                "ND ((@IsNull_Дата_и_время_фактически = 1 AND [Дата и время фактически] IS NULL) " +
                "OR ([Дата и время фактически] = @Original_Дата_и_время_фактически)) AND ((@IsNul" +
                "l_Нулевой_пробег = 1 AND [Нулевой пробег] IS NULL) OR ([Нулевой пробег] = @Origi" +
                "nal_Нулевой_пробег)) AND ((@IsNull_Время_работы_двигателя_час = 1 AND [Время раб" +
                "оты двигателя час] IS NULL) OR ([Время работы двигателя час] = @Original_Время_р" +
                "аботы_двигателя_час)) AND ((@IsNull_Время_работы_спецоборудования = 1 AND [Время" +
                " работы спецоборудования] IS NULL) OR ([Время работы спецоборудования] = @Origin" +
                "al_Время_работы_спецоборудования)) AND ((@IsNull_Дата_и_время_по_графику = 1 AND" +
                " [Дата и время по графику] IS NULL) OR ([Дата и время по графику] = @Original_Да" +
                "та_и_время_по_графику)));\r\nSELECT [ID_работа водителя и авто], [ID_Путевого лист" +
                "а], Операции, [Показания спидометра], [Дата и время фактически], [Нулевой пробег" +
                "], [Время работы двигателя час], [Время работы спецоборудования], [Дата и время " +
                "по графику] FROM [Работа водителя и автомобиля] WHERE ([ID_работа водителя и авт" +
                "о] = @ID_работа_водителя_и_авто)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Операции", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Операции", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Показания_спидометра", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_и_время_фактически", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время фактически", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Нулевой_пробег", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Нулевой пробег", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Время_работы_двигателя_час", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время работы двигателя час", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Время_работы_спецоборудования", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время работы спецоборудования", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_и_время_по_графику", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время по графику", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_работа_водителя_и_авто", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_работа водителя и авто", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Операции", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Операции", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Показания_спидометра", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Показания_спидометра", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Дата_и_время_фактически", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время фактически", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_и_время_фактически", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время фактически", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Нулевой_пробег", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Нулевой пробег", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Нулевой_пробег", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Нулевой пробег", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Время_работы_двигателя_час", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время работы двигателя час", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Время_работы_двигателя_час", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время работы двигателя час", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Время_работы_спецоборудования", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время работы спецоборудования", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Время_работы_спецоборудования", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время работы спецоборудования", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Дата_и_время_по_графику", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время по графику", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_и_время_по_графику", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время по графику", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_работа_водителя_и_авто", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_работа водителя и авто", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        [ID_работа водителя и авто], [ID_Путевого листа], Операции, [Показания спидометра], [Дата и время фактически], [Нулевой пробег], 
                         [Время работы двигателя час], [Время работы спецоборудования], [Дата и время по графику]
FROM            [Работа водителя и автомобиля]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT [ID_Путевого листа], [ID_работа водителя и авто], [Время работы двигателя час], [Время работы спецоборудования], [Дата и время по графику], [Дата и время фактически], [Нулевой пробег], Операции, [Показания спидометра] FROM [Работа водителя и автомобиля] WHERE ([ID_Путевого листа] = @ID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutoparkDB.Работа_водителя_и_автомобиляDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutoparkDB.Работа_водителя_и_автомобиляDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutoparkDB.Работа_водителя_и_автомобиляDataTable dataTable = new AutoparkDB.Работа_водителя_и_автомобиляDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByID(AutoparkDB.Работа_водителя_и_автомобиляDataTable dataTable, global::System.Nullable<int> ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((ID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual AutoparkDB.Работа_водителя_и_автомобиляDataTable GetDataByID(global::System.Nullable<int> ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((ID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            AutoparkDB.Работа_водителя_и_автомобиляDataTable dataTable = new AutoparkDB.Работа_водителя_и_автомобиляDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoparkDB.Работа_водителя_и_автомобиляDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoparkDB dataSet) {
            return this.Adapter.Update(dataSet, "Работа водителя и автомобиля");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_работа_водителя_и_авто, global::System.Nullable<int> Original_ID_Путевого_листа, string Original_Операции, global::System.Nullable<int> Original_Показания_спидометра, global::System.Nullable<global::System.DateTime> Original_Дата_и_время_фактически, global::System.Nullable<int> Original_Нулевой_пробег, global::System.Nullable<int> Original_Время_работы_двигателя_час, global::System.Nullable<int> Original_Время_работы_спецоборудования, global::System.Nullable<global::System.DateTime> Original_Дата_и_время_по_графику) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_работа_водителя_и_авто));
            if ((Original_ID_Путевого_листа.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_Путевого_листа.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Операции == null)) {
                throw new global::System.ArgumentNullException("Original_Операции");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Операции));
            }
            if ((Original_Показания_спидометра.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_Показания_спидометра.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_Дата_и_время_фактически.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_Дата_и_время_фактически.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_Нулевой_пробег.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_Нулевой_пробег.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_Время_работы_двигателя_час.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_Время_работы_двигателя_час.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_Время_работы_спецоборудования.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_Время_работы_спецоборудования.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_Дата_и_время_по_графику.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((System.DateTime)(Original_Дата_и_время_по_графику.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> ID_Путевого_листа, string Операции, global::System.Nullable<int> Показания_спидометра, global::System.Nullable<global::System.DateTime> Дата_и_время_фактически, global::System.Nullable<int> Нулевой_пробег, global::System.Nullable<int> Время_работы_двигателя_час, global::System.Nullable<int> Время_работы_спецоборудования, global::System.Nullable<global::System.DateTime> Дата_и_время_по_графику) {
            if ((ID_Путевого_листа.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Путевого_листа.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Операции == null)) {
                throw new global::System.ArgumentNullException("Операции");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Операции));
            }
            if ((Показания_спидометра.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Показания_спидометра.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Дата_и_время_фактически.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Дата_и_время_фактически.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Нулевой_пробег.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Нулевой_пробег.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Время_работы_двигателя_час.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Время_работы_двигателя_час.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Время_работы_спецоборудования.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Время_работы_спецоборудования.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Дата_и_время_по_графику.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(Дата_и_время_по_графику.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> ID_Путевого_листа, 
                    string Операции, 
                    global::System.Nullable<int> Показания_спидометра, 
                    global::System.Nullable<global::System.DateTime> Дата_и_время_фактически, 
                    global::System.Nullable<int> Нулевой_пробег, 
                    global::System.Nullable<int> Время_работы_двигателя_час, 
                    global::System.Nullable<int> Время_работы_спецоборудования, 
                    global::System.Nullable<global::System.DateTime> Дата_и_время_по_графику, 
                    int Original_ID_работа_водителя_и_авто, 
                    global::System.Nullable<int> Original_ID_Путевого_листа, 
                    string Original_Операции, 
                    global::System.Nullable<int> Original_Показания_спидометра, 
                    global::System.Nullable<global::System.DateTime> Original_Дата_и_время_фактически, 
                    global::System.Nullable<int> Original_Нулевой_пробег, 
                    global::System.Nullable<int> Original_Время_работы_двигателя_час, 
                    global::System.Nullable<int> Original_Время_работы_спецоборудования, 
                    global::System.Nullable<global::System.DateTime> Original_Дата_и_время_по_графику, 
                    int ID_работа_водителя_и_авто) {
            if ((ID_Путевого_листа.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Путевого_листа.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Операции == null)) {
                throw new global::System.ArgumentNullException("Операции");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Операции));
            }
            if ((Показания_спидометра.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Показания_спидометра.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Дата_и_время_фактически.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Дата_и_время_фактически.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Нулевой_пробег.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Нулевой_пробег.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Время_работы_двигателя_час.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Время_работы_двигателя_час.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Время_работы_спецоборудования.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Время_работы_спецоборудования.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Дата_и_время_по_графику.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Дата_и_время_по_графику.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ID_работа_водителя_и_авто));
            if ((Original_ID_Путевого_листа.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_ID_Путевого_листа.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Операции == null)) {
                throw new global::System.ArgumentNullException("Original_Операции");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Операции));
            }
            if ((Original_Показания_спидометра.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_Показания_спидометра.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_Дата_и_время_фактически.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_Дата_и_время_фактически.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_Нулевой_пробег.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_Нулевой_пробег.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Время_работы_двигателя_час.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_Время_работы_двигателя_час.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_Время_работы_спецоборудования.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_Время_работы_спецоборудования.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_Дата_и_время_по_графику.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_Дата_и_время_по_графику.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(ID_работа_водителя_и_авто));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> ID_Путевого_листа, 
                    string Операции, 
                    global::System.Nullable<int> Показания_спидометра, 
                    global::System.Nullable<global::System.DateTime> Дата_и_время_фактически, 
                    global::System.Nullable<int> Нулевой_пробег, 
                    global::System.Nullable<int> Время_работы_двигателя_час, 
                    global::System.Nullable<int> Время_работы_спецоборудования, 
                    global::System.Nullable<global::System.DateTime> Дата_и_время_по_графику, 
                    int Original_ID_работа_водителя_и_авто, 
                    global::System.Nullable<int> Original_ID_Путевого_листа, 
                    string Original_Операции, 
                    global::System.Nullable<int> Original_Показания_спидометра, 
                    global::System.Nullable<global::System.DateTime> Original_Дата_и_время_фактически, 
                    global::System.Nullable<int> Original_Нулевой_пробег, 
                    global::System.Nullable<int> Original_Время_работы_двигателя_час, 
                    global::System.Nullable<int> Original_Время_работы_спецоборудования, 
                    global::System.Nullable<global::System.DateTime> Original_Дата_и_время_по_графику) {
            return this.Update(ID_Путевого_листа, Операции, Показания_спидометра, Дата_и_время_фактически, Нулевой_пробег, Время_работы_двигателя_час, Время_работы_спецоборудования, Дата_и_время_по_графику, Original_ID_работа_водителя_и_авто, Original_ID_Путевого_листа, Original_Операции, Original_Показания_спидометра, Original_Дата_и_время_фактически, Original_Нулевой_пробег, Original_Время_работы_двигателя_час, Original_Время_работы_спецоборудования, Original_Дата_и_время_по_графику, Original_ID_работа_водителя_и_авто);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OtdelTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public OtdelTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Отделы";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Название отдела", "Название отдела");
            tableMapping.ColumnMappings.Add("Аббревиатура", "Аббревиатура");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Отделы] WHERE (([ID] = @Original_ID) AND ((@IsNull_Название_отдела = 1 AND [Название отдела] IS NULL) OR ([Название отдела] = @Original_Название_отдела)) AND ((@IsNull_Аббревиатура = 1 AND [Аббревиатура] IS NULL) OR ([Аббревиатура] = @Original_Аббревиатура)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Название_отдела", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название отдела", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Название_отдела", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название отдела", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Аббревиатура", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Аббревиатура", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Аббревиатура", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Аббревиатура", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Отделы] ([Название отдела], [Аббревиатура]) VALUES (@Название_отдела" +
                ", @Аббревиатура);\r\nSELECT ID, [Название отдела], Аббревиатура FROM Отделы WHERE " +
                "(ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Название_отдела", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название отдела", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Аббревиатура", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Аббревиатура", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Отделы] SET [Название отдела] = @Название_отдела, [Аббревиатура] = @Аббревиатура WHERE (([ID] = @Original_ID) AND ((@IsNull_Название_отдела = 1 AND [Название отдела] IS NULL) OR ([Название отдела] = @Original_Название_отдела)) AND ((@IsNull_Аббревиатура = 1 AND [Аббревиатура] IS NULL) OR ([Аббревиатура] = @Original_Аббревиатура)));
SELECT ID, [Название отдела], Аббревиатура FROM Отделы WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Название_отдела", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название отдела", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Аббревиатура", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Аббревиатура", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Название_отдела", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название отдела", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Название_отдела", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название отдела", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Аббревиатура", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Аббревиатура", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Аббревиатура", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Аббревиатура", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        ID, [Название отдела], Аббревиатура\r\nFROM            Отделы";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutoparkDB.ОтделыDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutoparkDB.ОтделыDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutoparkDB.ОтделыDataTable dataTable = new AutoparkDB.ОтделыDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoparkDB.ОтделыDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutoparkDB dataSet) {
            return this.Adapter.Update(dataSet, "Отделы");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_Название_отдела, string Original_Аббревиатура) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_Название_отдела == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Название_отдела));
            }
            if ((Original_Аббревиатура == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Аббревиатура));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Название_отдела, string Аббревиатура) {
            if ((Название_отдела == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Название_отдела));
            }
            if ((Аббревиатура == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Аббревиатура));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Название_отдела, string Аббревиатура, int Original_ID, string Original_Название_отдела, string Original_Аббревиатура, int ID) {
            if ((Название_отдела == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Название_отдела));
            }
            if ((Аббревиатура == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Аббревиатура));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ID));
            if ((Original_Название_отдела == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_Название_отдела));
            }
            if ((Original_Аббревиатура == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Аббревиатура));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Название_отдела, string Аббревиатура, int Original_ID, string Original_Название_отдела, string Original_Аббревиатура) {
            return this.Update(Название_отдела, Аббревиатура, Original_ID, Original_Название_отдела, Original_Аббревиатура, Original_ID);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private PodvijnoiTableAdapter _podvijnoiTableAdapter;
        
        private NormyTableAdapter _normyTableAdapter;
        
        private TablePutevieGruzovieTableAdapter _tablePutevieGruzovieTableAdapter;
        
        private PutevoiListLegkTableAdapter _putevoiListLegkTableAdapter;
        
        private PutListLegkovogoDannieTableAdapter _putListLegkovogoDannieTableAdapter;
        
        private LichniiTableAdapter _lichniiTableAdapter;
        
        private ZadanieVoditelTableAdapter _zadanieVoditelTableAdapter;
        
        private Движение_ТСМTableAdapter _движение_ТСМTableAdapter;
        
        private Заправка_ТСМTableAdapter _заправка_ТСМTableAdapter;
        
        private Работа_водителя_и_автомобиляTableAdapter _работа_водителя_и_автомобиляTableAdapter;
        
        private OtdelTableAdapter _otdelTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PodvijnoiTableAdapter PodvijnoiTableAdapter {
            get {
                return this._podvijnoiTableAdapter;
            }
            set {
                this._podvijnoiTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public NormyTableAdapter NormyTableAdapter {
            get {
                return this._normyTableAdapter;
            }
            set {
                this._normyTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TablePutevieGruzovieTableAdapter TablePutevieGruzovieTableAdapter {
            get {
                return this._tablePutevieGruzovieTableAdapter;
            }
            set {
                this._tablePutevieGruzovieTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PutevoiListLegkTableAdapter PutevoiListLegkTableAdapter {
            get {
                return this._putevoiListLegkTableAdapter;
            }
            set {
                this._putevoiListLegkTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PutListLegkovogoDannieTableAdapter PutListLegkovogoDannieTableAdapter {
            get {
                return this._putListLegkovogoDannieTableAdapter;
            }
            set {
                this._putListLegkovogoDannieTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public LichniiTableAdapter LichniiTableAdapter {
            get {
                return this._lichniiTableAdapter;
            }
            set {
                this._lichniiTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ZadanieVoditelTableAdapter ZadanieVoditelTableAdapter {
            get {
                return this._zadanieVoditelTableAdapter;
            }
            set {
                this._zadanieVoditelTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Движение_ТСМTableAdapter Движение_ТСМTableAdapter {
            get {
                return this._движение_ТСМTableAdapter;
            }
            set {
                this._движение_ТСМTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Заправка_ТСМTableAdapter Заправка_ТСМTableAdapter {
            get {
                return this._заправка_ТСМTableAdapter;
            }
            set {
                this._заправка_ТСМTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Работа_водителя_и_автомобиляTableAdapter Работа_водителя_и_автомобиляTableAdapter {
            get {
                return this._работа_водителя_и_автомобиляTableAdapter;
            }
            set {
                this._работа_водителя_и_автомобиляTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public OtdelTableAdapter OtdelTableAdapter {
            get {
                return this._otdelTableAdapter;
            }
            set {
                this._otdelTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._podvijnoiTableAdapter != null) 
                            && (this._podvijnoiTableAdapter.Connection != null))) {
                    return this._podvijnoiTableAdapter.Connection;
                }
                if (((this._normyTableAdapter != null) 
                            && (this._normyTableAdapter.Connection != null))) {
                    return this._normyTableAdapter.Connection;
                }
                if (((this._tablePutevieGruzovieTableAdapter != null) 
                            && (this._tablePutevieGruzovieTableAdapter.Connection != null))) {
                    return this._tablePutevieGruzovieTableAdapter.Connection;
                }
                if (((this._putevoiListLegkTableAdapter != null) 
                            && (this._putevoiListLegkTableAdapter.Connection != null))) {
                    return this._putevoiListLegkTableAdapter.Connection;
                }
                if (((this._putListLegkovogoDannieTableAdapter != null) 
                            && (this._putListLegkovogoDannieTableAdapter.Connection != null))) {
                    return this._putListLegkovogoDannieTableAdapter.Connection;
                }
                if (((this._lichniiTableAdapter != null) 
                            && (this._lichniiTableAdapter.Connection != null))) {
                    return this._lichniiTableAdapter.Connection;
                }
                if (((this._zadanieVoditelTableAdapter != null) 
                            && (this._zadanieVoditelTableAdapter.Connection != null))) {
                    return this._zadanieVoditelTableAdapter.Connection;
                }
                if (((this._движение_ТСМTableAdapter != null) 
                            && (this._движение_ТСМTableAdapter.Connection != null))) {
                    return this._движение_ТСМTableAdapter.Connection;
                }
                if (((this._заправка_ТСМTableAdapter != null) 
                            && (this._заправка_ТСМTableAdapter.Connection != null))) {
                    return this._заправка_ТСМTableAdapter.Connection;
                }
                if (((this._работа_водителя_и_автомобиляTableAdapter != null) 
                            && (this._работа_водителя_и_автомобиляTableAdapter.Connection != null))) {
                    return this._работа_водителя_и_автомобиляTableAdapter.Connection;
                }
                if (((this._otdelTableAdapter != null) 
                            && (this._otdelTableAdapter.Connection != null))) {
                    return this._otdelTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._podvijnoiTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._normyTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tablePutevieGruzovieTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._putevoiListLegkTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._putListLegkovogoDannieTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._lichniiTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._zadanieVoditelTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._движение_ТСМTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._заправка_ТСМTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._работа_водителя_и_автомобиляTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._otdelTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(AutoparkDB dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._lichniiTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Личный_состав.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._lichniiTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._podvijnoiTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Подвижной_состав.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._podvijnoiTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._otdelTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Отделы.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._otdelTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._putevoiListLegkTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PutevoiListLegkTable.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._putevoiListLegkTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tablePutevieGruzovieTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Путевой_лист_Грузового_авто.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tablePutevieGruzovieTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._движение_ТСМTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Движение_ТСМ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._движение_ТСМTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._заправка_ТСМTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Заправка_ТСМ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._заправка_ТСМTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._normyTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet._Нормы_расхода_ГСМ_на_авто_тракторы.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._normyTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._работа_водителя_и_автомобиляTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Работа_водителя_и_автомобиля.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._работа_водителя_и_автомобиляTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._putListLegkovogoDannieTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Данные_Путевой_лист_легкового_авто.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._putListLegkovogoDannieTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._zadanieVoditelTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Задание_водителю.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._zadanieVoditelTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(AutoparkDB dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._lichniiTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Личный_состав.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._lichniiTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._podvijnoiTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Подвижной_состав.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._podvijnoiTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._otdelTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Отделы.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._otdelTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._putevoiListLegkTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PutevoiListLegkTable.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._putevoiListLegkTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tablePutevieGruzovieTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Путевой_лист_Грузового_авто.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tablePutevieGruzovieTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._движение_ТСМTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Движение_ТСМ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._движение_ТСМTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._заправка_ТСМTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Заправка_ТСМ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._заправка_ТСМTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._normyTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet._Нормы_расхода_ГСМ_на_авто_тракторы.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._normyTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._работа_водителя_и_автомобиляTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Работа_водителя_и_автомобиля.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._работа_водителя_и_автомобиляTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._putListLegkovogoDannieTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Данные_Путевой_лист_легкового_авто.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._putListLegkovogoDannieTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._zadanieVoditelTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Задание_водителю.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._zadanieVoditelTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(AutoparkDB dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._zadanieVoditelTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Задание_водителю.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._zadanieVoditelTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._putListLegkovogoDannieTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Данные_Путевой_лист_легкового_авто.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._putListLegkovogoDannieTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._работа_водителя_и_автомобиляTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Работа_водителя_и_автомобиля.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._работа_водителя_и_автомобиляTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._normyTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet._Нормы_расхода_ГСМ_на_авто_тракторы.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._normyTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._заправка_ТСМTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Заправка_ТСМ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._заправка_ТСМTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._движение_ТСМTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Движение_ТСМ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._движение_ТСМTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tablePutevieGruzovieTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Путевой_лист_Грузового_авто.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tablePutevieGruzovieTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._putevoiListLegkTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PutevoiListLegkTable.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._putevoiListLegkTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._otdelTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Отделы.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._otdelTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._podvijnoiTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Подвижной_состав.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._podvijnoiTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._lichniiTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Личный_состав.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._lichniiTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(AutoparkDB dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._podvijnoiTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._podvijnoiTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._normyTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._normyTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tablePutevieGruzovieTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tablePutevieGruzovieTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._putevoiListLegkTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._putevoiListLegkTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._putListLegkovogoDannieTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._putListLegkovogoDannieTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._lichniiTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._lichniiTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._zadanieVoditelTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._zadanieVoditelTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._движение_ТСМTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._движение_ТСМTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._заправка_ТСМTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._заправка_ТСМTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._работа_водителя_и_автомобиляTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._работа_водителя_и_автомобиляTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._otdelTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._otdelTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._podvijnoiTableAdapter != null)) {
                    revertConnections.Add(this._podvijnoiTableAdapter, this._podvijnoiTableAdapter.Connection);
                    this._podvijnoiTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._podvijnoiTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._podvijnoiTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._podvijnoiTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._podvijnoiTableAdapter.Adapter);
                    }
                }
                if ((this._normyTableAdapter != null)) {
                    revertConnections.Add(this._normyTableAdapter, this._normyTableAdapter.Connection);
                    this._normyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._normyTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._normyTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._normyTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._normyTableAdapter.Adapter);
                    }
                }
                if ((this._tablePutevieGruzovieTableAdapter != null)) {
                    revertConnections.Add(this._tablePutevieGruzovieTableAdapter, this._tablePutevieGruzovieTableAdapter.Connection);
                    this._tablePutevieGruzovieTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tablePutevieGruzovieTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tablePutevieGruzovieTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tablePutevieGruzovieTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tablePutevieGruzovieTableAdapter.Adapter);
                    }
                }
                if ((this._putevoiListLegkTableAdapter != null)) {
                    revertConnections.Add(this._putevoiListLegkTableAdapter, this._putevoiListLegkTableAdapter.Connection);
                    this._putevoiListLegkTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._putevoiListLegkTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._putevoiListLegkTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._putevoiListLegkTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._putevoiListLegkTableAdapter.Adapter);
                    }
                }
                if ((this._putListLegkovogoDannieTableAdapter != null)) {
                    revertConnections.Add(this._putListLegkovogoDannieTableAdapter, this._putListLegkovogoDannieTableAdapter.Connection);
                    this._putListLegkovogoDannieTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._putListLegkovogoDannieTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._putListLegkovogoDannieTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._putListLegkovogoDannieTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._putListLegkovogoDannieTableAdapter.Adapter);
                    }
                }
                if ((this._lichniiTableAdapter != null)) {
                    revertConnections.Add(this._lichniiTableAdapter, this._lichniiTableAdapter.Connection);
                    this._lichniiTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._lichniiTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._lichniiTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._lichniiTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._lichniiTableAdapter.Adapter);
                    }
                }
                if ((this._zadanieVoditelTableAdapter != null)) {
                    revertConnections.Add(this._zadanieVoditelTableAdapter, this._zadanieVoditelTableAdapter.Connection);
                    this._zadanieVoditelTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._zadanieVoditelTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._zadanieVoditelTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._zadanieVoditelTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._zadanieVoditelTableAdapter.Adapter);
                    }
                }
                if ((this._движение_ТСМTableAdapter != null)) {
                    revertConnections.Add(this._движение_ТСМTableAdapter, this._движение_ТСМTableAdapter.Connection);
                    this._движение_ТСМTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._движение_ТСМTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._движение_ТСМTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._движение_ТСМTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._движение_ТСМTableAdapter.Adapter);
                    }
                }
                if ((this._заправка_ТСМTableAdapter != null)) {
                    revertConnections.Add(this._заправка_ТСМTableAdapter, this._заправка_ТСМTableAdapter.Connection);
                    this._заправка_ТСМTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._заправка_ТСМTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._заправка_ТСМTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._заправка_ТСМTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._заправка_ТСМTableAdapter.Adapter);
                    }
                }
                if ((this._работа_водителя_и_автомобиляTableAdapter != null)) {
                    revertConnections.Add(this._работа_водителя_и_автомобиляTableAdapter, this._работа_водителя_и_автомобиляTableAdapter.Connection);
                    this._работа_водителя_и_автомобиляTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._работа_водителя_и_автомобиляTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._работа_водителя_и_автомобиляTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._работа_водителя_и_автомобиляTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._работа_водителя_и_автомобиляTableAdapter.Adapter);
                    }
                }
                if ((this._otdelTableAdapter != null)) {
                    revertConnections.Add(this._otdelTableAdapter, this._otdelTableAdapter.Connection);
                    this._otdelTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._otdelTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._otdelTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._otdelTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._otdelTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._podvijnoiTableAdapter != null)) {
                    this._podvijnoiTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._podvijnoiTableAdapter]));
                    this._podvijnoiTableAdapter.Transaction = null;
                }
                if ((this._normyTableAdapter != null)) {
                    this._normyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._normyTableAdapter]));
                    this._normyTableAdapter.Transaction = null;
                }
                if ((this._tablePutevieGruzovieTableAdapter != null)) {
                    this._tablePutevieGruzovieTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tablePutevieGruzovieTableAdapter]));
                    this._tablePutevieGruzovieTableAdapter.Transaction = null;
                }
                if ((this._putevoiListLegkTableAdapter != null)) {
                    this._putevoiListLegkTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._putevoiListLegkTableAdapter]));
                    this._putevoiListLegkTableAdapter.Transaction = null;
                }
                if ((this._putListLegkovogoDannieTableAdapter != null)) {
                    this._putListLegkovogoDannieTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._putListLegkovogoDannieTableAdapter]));
                    this._putListLegkovogoDannieTableAdapter.Transaction = null;
                }
                if ((this._lichniiTableAdapter != null)) {
                    this._lichniiTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._lichniiTableAdapter]));
                    this._lichniiTableAdapter.Transaction = null;
                }
                if ((this._zadanieVoditelTableAdapter != null)) {
                    this._zadanieVoditelTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._zadanieVoditelTableAdapter]));
                    this._zadanieVoditelTableAdapter.Transaction = null;
                }
                if ((this._движение_ТСМTableAdapter != null)) {
                    this._движение_ТСМTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._движение_ТСМTableAdapter]));
                    this._движение_ТСМTableAdapter.Transaction = null;
                }
                if ((this._заправка_ТСМTableAdapter != null)) {
                    this._заправка_ТСМTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._заправка_ТСМTableAdapter]));
                    this._заправка_ТСМTableAdapter.Transaction = null;
                }
                if ((this._работа_водителя_и_автомобиляTableAdapter != null)) {
                    this._работа_водителя_и_автомобиляTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._работа_водителя_и_автомобиляTableAdapter]));
                    this._работа_водителя_и_автомобиляTableAdapter.Transaction = null;
                }
                if ((this._otdelTableAdapter != null)) {
                    this._otdelTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._otdelTableAdapter]));
                    this._otdelTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591