//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.1
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace AUTOPARK {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Путевые_листыDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Путевые_листыDataSet : global::System.Data.DataSet {
        
        private Водители_автоDataTable tableВодители_авто;
        
        private Данные_Путевой_лист_легкового_автоDataTable tableДанные_Путевой_лист_легкового_авто;
        
        private Движение_ТСМDataTable tableДвижение_ТСМ;
        
        private Задание_водителюDataTable tableЗадание_водителю;
        
        private Заправка_ТСМDataTable tableЗаправка_ТСМ;
        
        private Личный_составDataTable tableЛичный_состав;
        
        private _Нормы_расхода_ГСМ_на_авто_тракторыDataTable _tableНормы_расхода_ГСМ_на_авто_тракторы;
        
        private Подвижной_составDataTable tableПодвижной_состав;
        
        private Путевой_лист_Грузового_автоDataTable tableПутевой_лист_Грузового_авто;
        
        private Путевой_лист_легкового_автомобиляDataTable tableПутевой_лист_легкового_автомобиля;
        
        private Работа_водителя_и_автомобиляDataTable tableРабота_водителя_и_автомобиля;
        
        private View_Данные_путевой_лист_легкового_автоDataTable tableView_Данные_путевой_лист_легкового_авто;
        
        private View_Работа_водителя_и_автомобиляDataTable tableView_Работа_водителя_и_автомобиля;
        
        private global::System.Data.DataRelation relationFK_Водители_авто_id_авто;
        
        private global::System.Data.DataRelation relationFK_Водители_авто_id_водитель;
        
        private global::System.Data.DataRelation relationFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_легкового_автомобиля;
        
        private global::System.Data.DataRelation relationFK_Движение_ТСМ_Путевой_лист_Грузового_авто;
        
        private global::System.Data.DataRelation relationFK_Задание_водителю_Путевой_лист_Грузового_авто;
        
        private global::System.Data.DataRelation relationFK_Путевой_лист_Грузового_авто_личный_состав;
        
        private global::System.Data.DataRelation relationFK_Путевой_лист_Грузового_авто_Подвижной_состав;
        
        private global::System.Data.DataRelation relationFK_Путевой_лист_легкового_автомобиля_личный_состав;
        
        private global::System.Data.DataRelation relationFK_Путевой_лист_легкового_автомобиля_Подвижной_состав;
        
        private global::System.Data.DataRelation relationFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_грузового_автомобиля;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Путевые_листыDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected Путевые_листыDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Водители авто"] != null)) {
                    base.Tables.Add(new Водители_автоDataTable(ds.Tables["Водители авто"]));
                }
                if ((ds.Tables["Данные Путевой лист легкового авто"] != null)) {
                    base.Tables.Add(new Данные_Путевой_лист_легкового_автоDataTable(ds.Tables["Данные Путевой лист легкового авто"]));
                }
                if ((ds.Tables["Движение ТСМ"] != null)) {
                    base.Tables.Add(new Движение_ТСМDataTable(ds.Tables["Движение ТСМ"]));
                }
                if ((ds.Tables["Задание водителю"] != null)) {
                    base.Tables.Add(new Задание_водителюDataTable(ds.Tables["Задание водителю"]));
                }
                if ((ds.Tables["Заправка ТСМ"] != null)) {
                    base.Tables.Add(new Заправка_ТСМDataTable(ds.Tables["Заправка ТСМ"]));
                }
                if ((ds.Tables["Личный состав"] != null)) {
                    base.Tables.Add(new Личный_составDataTable(ds.Tables["Личный состав"]));
                }
                if ((ds.Tables["Нормы расхода ГСМ на авто,тракторы"] != null)) {
                    base.Tables.Add(new _Нормы_расхода_ГСМ_на_авто_тракторыDataTable(ds.Tables["Нормы расхода ГСМ на авто,тракторы"]));
                }
                if ((ds.Tables["Подвижной состав"] != null)) {
                    base.Tables.Add(new Подвижной_составDataTable(ds.Tables["Подвижной состав"]));
                }
                if ((ds.Tables["Путевой лист Грузового авто"] != null)) {
                    base.Tables.Add(new Путевой_лист_Грузового_автоDataTable(ds.Tables["Путевой лист Грузового авто"]));
                }
                if ((ds.Tables["Путевой лист легкового автомобиля"] != null)) {
                    base.Tables.Add(new Путевой_лист_легкового_автомобиляDataTable(ds.Tables["Путевой лист легкового автомобиля"]));
                }
                if ((ds.Tables["Работа водителя и автомобиля"] != null)) {
                    base.Tables.Add(new Работа_водителя_и_автомобиляDataTable(ds.Tables["Работа водителя и автомобиля"]));
                }
                if ((ds.Tables["View_Данные путевой лист легкового авто"] != null)) {
                    base.Tables.Add(new View_Данные_путевой_лист_легкового_автоDataTable(ds.Tables["View_Данные путевой лист легкового авто"]));
                }
                if ((ds.Tables["View_Работа водителя и автомобиля"] != null)) {
                    base.Tables.Add(new View_Работа_водителя_и_автомобиляDataTable(ds.Tables["View_Работа водителя и автомобиля"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Водители_автоDataTable Водители_авто {
            get {
                return this.tableВодители_авто;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Данные_Путевой_лист_легкового_автоDataTable Данные_Путевой_лист_легкового_авто {
            get {
                return this.tableДанные_Путевой_лист_легкового_авто;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Движение_ТСМDataTable Движение_ТСМ {
            get {
                return this.tableДвижение_ТСМ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Задание_водителюDataTable Задание_водителю {
            get {
                return this.tableЗадание_водителю;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Заправка_ТСМDataTable Заправка_ТСМ {
            get {
                return this.tableЗаправка_ТСМ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Личный_составDataTable Личный_состав {
            get {
                return this.tableЛичный_состав;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _Нормы_расхода_ГСМ_на_авто_тракторыDataTable _Нормы_расхода_ГСМ_на_авто_тракторы {
            get {
                return this._tableНормы_расхода_ГСМ_на_авто_тракторы;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Подвижной_составDataTable Подвижной_состав {
            get {
                return this.tableПодвижной_состав;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Путевой_лист_Грузового_автоDataTable Путевой_лист_Грузового_авто {
            get {
                return this.tableПутевой_лист_Грузового_авто;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Путевой_лист_легкового_автомобиляDataTable Путевой_лист_легкового_автомобиля {
            get {
                return this.tableПутевой_лист_легкового_автомобиля;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Работа_водителя_и_автомобиляDataTable Работа_водителя_и_автомобиля {
            get {
                return this.tableРабота_водителя_и_автомобиля;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_Данные_путевой_лист_легкового_автоDataTable View_Данные_путевой_лист_легкового_авто {
            get {
                return this.tableView_Данные_путевой_лист_легкового_авто;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_Работа_водителя_и_автомобиляDataTable View_Работа_водителя_и_автомобиля {
            get {
                return this.tableView_Работа_водителя_и_автомобиля;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            Путевые_листыDataSet cln = ((Путевые_листыDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Водители авто"] != null)) {
                    base.Tables.Add(new Водители_автоDataTable(ds.Tables["Водители авто"]));
                }
                if ((ds.Tables["Данные Путевой лист легкового авто"] != null)) {
                    base.Tables.Add(new Данные_Путевой_лист_легкового_автоDataTable(ds.Tables["Данные Путевой лист легкового авто"]));
                }
                if ((ds.Tables["Движение ТСМ"] != null)) {
                    base.Tables.Add(new Движение_ТСМDataTable(ds.Tables["Движение ТСМ"]));
                }
                if ((ds.Tables["Задание водителю"] != null)) {
                    base.Tables.Add(new Задание_водителюDataTable(ds.Tables["Задание водителю"]));
                }
                if ((ds.Tables["Заправка ТСМ"] != null)) {
                    base.Tables.Add(new Заправка_ТСМDataTable(ds.Tables["Заправка ТСМ"]));
                }
                if ((ds.Tables["Личный состав"] != null)) {
                    base.Tables.Add(new Личный_составDataTable(ds.Tables["Личный состав"]));
                }
                if ((ds.Tables["Нормы расхода ГСМ на авто,тракторы"] != null)) {
                    base.Tables.Add(new _Нормы_расхода_ГСМ_на_авто_тракторыDataTable(ds.Tables["Нормы расхода ГСМ на авто,тракторы"]));
                }
                if ((ds.Tables["Подвижной состав"] != null)) {
                    base.Tables.Add(new Подвижной_составDataTable(ds.Tables["Подвижной состав"]));
                }
                if ((ds.Tables["Путевой лист Грузового авто"] != null)) {
                    base.Tables.Add(new Путевой_лист_Грузового_автоDataTable(ds.Tables["Путевой лист Грузового авто"]));
                }
                if ((ds.Tables["Путевой лист легкового автомобиля"] != null)) {
                    base.Tables.Add(new Путевой_лист_легкового_автомобиляDataTable(ds.Tables["Путевой лист легкового автомобиля"]));
                }
                if ((ds.Tables["Работа водителя и автомобиля"] != null)) {
                    base.Tables.Add(new Работа_водителя_и_автомобиляDataTable(ds.Tables["Работа водителя и автомобиля"]));
                }
                if ((ds.Tables["View_Данные путевой лист легкового авто"] != null)) {
                    base.Tables.Add(new View_Данные_путевой_лист_легкового_автоDataTable(ds.Tables["View_Данные путевой лист легкового авто"]));
                }
                if ((ds.Tables["View_Работа водителя и автомобиля"] != null)) {
                    base.Tables.Add(new View_Работа_водителя_и_автомобиляDataTable(ds.Tables["View_Работа водителя и автомобиля"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableВодители_авто = ((Водители_автоDataTable)(base.Tables["Водители авто"]));
            if ((initTable == true)) {
                if ((this.tableВодители_авто != null)) {
                    this.tableВодители_авто.InitVars();
                }
            }
            this.tableДанные_Путевой_лист_легкового_авто = ((Данные_Путевой_лист_легкового_автоDataTable)(base.Tables["Данные Путевой лист легкового авто"]));
            if ((initTable == true)) {
                if ((this.tableДанные_Путевой_лист_легкового_авто != null)) {
                    this.tableДанные_Путевой_лист_легкового_авто.InitVars();
                }
            }
            this.tableДвижение_ТСМ = ((Движение_ТСМDataTable)(base.Tables["Движение ТСМ"]));
            if ((initTable == true)) {
                if ((this.tableДвижение_ТСМ != null)) {
                    this.tableДвижение_ТСМ.InitVars();
                }
            }
            this.tableЗадание_водителю = ((Задание_водителюDataTable)(base.Tables["Задание водителю"]));
            if ((initTable == true)) {
                if ((this.tableЗадание_водителю != null)) {
                    this.tableЗадание_водителю.InitVars();
                }
            }
            this.tableЗаправка_ТСМ = ((Заправка_ТСМDataTable)(base.Tables["Заправка ТСМ"]));
            if ((initTable == true)) {
                if ((this.tableЗаправка_ТСМ != null)) {
                    this.tableЗаправка_ТСМ.InitVars();
                }
            }
            this.tableЛичный_состав = ((Личный_составDataTable)(base.Tables["Личный состав"]));
            if ((initTable == true)) {
                if ((this.tableЛичный_состав != null)) {
                    this.tableЛичный_состав.InitVars();
                }
            }
            this._tableНормы_расхода_ГСМ_на_авто_тракторы = ((_Нормы_расхода_ГСМ_на_авто_тракторыDataTable)(base.Tables["Нормы расхода ГСМ на авто,тракторы"]));
            if ((initTable == true)) {
                if ((this._tableНормы_расхода_ГСМ_на_авто_тракторы != null)) {
                    this._tableНормы_расхода_ГСМ_на_авто_тракторы.InitVars();
                }
            }
            this.tableПодвижной_состав = ((Подвижной_составDataTable)(base.Tables["Подвижной состав"]));
            if ((initTable == true)) {
                if ((this.tableПодвижной_состав != null)) {
                    this.tableПодвижной_состав.InitVars();
                }
            }
            this.tableПутевой_лист_Грузового_авто = ((Путевой_лист_Грузового_автоDataTable)(base.Tables["Путевой лист Грузового авто"]));
            if ((initTable == true)) {
                if ((this.tableПутевой_лист_Грузового_авто != null)) {
                    this.tableПутевой_лист_Грузового_авто.InitVars();
                }
            }
            this.tableПутевой_лист_легкового_автомобиля = ((Путевой_лист_легкового_автомобиляDataTable)(base.Tables["Путевой лист легкового автомобиля"]));
            if ((initTable == true)) {
                if ((this.tableПутевой_лист_легкового_автомобиля != null)) {
                    this.tableПутевой_лист_легкового_автомобиля.InitVars();
                }
            }
            this.tableРабота_водителя_и_автомобиля = ((Работа_водителя_и_автомобиляDataTable)(base.Tables["Работа водителя и автомобиля"]));
            if ((initTable == true)) {
                if ((this.tableРабота_водителя_и_автомобиля != null)) {
                    this.tableРабота_водителя_и_автомобиля.InitVars();
                }
            }
            this.tableView_Данные_путевой_лист_легкового_авто = ((View_Данные_путевой_лист_легкового_автоDataTable)(base.Tables["View_Данные путевой лист легкового авто"]));
            if ((initTable == true)) {
                if ((this.tableView_Данные_путевой_лист_легкового_авто != null)) {
                    this.tableView_Данные_путевой_лист_легкового_авто.InitVars();
                }
            }
            this.tableView_Работа_водителя_и_автомобиля = ((View_Работа_водителя_и_автомобиляDataTable)(base.Tables["View_Работа водителя и автомобиля"]));
            if ((initTable == true)) {
                if ((this.tableView_Работа_водителя_и_автомобиля != null)) {
                    this.tableView_Работа_водителя_и_автомобиля.InitVars();
                }
            }
            this.relationFK_Водители_авто_id_авто = this.Relations["FK_Водители авто_id_авто"];
            this.relationFK_Водители_авто_id_водитель = this.Relations["FK_Водители авто_id_водитель"];
            this.relationFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_легкового_автомобиля = this.Relations["FK_Данные Путевой лист легкового авто_Путевой лист легкового автомобиля"];
            this.relationFK_Движение_ТСМ_Путевой_лист_Грузового_авто = this.Relations["FK_Движение ТСМ_Путевой лист Грузового авто"];
            this.relationFK_Задание_водителю_Путевой_лист_Грузового_авто = this.Relations["FK_Задание водителю_Путевой лист Грузового авто"];
            this.relationFK_Путевой_лист_Грузового_авто_личный_состав = this.Relations["FK_Путевой лист Грузового авто_личный состав"];
            this.relationFK_Путевой_лист_Грузового_авто_Подвижной_состав = this.Relations["FK_Путевой лист Грузового авто_Подвижной состав"];
            this.relationFK_Путевой_лист_легкового_автомобиля_личный_состав = this.Relations["FK_Путевой лист легкового автомобиля_личный состав"];
            this.relationFK_Путевой_лист_легкового_автомобиля_Подвижной_состав = this.Relations["FK_Путевой лист легкового автомобиля_Подвижной состав"];
            this.relationFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_грузового_автомобиля = this.Relations["FK_Данные Путевой лист легкового авто_Путевой лист грузового автомобиля"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "Путевые_листыDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Путевые_листыDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableВодители_авто = new Водители_автоDataTable();
            base.Tables.Add(this.tableВодители_авто);
            this.tableДанные_Путевой_лист_легкового_авто = new Данные_Путевой_лист_легкового_автоDataTable();
            base.Tables.Add(this.tableДанные_Путевой_лист_легкового_авто);
            this.tableДвижение_ТСМ = new Движение_ТСМDataTable();
            base.Tables.Add(this.tableДвижение_ТСМ);
            this.tableЗадание_водителю = new Задание_водителюDataTable();
            base.Tables.Add(this.tableЗадание_водителю);
            this.tableЗаправка_ТСМ = new Заправка_ТСМDataTable();
            base.Tables.Add(this.tableЗаправка_ТСМ);
            this.tableЛичный_состав = new Личный_составDataTable();
            base.Tables.Add(this.tableЛичный_состав);
            this._tableНормы_расхода_ГСМ_на_авто_тракторы = new _Нормы_расхода_ГСМ_на_авто_тракторыDataTable();
            base.Tables.Add(this._tableНормы_расхода_ГСМ_на_авто_тракторы);
            this.tableПодвижной_состав = new Подвижной_составDataTable();
            base.Tables.Add(this.tableПодвижной_состав);
            this.tableПутевой_лист_Грузового_авто = new Путевой_лист_Грузового_автоDataTable();
            base.Tables.Add(this.tableПутевой_лист_Грузового_авто);
            this.tableПутевой_лист_легкового_автомобиля = new Путевой_лист_легкового_автомобиляDataTable();
            base.Tables.Add(this.tableПутевой_лист_легкового_автомобиля);
            this.tableРабота_водителя_и_автомобиля = new Работа_водителя_и_автомобиляDataTable();
            base.Tables.Add(this.tableРабота_водителя_и_автомобиля);
            this.tableView_Данные_путевой_лист_легкового_авто = new View_Данные_путевой_лист_легкового_автоDataTable();
            base.Tables.Add(this.tableView_Данные_путевой_лист_легкового_авто);
            this.tableView_Работа_водителя_и_автомобиля = new View_Работа_водителя_и_автомобиляDataTable();
            base.Tables.Add(this.tableView_Работа_водителя_и_автомобиля);
            this.relationFK_Водители_авто_id_авто = new global::System.Data.DataRelation("FK_Водители авто_id_авто", new global::System.Data.DataColumn[] {
                        this.tableПодвижной_состав.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableВодители_авто.ID_АвтоColumn}, false);
            this.Relations.Add(this.relationFK_Водители_авто_id_авто);
            this.relationFK_Водители_авто_id_водитель = new global::System.Data.DataRelation("FK_Водители авто_id_водитель", new global::System.Data.DataColumn[] {
                        this.tableЛичный_состав.табельный__номерColumn}, new global::System.Data.DataColumn[] {
                        this.tableВодители_авто.ID_ВодительColumn}, false);
            this.Relations.Add(this.relationFK_Водители_авто_id_водитель);
            this.relationFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_легкового_автомобиля = new global::System.Data.DataRelation("FK_Данные Путевой лист легкового авто_Путевой лист легкового автомобиля", new global::System.Data.DataColumn[] {
                        this.tableПутевой_лист_легкового_автомобиля.ID_Путевого_листаColumn}, new global::System.Data.DataColumn[] {
                        this.tableДанные_Путевой_лист_легкового_авто.ID_Путевого_листаColumn}, false);
            this.Relations.Add(this.relationFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_легкового_автомобиля);
            this.relationFK_Движение_ТСМ_Путевой_лист_Грузового_авто = new global::System.Data.DataRelation("FK_Движение ТСМ_Путевой лист Грузового авто", new global::System.Data.DataColumn[] {
                        this.tableПутевой_лист_Грузового_авто.ID_Путевого_листаColumn}, new global::System.Data.DataColumn[] {
                        this.tableДвижение_ТСМ.ID_Путевого_листаColumn}, false);
            this.Relations.Add(this.relationFK_Движение_ТСМ_Путевой_лист_Грузового_авто);
            this.relationFK_Задание_водителю_Путевой_лист_Грузового_авто = new global::System.Data.DataRelation("FK_Задание водителю_Путевой лист Грузового авто", new global::System.Data.DataColumn[] {
                        this.tableПутевой_лист_Грузового_авто.ID_Путевого_листаColumn}, new global::System.Data.DataColumn[] {
                        this.tableЗадание_водителю.ID_Путевого_листаColumn}, false);
            this.Relations.Add(this.relationFK_Задание_водителю_Путевой_лист_Грузового_авто);
            this.relationFK_Путевой_лист_Грузового_авто_личный_состав = new global::System.Data.DataRelation("FK_Путевой лист Грузового авто_личный состав", new global::System.Data.DataColumn[] {
                        this.tableЛичный_состав.табельный__номерColumn}, new global::System.Data.DataColumn[] {
                        this.tableПутевой_лист_Грузового_авто.ID_ВодителяColumn}, false);
            this.Relations.Add(this.relationFK_Путевой_лист_Грузового_авто_личный_состав);
            this.relationFK_Путевой_лист_Грузового_авто_Подвижной_состав = new global::System.Data.DataRelation("FK_Путевой лист Грузового авто_Подвижной состав", new global::System.Data.DataColumn[] {
                        this.tableПодвижной_состав.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableПутевой_лист_Грузового_авто.ID_АвтомобиляColumn}, false);
            this.Relations.Add(this.relationFK_Путевой_лист_Грузового_авто_Подвижной_состав);
            this.relationFK_Путевой_лист_легкового_автомобиля_личный_состав = new global::System.Data.DataRelation("FK_Путевой лист легкового автомобиля_личный состав", new global::System.Data.DataColumn[] {
                        this.tableЛичный_состав.табельный__номерColumn}, new global::System.Data.DataColumn[] {
                        this.tableПутевой_лист_легкового_автомобиля.ID_ВодительColumn}, false);
            this.Relations.Add(this.relationFK_Путевой_лист_легкового_автомобиля_личный_состав);
            this.relationFK_Путевой_лист_легкового_автомобиля_Подвижной_состав = new global::System.Data.DataRelation("FK_Путевой лист легкового автомобиля_Подвижной состав", new global::System.Data.DataColumn[] {
                        this.tableПодвижной_состав.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableПутевой_лист_легкового_автомобиля.ID_АвтомобильColumn}, false);
            this.Relations.Add(this.relationFK_Путевой_лист_легкового_автомобиля_Подвижной_состав);
            this.relationFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_грузового_автомобиля = new global::System.Data.DataRelation("FK_Данные Путевой лист легкового авто_Путевой лист грузового автомобиля", new global::System.Data.DataColumn[] {
                        this.tableПутевой_лист_Грузового_авто.ID_Путевого_листаColumn}, new global::System.Data.DataColumn[] {
                        this.tableРабота_водителя_и_автомобиля.ID_Путевого_листаColumn}, false);
            this.Relations.Add(this.relationFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_грузового_автомобиля);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeВодители_авто() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeДанные_Путевой_лист_легкового_авто() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeДвижение_ТСМ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeЗадание_водителю() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeЗаправка_ТСМ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeЛичный_состав() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerialize_Нормы_расхода_ГСМ_на_авто_тракторы() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeПодвижной_состав() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeПутевой_лист_Грузового_авто() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeПутевой_лист_легкового_автомобиля() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeРабота_водителя_и_автомобиля() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeView_Данные_путевой_лист_легкового_авто() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeView_Работа_водителя_и_автомобиля() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Путевые_листыDataSet ds = new Путевые_листыDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Водители_автоRowChangeEventHandler(object sender, Водители_автоRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Данные_Путевой_лист_легкового_автоRowChangeEventHandler(object sender, Данные_Путевой_лист_легкового_автоRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Движение_ТСМRowChangeEventHandler(object sender, Движение_ТСМRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Задание_водителюRowChangeEventHandler(object sender, Задание_водителюRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Заправка_ТСМRowChangeEventHandler(object sender, Заправка_ТСМRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Личный_составRowChangeEventHandler(object sender, Личный_составRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void _Нормы_расхода_ГСМ_на_авто_тракторыRowChangeEventHandler(object sender, _Нормы_расхода_ГСМ_на_авто_тракторыRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Подвижной_составRowChangeEventHandler(object sender, Подвижной_составRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Путевой_лист_Грузового_автоRowChangeEventHandler(object sender, Путевой_лист_Грузового_автоRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Путевой_лист_легкового_автомобиляRowChangeEventHandler(object sender, Путевой_лист_легкового_автомобиляRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Работа_водителя_и_автомобиляRowChangeEventHandler(object sender, Работа_водителя_и_автомобиляRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void View_Данные_путевой_лист_легкового_автоRowChangeEventHandler(object sender, View_Данные_путевой_лист_легкового_автоRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void View_Работа_водителя_и_автомобиляRowChangeEventHandler(object sender, View_Работа_водителя_и_автомобиляRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Водители_автоDataTable : global::System.Data.TypedTableBase<Водители_автоRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnID_Водитель;
            
            private global::System.Data.DataColumn columnID_Авто;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Водители_автоDataTable() {
                this.TableName = "Водители авто";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Водители_автоDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Водители_автоDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_ВодительColumn {
                get {
                    return this.columnID_Водитель;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_АвтоColumn {
                get {
                    return this.columnID_Авто;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Водители_автоRow this[int index] {
                get {
                    return ((Водители_автоRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Водители_автоRowChangeEventHandler Водители_автоRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Водители_автоRowChangeEventHandler Водители_автоRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Водители_автоRowChangeEventHandler Водители_автоRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Водители_автоRowChangeEventHandler Водители_автоRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddВодители_автоRow(Водители_автоRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Водители_автоRow AddВодители_автоRow(Личный_составRow parentЛичный_составRowByFK_Водители_авто_id_водитель, Подвижной_составRow parentПодвижной_составRowByFK_Водители_авто_id_авто) {
                Водители_автоRow rowВодители_автоRow = ((Водители_автоRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null};
                if ((parentЛичный_составRowByFK_Водители_авто_id_водитель != null)) {
                    columnValuesArray[1] = parentЛичный_составRowByFK_Водители_авто_id_водитель[0];
                }
                if ((parentПодвижной_составRowByFK_Водители_авто_id_авто != null)) {
                    columnValuesArray[2] = parentПодвижной_составRowByFK_Водители_авто_id_авто[0];
                }
                rowВодители_автоRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowВодители_автоRow);
                return rowВодители_автоRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Водители_автоRow FindByID(int ID) {
                return ((Водители_автоRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Водители_автоDataTable cln = ((Водители_автоDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Водители_автоDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnID_Водитель = base.Columns["ID_Водитель"];
                this.columnID_Авто = base.Columns["ID_Авто"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnID_Водитель = new global::System.Data.DataColumn("ID_Водитель", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Водитель);
                this.columnID_Авто = new global::System.Data.DataColumn("ID_Авто", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Авто);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnID_Водитель.AllowDBNull = false;
                this.columnID_Авто.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Водители_автоRow NewВодители_автоRow() {
                return ((Водители_автоRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Водители_автоRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Водители_автоRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Водители_автоRowChanged != null)) {
                    this.Водители_автоRowChanged(this, new Водители_автоRowChangeEvent(((Водители_автоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Водители_автоRowChanging != null)) {
                    this.Водители_автоRowChanging(this, new Водители_автоRowChangeEvent(((Водители_автоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Водители_автоRowDeleted != null)) {
                    this.Водители_автоRowDeleted(this, new Водители_автоRowChangeEvent(((Водители_автоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Водители_автоRowDeleting != null)) {
                    this.Водители_автоRowDeleting(this, new Водители_автоRowChangeEvent(((Водители_автоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveВодители_автоRow(Водители_автоRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Путевые_листыDataSet ds = new Путевые_листыDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Водители_автоDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Данные_Путевой_лист_легкового_автоDataTable : global::System.Data.TypedTableBase<Данные_Путевой_лист_легкового_автоRow> {
            
            private global::System.Data.DataColumn columnid_Данных;
            
            private global::System.Data.DataColumn columnID_Путевого_листа;
            
            private global::System.Data.DataColumn columnЧисло;
            
            private global::System.Data.DataColumn columnВремя_выезда;
            
            private global::System.Data.DataColumn columnВремя_возвращения;
            
            private global::System.Data.DataColumn columnВремя_в_наряде;
            
            private global::System.Data.DataColumn columnПоказания_спидометра_при_выезде;
            
            private global::System.Data.DataColumn columnПоказания_спидометра_при_возвращении;
            
            private global::System.Data.DataColumn columnПробег_км;
            
            private global::System.Data.DataColumn columnОстаток_топлива_при_выезде;
            
            private global::System.Data.DataColumn columnОстаток_топлива_при_возвращении;
            
            private global::System.Data.DataColumn columnЗаправлено_топлива_л;
            
            private global::System.Data.DataColumn _columnДата_и___чека_АЗС;
            
            private global::System.Data.DataColumn columnРасход_топлива_по_норме;
            
            private global::System.Data.DataColumn columnРасход_топлива_фактически;
            
            private global::System.Data.DataColumn columnРасход_топлива_экономия_перерасход;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Данные_Путевой_лист_легкового_автоDataTable() {
                this.TableName = "Данные Путевой лист легкового авто";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Данные_Путевой_лист_легкового_автоDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Данные_Путевой_лист_легкового_автоDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn id_ДанныхColumn {
                get {
                    return this.columnid_Данных;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_Путевого_листаColumn {
                get {
                    return this.columnID_Путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ЧислоColumn {
                get {
                    return this.columnЧисло;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Время_выездаColumn {
                get {
                    return this.columnВремя_выезда;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Время_возвращенияColumn {
                get {
                    return this.columnВремя_возвращения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Время_в_нарядеColumn {
                get {
                    return this.columnВремя_в_наряде;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Показания_спидометра_при_выездеColumn {
                get {
                    return this.columnПоказания_спидометра_при_выезде;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Показания_спидометра_при_возвращенииColumn {
                get {
                    return this.columnПоказания_спидометра_при_возвращении;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Пробег_кмColumn {
                get {
                    return this.columnПробег_км;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Остаток_топлива_при_выездеColumn {
                get {
                    return this.columnОстаток_топлива_при_выезде;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Остаток_топлива_при_возвращенииColumn {
                get {
                    return this.columnОстаток_топлива_при_возвращении;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Заправлено_топлива_лColumn {
                get {
                    return this.columnЗаправлено_топлива_л;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _Дата_и___чека_АЗСColumn {
                get {
                    return this._columnДата_и___чека_АЗС;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Расход_топлива_по_нормеColumn {
                get {
                    return this.columnРасход_топлива_по_норме;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Расход_топлива_фактическиColumn {
                get {
                    return this.columnРасход_топлива_фактически;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Расход_топлива_экономия_перерасходColumn {
                get {
                    return this.columnРасход_топлива_экономия_перерасход;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Данные_Путевой_лист_легкового_автоRow this[int index] {
                get {
                    return ((Данные_Путевой_лист_легкового_автоRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Данные_Путевой_лист_легкового_автоRowChangeEventHandler Данные_Путевой_лист_легкового_автоRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Данные_Путевой_лист_легкового_автоRowChangeEventHandler Данные_Путевой_лист_легкового_автоRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Данные_Путевой_лист_легкового_автоRowChangeEventHandler Данные_Путевой_лист_легкового_автоRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Данные_Путевой_лист_легкового_автоRowChangeEventHandler Данные_Путевой_лист_легкового_автоRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddДанные_Путевой_лист_легкового_автоRow(Данные_Путевой_лист_легкового_автоRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Данные_Путевой_лист_легкового_автоRow AddДанные_Путевой_лист_легкового_автоRow(
                        int id_Данных, 
                        Путевой_лист_легкового_автомобиляRow parentПутевой_лист_легкового_автомобиляRowByFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_легкового_автомобиля, 
                        string Число, 
                        System.TimeSpan Время_выезда, 
                        System.TimeSpan Время_возвращения, 
                        System.TimeSpan Время_в_наряде, 
                        int Показания_спидометра_при_выезде, 
                        int Показания_спидометра_при_возвращении, 
                        string Пробег_км, 
                        double Остаток_топлива_при_выезде, 
                        double Остаток_топлива_при_возвращении, 
                        double Заправлено_топлива_л, 
                        string _Дата_и___чека_АЗС, 
                        double Расход_топлива_по_норме, 
                        double Расход_топлива_фактически, 
                        double Расход_топлива_экономия_перерасход) {
                Данные_Путевой_лист_легкового_автоRow rowДанные_Путевой_лист_легкового_автоRow = ((Данные_Путевой_лист_легкового_автоRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id_Данных,
                        null,
                        Число,
                        Время_выезда,
                        Время_возвращения,
                        Время_в_наряде,
                        Показания_спидометра_при_выезде,
                        Показания_спидометра_при_возвращении,
                        Пробег_км,
                        Остаток_топлива_при_выезде,
                        Остаток_топлива_при_возвращении,
                        Заправлено_топлива_л,
                        _Дата_и___чека_АЗС,
                        Расход_топлива_по_норме,
                        Расход_топлива_фактически,
                        Расход_топлива_экономия_перерасход};
                if ((parentПутевой_лист_легкового_автомобиляRowByFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_легкового_автомобиля != null)) {
                    columnValuesArray[1] = parentПутевой_лист_легкового_автомобиляRowByFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_легкового_автомобиля[0];
                }
                rowДанные_Путевой_лист_легкового_автоRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowДанные_Путевой_лист_легкового_автоRow);
                return rowДанные_Путевой_лист_легкового_автоRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Данные_Путевой_лист_легкового_автоRow FindByid_Данных(int id_Данных) {
                return ((Данные_Путевой_лист_легкового_автоRow)(this.Rows.Find(new object[] {
                            id_Данных})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Данные_Путевой_лист_легкового_автоDataTable cln = ((Данные_Путевой_лист_легкового_автоDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Данные_Путевой_лист_легкового_автоDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid_Данных = base.Columns["id_Данных"];
                this.columnID_Путевого_листа = base.Columns["ID_Путевого листа"];
                this.columnЧисло = base.Columns["Число"];
                this.columnВремя_выезда = base.Columns["Время выезда"];
                this.columnВремя_возвращения = base.Columns["Время возвращения"];
                this.columnВремя_в_наряде = base.Columns["Время в наряде"];
                this.columnПоказания_спидометра_при_выезде = base.Columns["Показания спидометра при выезде"];
                this.columnПоказания_спидометра_при_возвращении = base.Columns["Показания спидометра при возвращении"];
                this.columnПробег_км = base.Columns["Пробег км"];
                this.columnОстаток_топлива_при_выезде = base.Columns["Остаток топлива при выезде"];
                this.columnОстаток_топлива_при_возвращении = base.Columns["Остаток топлива при возвращении"];
                this.columnЗаправлено_топлива_л = base.Columns["Заправлено топлива л"];
                this._columnДата_и___чека_АЗС = base.Columns["Дата и № чека АЗС"];
                this.columnРасход_топлива_по_норме = base.Columns["Расход топлива по норме"];
                this.columnРасход_топлива_фактически = base.Columns["Расход топлива фактически"];
                this.columnРасход_топлива_экономия_перерасход = base.Columns["Расход топлива экономия перерасход"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid_Данных = new global::System.Data.DataColumn("id_Данных", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_Данных);
                this.columnID_Путевого_листа = new global::System.Data.DataColumn("ID_Путевого листа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Путевого_листа);
                this.columnЧисло = new global::System.Data.DataColumn("Число", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЧисло);
                this.columnВремя_выезда = new global::System.Data.DataColumn("Время выезда", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВремя_выезда);
                this.columnВремя_возвращения = new global::System.Data.DataColumn("Время возвращения", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВремя_возвращения);
                this.columnВремя_в_наряде = new global::System.Data.DataColumn("Время в наряде", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВремя_в_наряде);
                this.columnПоказания_спидометра_при_выезде = new global::System.Data.DataColumn("Показания спидометра при выезде", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПоказания_спидометра_при_выезде);
                this.columnПоказания_спидометра_при_возвращении = new global::System.Data.DataColumn("Показания спидометра при возвращении", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПоказания_спидометра_при_возвращении);
                this.columnПробег_км = new global::System.Data.DataColumn("Пробег км", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПробег_км);
                this.columnОстаток_топлива_при_выезде = new global::System.Data.DataColumn("Остаток топлива при выезде", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОстаток_топлива_при_выезде);
                this.columnОстаток_топлива_при_возвращении = new global::System.Data.DataColumn("Остаток топлива при возвращении", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОстаток_топлива_при_возвращении);
                this.columnЗаправлено_топлива_л = new global::System.Data.DataColumn("Заправлено топлива л", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗаправлено_топлива_л);
                this._columnДата_и___чека_АЗС = new global::System.Data.DataColumn("Дата и № чека АЗС", typeof(string), null, global::System.Data.MappingType.Element);
                this._columnДата_и___чека_АЗС.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnДата_и___чека_АЗС");
                this._columnДата_и___чека_АЗС.ExtendedProperties.Add("Generator_UserColumnName", "Дата и № чека АЗС");
                base.Columns.Add(this._columnДата_и___чека_АЗС);
                this.columnРасход_топлива_по_норме = new global::System.Data.DataColumn("Расход топлива по норме", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnРасход_топлива_по_норме);
                this.columnРасход_топлива_фактически = new global::System.Data.DataColumn("Расход топлива фактически", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnРасход_топлива_фактически);
                this.columnРасход_топлива_экономия_перерасход = new global::System.Data.DataColumn("Расход топлива экономия перерасход", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnРасход_топлива_экономия_перерасход);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid_Данных}, true));
                this.columnid_Данных.AllowDBNull = false;
                this.columnid_Данных.Unique = true;
                this.columnЧисло.AllowDBNull = false;
                this.columnЧисло.MaxLength = 50;
                this.columnВремя_выезда.AllowDBNull = false;
                this.columnВремя_возвращения.AllowDBNull = false;
                this.columnВремя_в_наряде.AllowDBNull = false;
                this.columnПоказания_спидометра_при_выезде.AllowDBNull = false;
                this.columnПоказания_спидометра_при_возвращении.AllowDBNull = false;
                this.columnПробег_км.AllowDBNull = false;
                this.columnПробег_км.MaxLength = 50;
                this.columnОстаток_топлива_при_выезде.AllowDBNull = false;
                this.columnОстаток_топлива_при_возвращении.AllowDBNull = false;
                this.columnЗаправлено_топлива_л.AllowDBNull = false;
                this._columnДата_и___чека_АЗС.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Данные_Путевой_лист_легкового_автоRow NewДанные_Путевой_лист_легкового_автоRow() {
                return ((Данные_Путевой_лист_легкового_автоRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Данные_Путевой_лист_легкового_автоRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Данные_Путевой_лист_легкового_автоRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Данные_Путевой_лист_легкового_автоRowChanged != null)) {
                    this.Данные_Путевой_лист_легкового_автоRowChanged(this, new Данные_Путевой_лист_легкового_автоRowChangeEvent(((Данные_Путевой_лист_легкового_автоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Данные_Путевой_лист_легкового_автоRowChanging != null)) {
                    this.Данные_Путевой_лист_легкового_автоRowChanging(this, new Данные_Путевой_лист_легкового_автоRowChangeEvent(((Данные_Путевой_лист_легкового_автоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Данные_Путевой_лист_легкового_автоRowDeleted != null)) {
                    this.Данные_Путевой_лист_легкового_автоRowDeleted(this, new Данные_Путевой_лист_легкового_автоRowChangeEvent(((Данные_Путевой_лист_легкового_автоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Данные_Путевой_лист_легкового_автоRowDeleting != null)) {
                    this.Данные_Путевой_лист_легкового_автоRowDeleting(this, new Данные_Путевой_лист_легкового_автоRowChangeEvent(((Данные_Путевой_лист_легкового_автоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveДанные_Путевой_лист_легкового_автоRow(Данные_Путевой_лист_легкового_автоRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Путевые_листыDataSet ds = new Путевые_листыDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Данные_Путевой_лист_легкового_автоDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Движение_ТСМDataTable : global::System.Data.TypedTableBase<Движение_ТСМRow> {
            
            private global::System.Data.DataColumn columnID_Движение_ТМЦ;
            
            private global::System.Data.DataColumn columnID_Путевого_листа;
            
            private global::System.Data.DataColumn columnОстаток_ТСМ_при_выезде;
            
            private global::System.Data.DataColumn columnОстаток_ТСМ_при_возвращении;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Движение_ТСМDataTable() {
                this.TableName = "Движение ТСМ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Движение_ТСМDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Движение_ТСМDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_Движение_ТМЦColumn {
                get {
                    return this.columnID_Движение_ТМЦ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_Путевого_листаColumn {
                get {
                    return this.columnID_Путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Остаток_ТСМ_при_выездеColumn {
                get {
                    return this.columnОстаток_ТСМ_при_выезде;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Остаток_ТСМ_при_возвращенииColumn {
                get {
                    return this.columnОстаток_ТСМ_при_возвращении;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Движение_ТСМRow this[int index] {
                get {
                    return ((Движение_ТСМRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Движение_ТСМRowChangeEventHandler Движение_ТСМRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Движение_ТСМRowChangeEventHandler Движение_ТСМRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Движение_ТСМRowChangeEventHandler Движение_ТСМRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Движение_ТСМRowChangeEventHandler Движение_ТСМRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddДвижение_ТСМRow(Движение_ТСМRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Движение_ТСМRow AddДвижение_ТСМRow(int ID_Движение_ТМЦ, Путевой_лист_Грузового_автоRow parentПутевой_лист_Грузового_автоRowByFK_Движение_ТСМ_Путевой_лист_Грузового_авто, string Остаток_ТСМ_при_выезде, string Остаток_ТСМ_при_возвращении) {
                Движение_ТСМRow rowДвижение_ТСМRow = ((Движение_ТСМRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID_Движение_ТМЦ,
                        null,
                        Остаток_ТСМ_при_выезде,
                        Остаток_ТСМ_при_возвращении};
                if ((parentПутевой_лист_Грузового_автоRowByFK_Движение_ТСМ_Путевой_лист_Грузового_авто != null)) {
                    columnValuesArray[1] = parentПутевой_лист_Грузового_автоRowByFK_Движение_ТСМ_Путевой_лист_Грузового_авто[0];
                }
                rowДвижение_ТСМRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowДвижение_ТСМRow);
                return rowДвижение_ТСМRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Движение_ТСМRow FindByID_Движение_ТМЦ(int ID_Движение_ТМЦ) {
                return ((Движение_ТСМRow)(this.Rows.Find(new object[] {
                            ID_Движение_ТМЦ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Движение_ТСМDataTable cln = ((Движение_ТСМDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Движение_ТСМDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID_Движение_ТМЦ = base.Columns["ID_Движение ТМЦ"];
                this.columnID_Путевого_листа = base.Columns["ID_Путевого листа"];
                this.columnОстаток_ТСМ_при_выезде = base.Columns["Остаток ТСМ при выезде"];
                this.columnОстаток_ТСМ_при_возвращении = base.Columns["Остаток ТСМ при возвращении"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID_Движение_ТМЦ = new global::System.Data.DataColumn("ID_Движение ТМЦ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Движение_ТМЦ);
                this.columnID_Путевого_листа = new global::System.Data.DataColumn("ID_Путевого листа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Путевого_листа);
                this.columnОстаток_ТСМ_при_выезде = new global::System.Data.DataColumn("Остаток ТСМ при выезде", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОстаток_ТСМ_при_выезде);
                this.columnОстаток_ТСМ_при_возвращении = new global::System.Data.DataColumn("Остаток ТСМ при возвращении", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОстаток_ТСМ_при_возвращении);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Движение_ТМЦ}, true));
                this.columnID_Движение_ТМЦ.AllowDBNull = false;
                this.columnID_Движение_ТМЦ.Unique = true;
                this.columnID_Путевого_листа.AllowDBNull = false;
                this.columnОстаток_ТСМ_при_выезде.AllowDBNull = false;
                this.columnОстаток_ТСМ_при_выезде.MaxLength = 50;
                this.columnОстаток_ТСМ_при_возвращении.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Движение_ТСМRow NewДвижение_ТСМRow() {
                return ((Движение_ТСМRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Движение_ТСМRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Движение_ТСМRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Движение_ТСМRowChanged != null)) {
                    this.Движение_ТСМRowChanged(this, new Движение_ТСМRowChangeEvent(((Движение_ТСМRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Движение_ТСМRowChanging != null)) {
                    this.Движение_ТСМRowChanging(this, new Движение_ТСМRowChangeEvent(((Движение_ТСМRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Движение_ТСМRowDeleted != null)) {
                    this.Движение_ТСМRowDeleted(this, new Движение_ТСМRowChangeEvent(((Движение_ТСМRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Движение_ТСМRowDeleting != null)) {
                    this.Движение_ТСМRowDeleting(this, new Движение_ТСМRowChangeEvent(((Движение_ТСМRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveДвижение_ТСМRow(Движение_ТСМRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Путевые_листыDataSet ds = new Путевые_листыDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Движение_ТСМDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Задание_водителюDataTable : global::System.Data.TypedTableBase<Задание_водителюRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnID_Путевого_листа;
            
            private global::System.Data.DataColumn columnЗаказчик;
            
            private global::System.Data.DataColumn columnДата_и_время_прибытия;
            
            private global::System.Data.DataColumn columnДата_и_время_убытия;
            
            private global::System.Data.DataColumn columnПункт_отправления;
            
            private global::System.Data.DataColumn columnПункт_назначения;
            
            private global::System.Data.DataColumn columnРасстояние_км;
            
            private global::System.Data.DataColumn columnНаименование_груза;
            
            private global::System.Data.DataColumn columnВес_груза_т;
            
            private global::System.Data.DataColumn columnКоличество_поездок_с_грузом_час;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Задание_водителюDataTable() {
                this.TableName = "Задание водителю";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Задание_водителюDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Задание_водителюDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_Путевого_листаColumn {
                get {
                    return this.columnID_Путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ЗаказчикColumn {
                get {
                    return this.columnЗаказчик;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Дата_и_время_прибытияColumn {
                get {
                    return this.columnДата_и_время_прибытия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Дата_и_время_убытияColumn {
                get {
                    return this.columnДата_и_время_убытия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Пункт_отправленияColumn {
                get {
                    return this.columnПункт_отправления;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Пункт_назначенияColumn {
                get {
                    return this.columnПункт_назначения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Расстояние_кмColumn {
                get {
                    return this.columnРасстояние_км;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Наименование_грузаColumn {
                get {
                    return this.columnНаименование_груза;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Вес_груза_тColumn {
                get {
                    return this.columnВес_груза_т;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Количество_поездок_с_грузом_часColumn {
                get {
                    return this.columnКоличество_поездок_с_грузом_час;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Задание_водителюRow this[int index] {
                get {
                    return ((Задание_водителюRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Задание_водителюRowChangeEventHandler Задание_водителюRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Задание_водителюRowChangeEventHandler Задание_водителюRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Задание_водителюRowChangeEventHandler Задание_водителюRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Задание_водителюRowChangeEventHandler Задание_водителюRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddЗадание_водителюRow(Задание_водителюRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Задание_водителюRow AddЗадание_водителюRow(int id, Путевой_лист_Грузового_автоRow parentПутевой_лист_Грузового_автоRowByFK_Задание_водителю_Путевой_лист_Грузового_авто, string Заказчик, System.DateTime Дата_и_время_прибытия, System.DateTime Дата_и_время_убытия, string Пункт_отправления, string Пункт_назначения, double Расстояние_км, string Наименование_груза, double Вес_груза_т, int Количество_поездок_с_грузом_час) {
                Задание_водителюRow rowЗадание_водителюRow = ((Задание_водителюRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        null,
                        Заказчик,
                        Дата_и_время_прибытия,
                        Дата_и_время_убытия,
                        Пункт_отправления,
                        Пункт_назначения,
                        Расстояние_км,
                        Наименование_груза,
                        Вес_груза_т,
                        Количество_поездок_с_грузом_час};
                if ((parentПутевой_лист_Грузового_автоRowByFK_Задание_водителю_Путевой_лист_Грузового_авто != null)) {
                    columnValuesArray[1] = parentПутевой_лист_Грузового_автоRowByFK_Задание_водителю_Путевой_лист_Грузового_авто[0];
                }
                rowЗадание_водителюRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowЗадание_водителюRow);
                return rowЗадание_водителюRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Задание_водителюRow FindByid(int id) {
                return ((Задание_водителюRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Задание_водителюDataTable cln = ((Задание_водителюDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Задание_водителюDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnID_Путевого_листа = base.Columns["ID_Путевого листа"];
                this.columnЗаказчик = base.Columns["Заказчик"];
                this.columnДата_и_время_прибытия = base.Columns["Дата и время прибытия"];
                this.columnДата_и_время_убытия = base.Columns["Дата и время убытия"];
                this.columnПункт_отправления = base.Columns["Пункт отправления"];
                this.columnПункт_назначения = base.Columns["Пункт назначения"];
                this.columnРасстояние_км = base.Columns["Расстояние км"];
                this.columnНаименование_груза = base.Columns["Наименование груза"];
                this.columnВес_груза_т = base.Columns["Вес груза т"];
                this.columnКоличество_поездок_с_грузом_час = base.Columns["Количество поездок с грузом час"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnID_Путевого_листа = new global::System.Data.DataColumn("ID_Путевого листа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Путевого_листа);
                this.columnЗаказчик = new global::System.Data.DataColumn("Заказчик", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗаказчик);
                this.columnДата_и_время_прибытия = new global::System.Data.DataColumn("Дата и время прибытия", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_и_время_прибытия);
                this.columnДата_и_время_убытия = new global::System.Data.DataColumn("Дата и время убытия", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_и_время_убытия);
                this.columnПункт_отправления = new global::System.Data.DataColumn("Пункт отправления", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПункт_отправления);
                this.columnПункт_назначения = new global::System.Data.DataColumn("Пункт назначения", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПункт_назначения);
                this.columnРасстояние_км = new global::System.Data.DataColumn("Расстояние км", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnРасстояние_км);
                this.columnНаименование_груза = new global::System.Data.DataColumn("Наименование груза", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование_груза);
                this.columnВес_груза_т = new global::System.Data.DataColumn("Вес груза т", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВес_груза_т);
                this.columnКоличество_поездок_с_грузом_час = new global::System.Data.DataColumn("Количество поездок с грузом час", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКоличество_поездок_с_грузом_час);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnID_Путевого_листа.AllowDBNull = false;
                this.columnЗаказчик.MaxLength = 50;
                this.columnПункт_отправления.MaxLength = 100;
                this.columnПункт_назначения.MaxLength = 100;
                this.columnНаименование_груза.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Задание_водителюRow NewЗадание_водителюRow() {
                return ((Задание_водителюRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Задание_водителюRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Задание_водителюRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Задание_водителюRowChanged != null)) {
                    this.Задание_водителюRowChanged(this, new Задание_водителюRowChangeEvent(((Задание_водителюRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Задание_водителюRowChanging != null)) {
                    this.Задание_водителюRowChanging(this, new Задание_водителюRowChangeEvent(((Задание_водителюRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Задание_водителюRowDeleted != null)) {
                    this.Задание_водителюRowDeleted(this, new Задание_водителюRowChangeEvent(((Задание_водителюRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Задание_водителюRowDeleting != null)) {
                    this.Задание_водителюRowDeleting(this, new Задание_водителюRowChangeEvent(((Задание_водителюRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveЗадание_водителюRow(Задание_водителюRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Путевые_листыDataSet ds = new Путевые_листыDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Задание_водителюDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Заправка_ТСМDataTable : global::System.Data.TypedTableBase<Заправка_ТСМRow> {
            
            private global::System.Data.DataColumn columnID_Заправка_ТСМ;
            
            private global::System.Data.DataColumn columnДата;
            
            private global::System.Data.DataColumn columnМарка_ТСМ;
            
            private global::System.Data.DataColumn columnКоличество;
            
            private global::System.Data.DataColumn columnID_Путевого_листа;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Заправка_ТСМDataTable() {
                this.TableName = "Заправка ТСМ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Заправка_ТСМDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Заправка_ТСМDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_Заправка_ТСМColumn {
                get {
                    return this.columnID_Заправка_ТСМ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ДатаColumn {
                get {
                    return this.columnДата;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Марка_ТСМColumn {
                get {
                    return this.columnМарка_ТСМ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КоличествоColumn {
                get {
                    return this.columnКоличество;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_Путевого_листаColumn {
                get {
                    return this.columnID_Путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Заправка_ТСМRow this[int index] {
                get {
                    return ((Заправка_ТСМRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Заправка_ТСМRowChangeEventHandler Заправка_ТСМRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Заправка_ТСМRowChangeEventHandler Заправка_ТСМRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Заправка_ТСМRowChangeEventHandler Заправка_ТСМRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Заправка_ТСМRowChangeEventHandler Заправка_ТСМRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddЗаправка_ТСМRow(Заправка_ТСМRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Заправка_ТСМRow AddЗаправка_ТСМRow(System.DateTime Дата, string Марка_ТСМ, double Количество, int ID_Путевого_листа) {
                Заправка_ТСМRow rowЗаправка_ТСМRow = ((Заправка_ТСМRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Дата,
                        Марка_ТСМ,
                        Количество,
                        ID_Путевого_листа};
                rowЗаправка_ТСМRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowЗаправка_ТСМRow);
                return rowЗаправка_ТСМRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Заправка_ТСМRow FindByID_Заправка_ТСМ(int ID_Заправка_ТСМ) {
                return ((Заправка_ТСМRow)(this.Rows.Find(new object[] {
                            ID_Заправка_ТСМ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Заправка_ТСМDataTable cln = ((Заправка_ТСМDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Заправка_ТСМDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID_Заправка_ТСМ = base.Columns["ID_Заправка ТСМ"];
                this.columnДата = base.Columns["Дата"];
                this.columnМарка_ТСМ = base.Columns["Марка ТСМ"];
                this.columnКоличество = base.Columns["Количество"];
                this.columnID_Путевого_листа = base.Columns["ID_Путевого листа"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID_Заправка_ТСМ = new global::System.Data.DataColumn("ID_Заправка ТСМ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Заправка_ТСМ);
                this.columnДата = new global::System.Data.DataColumn("Дата", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата);
                this.columnМарка_ТСМ = new global::System.Data.DataColumn("Марка ТСМ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМарка_ТСМ);
                this.columnКоличество = new global::System.Data.DataColumn("Количество", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКоличество);
                this.columnID_Путевого_листа = new global::System.Data.DataColumn("ID_Путевого листа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Путевого_листа);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Заправка_ТСМ}, true));
                this.columnID_Заправка_ТСМ.AutoIncrement = true;
                this.columnID_Заправка_ТСМ.AutoIncrementSeed = -1;
                this.columnID_Заправка_ТСМ.AutoIncrementStep = -1;
                this.columnID_Заправка_ТСМ.AllowDBNull = false;
                this.columnID_Заправка_ТСМ.ReadOnly = true;
                this.columnID_Заправка_ТСМ.Unique = true;
                this.columnМарка_ТСМ.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Заправка_ТСМRow NewЗаправка_ТСМRow() {
                return ((Заправка_ТСМRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Заправка_ТСМRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Заправка_ТСМRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Заправка_ТСМRowChanged != null)) {
                    this.Заправка_ТСМRowChanged(this, new Заправка_ТСМRowChangeEvent(((Заправка_ТСМRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Заправка_ТСМRowChanging != null)) {
                    this.Заправка_ТСМRowChanging(this, new Заправка_ТСМRowChangeEvent(((Заправка_ТСМRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Заправка_ТСМRowDeleted != null)) {
                    this.Заправка_ТСМRowDeleted(this, new Заправка_ТСМRowChangeEvent(((Заправка_ТСМRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Заправка_ТСМRowDeleting != null)) {
                    this.Заправка_ТСМRowDeleting(this, new Заправка_ТСМRowChangeEvent(((Заправка_ТСМRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveЗаправка_ТСМRow(Заправка_ТСМRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Путевые_листыDataSet ds = new Путевые_листыDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Заправка_ТСМDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Личный_составDataTable : global::System.Data.TypedTableBase<Личный_составRow> {
            
            private global::System.Data.DataColumn columnтабельный__номер;
            
            private global::System.Data.DataColumn columnФИО;
            
            private global::System.Data.DataColumn columnсерия_водительского_удостоверения;
            
            private global::System.Data.DataColumn columnномер_водительского_удостоверения;
            
            private global::System.Data.DataColumn columnклассность;
            
            private global::System.Data.DataColumn columnсрок_действия_мед__справки;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Личный_составDataTable() {
                this.TableName = "Личный состав";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Личный_составDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Личный_составDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn табельный__номерColumn {
                get {
                    return this.columnтабельный__номер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ФИОColumn {
                get {
                    return this.columnФИО;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn серия_водительского_удостоверенияColumn {
                get {
                    return this.columnсерия_водительского_удостоверения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn номер_водительского_удостоверенияColumn {
                get {
                    return this.columnномер_водительского_удостоверения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn классностьColumn {
                get {
                    return this.columnклассность;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn срок_действия_мед__справкиColumn {
                get {
                    return this.columnсрок_действия_мед__справки;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Личный_составRow this[int index] {
                get {
                    return ((Личный_составRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Личный_составRowChangeEventHandler Личный_составRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Личный_составRowChangeEventHandler Личный_составRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Личный_составRowChangeEventHandler Личный_составRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Личный_составRowChangeEventHandler Личный_составRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddЛичный_составRow(Личный_составRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Личный_составRow AddЛичный_составRow(int табельный__номер, string ФИО, string серия_водительского_удостоверения, int номер_водительского_удостоверения, int классность, System.DateTime срок_действия_мед__справки) {
                Личный_составRow rowЛичный_составRow = ((Личный_составRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        табельный__номер,
                        ФИО,
                        серия_водительского_удостоверения,
                        номер_водительского_удостоверения,
                        классность,
                        срок_действия_мед__справки};
                rowЛичный_составRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowЛичный_составRow);
                return rowЛичный_составRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Личный_составRow FindByтабельный__номер(int табельный__номер) {
                return ((Личный_составRow)(this.Rows.Find(new object[] {
                            табельный__номер})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Личный_составDataTable cln = ((Личный_составDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Личный_составDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnтабельный__номер = base.Columns["табельный  номер"];
                this.columnФИО = base.Columns["ФИО"];
                this.columnсерия_водительского_удостоверения = base.Columns["серия водительского удостоверения"];
                this.columnномер_водительского_удостоверения = base.Columns["номер водительского удостоверения"];
                this.columnклассность = base.Columns["классность"];
                this.columnсрок_действия_мед__справки = base.Columns["срок действия мед_ справки"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnтабельный__номер = new global::System.Data.DataColumn("табельный  номер", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnтабельный__номер);
                this.columnФИО = new global::System.Data.DataColumn("ФИО", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФИО);
                this.columnсерия_водительского_удостоверения = new global::System.Data.DataColumn("серия водительского удостоверения", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnсерия_водительского_удостоверения);
                this.columnномер_водительского_удостоверения = new global::System.Data.DataColumn("номер водительского удостоверения", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnномер_водительского_удостоверения);
                this.columnклассность = new global::System.Data.DataColumn("классность", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnклассность);
                this.columnсрок_действия_мед__справки = new global::System.Data.DataColumn("срок действия мед_ справки", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnсрок_действия_мед__справки);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnтабельный__номер}, true));
                this.columnтабельный__номер.AllowDBNull = false;
                this.columnтабельный__номер.Unique = true;
                this.columnФИО.AllowDBNull = false;
                this.columnФИО.MaxLength = 50;
                this.columnсерия_водительского_удостоверения.AllowDBNull = false;
                this.columnсерия_водительского_удостоверения.MaxLength = 50;
                this.columnномер_водительского_удостоверения.AllowDBNull = false;
                this.columnклассность.AllowDBNull = false;
                this.columnсрок_действия_мед__справки.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Личный_составRow NewЛичный_составRow() {
                return ((Личный_составRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Личный_составRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Личный_составRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Личный_составRowChanged != null)) {
                    this.Личный_составRowChanged(this, new Личный_составRowChangeEvent(((Личный_составRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Личный_составRowChanging != null)) {
                    this.Личный_составRowChanging(this, new Личный_составRowChangeEvent(((Личный_составRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Личный_составRowDeleted != null)) {
                    this.Личный_составRowDeleted(this, new Личный_составRowChangeEvent(((Личный_составRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Личный_составRowDeleting != null)) {
                    this.Личный_составRowDeleting(this, new Личный_составRowChangeEvent(((Личный_составRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveЛичный_составRow(Личный_составRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Путевые_листыDataSet ds = new Путевые_листыDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Личный_составDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _Нормы_расхода_ГСМ_на_авто_тракторыDataTable : global::System.Data.TypedTableBase<_Нормы_расхода_ГСМ_на_авто_тракторыRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnМарка_автомобиля;
            
            private global::System.Data.DataColumn columnВид_топлива;
            
            private global::System.Data.DataColumn _columnНорма_расхода_на_100_км_летняя_6_;
            
            private global::System.Data.DataColumn columnМарка_двигателя;
            
            private global::System.Data.DataColumn columnНорма_на_машино_час_летняя;
            
            private global::System.Data.DataColumn _columnН_ма_расх_масел_на_100л_р_да_топлива_моторное_л;
            
            private global::System.Data.DataColumn _columnН_ма_расх_масел_на_100л_р_да_трансмиссионное_л;
            
            private global::System.Data.DataColumn _columnН_ма_расх_масел_на_100л_р_да_топлива_специальное_л;
            
            private global::System.Data.DataColumn _columnН_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_л;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _Нормы_расхода_ГСМ_на_авто_тракторыDataTable() {
                this.TableName = "Нормы расхода ГСМ на авто,тракторы";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal _Нормы_расхода_ГСМ_на_авто_тракторыDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected _Нормы_расхода_ГСМ_на_авто_тракторыDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Марка_автомобиляColumn {
                get {
                    return this.columnМарка_автомобиля;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Вид_топливаColumn {
                get {
                    return this.columnВид_топлива;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _Норма_расхода_на_100_км_летняя_6_Column {
                get {
                    return this._columnНорма_расхода_на_100_км_летняя_6_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Марка_двигателяColumn {
                get {
                    return this.columnМарка_двигателя;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Норма_на_машино_час_летняяColumn {
                get {
                    return this.columnНорма_на_машино_час_летняя;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _Н_ма_расх_масел_на_100л_р_да_топлива_моторное_лColumn {
                get {
                    return this._columnН_ма_расх_масел_на_100л_р_да_топлива_моторное_л;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _Н_ма_расх_масел_на_100л_р_да_трансмиссионное_лColumn {
                get {
                    return this._columnН_ма_расх_масел_на_100л_р_да_трансмиссионное_л;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _Н_ма_расх_масел_на_100л_р_да_топлива_специальное_лColumn {
                get {
                    return this._columnН_ма_расх_масел_на_100л_р_да_топлива_специальное_л;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _Н_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_лColumn {
                get {
                    return this._columnН_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_л;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _Нормы_расхода_ГСМ_на_авто_тракторыRow this[int index] {
                get {
                    return ((_Нормы_расхода_ГСМ_на_авто_тракторыRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _Нормы_расхода_ГСМ_на_авто_тракторыRowChangeEventHandler _Нормы_расхода_ГСМ_на_авто_тракторыRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _Нормы_расхода_ГСМ_на_авто_тракторыRowChangeEventHandler _Нормы_расхода_ГСМ_на_авто_тракторыRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _Нормы_расхода_ГСМ_на_авто_тракторыRowChangeEventHandler _Нормы_расхода_ГСМ_на_авто_тракторыRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event _Нормы_расхода_ГСМ_на_авто_тракторыRowChangeEventHandler _Нормы_расхода_ГСМ_на_авто_тракторыRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Add_Нормы_расхода_ГСМ_на_авто_тракторыRow(_Нормы_расхода_ГСМ_на_авто_тракторыRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _Нормы_расхода_ГСМ_на_авто_тракторыRow Add_Нормы_расхода_ГСМ_на_авто_тракторыRow(string Марка_автомобиля, string Вид_топлива, double _Норма_расхода_на_100_км_летняя_6_, string Марка_двигателя, double Норма_на_машино_час_летняя, double _Н_ма_расх_масел_на_100л_р_да_топлива_моторное_л, double _Н_ма_расх_масел_на_100л_р_да_трансмиссионное_л, double _Н_ма_расх_масел_на_100л_р_да_топлива_специальное_л, double _Н_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_л) {
                _Нормы_расхода_ГСМ_на_авто_тракторыRow row_Нормы_расхода_ГСМ_на_авто_тракторыRow = ((_Нормы_расхода_ГСМ_на_авто_тракторыRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Марка_автомобиля,
                        Вид_топлива,
                        _Норма_расхода_на_100_км_летняя_6_,
                        Марка_двигателя,
                        Норма_на_машино_час_летняя,
                        _Н_ма_расх_масел_на_100л_р_да_топлива_моторное_л,
                        _Н_ма_расх_масел_на_100л_р_да_трансмиссионное_л,
                        _Н_ма_расх_масел_на_100л_р_да_топлива_специальное_л,
                        _Н_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_л};
                row_Нормы_расхода_ГСМ_на_авто_тракторыRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_Нормы_расхода_ГСМ_на_авто_тракторыRow);
                return row_Нормы_расхода_ГСМ_на_авто_тракторыRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _Нормы_расхода_ГСМ_на_авто_тракторыRow FindByID(int ID) {
                return ((_Нормы_расхода_ГСМ_на_авто_тракторыRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                _Нормы_расхода_ГСМ_на_авто_тракторыDataTable cln = ((_Нормы_расхода_ГСМ_на_авто_тракторыDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _Нормы_расхода_ГСМ_на_авто_тракторыDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnМарка_автомобиля = base.Columns["Марка автомобиля"];
                this.columnВид_топлива = base.Columns["Вид топлива"];
                this._columnНорма_расхода_на_100_км_летняя_6_ = base.Columns["Норма расхода на 100 км летняя 6%"];
                this.columnМарка_двигателя = base.Columns["Марка двигателя"];
                this.columnНорма_на_машино_час_летняя = base.Columns["Норма на машино час летняя"];
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_моторное_л = base.Columns["Н-ма расх_масел на 100л р-да топлива моторное,л"];
                this._columnН_ма_расх_масел_на_100л_р_да_трансмиссионное_л = base.Columns["Н-ма расх_масел на 100л р-да трансмиссионное,л"];
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_специальное_л = base.Columns["Н-ма расх_масел на 100л р-да топлива специальное,л"];
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_л = base.Columns["Н-ма расх_масел на 100л р-да топлива пластичные смазки,л"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnМарка_автомобиля = new global::System.Data.DataColumn("Марка автомобиля", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМарка_автомобиля);
                this.columnВид_топлива = new global::System.Data.DataColumn("Вид топлива", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВид_топлива);
                this._columnНорма_расхода_на_100_км_летняя_6_ = new global::System.Data.DataColumn("Норма расхода на 100 км летняя 6%", typeof(double), null, global::System.Data.MappingType.Element);
                this._columnНорма_расхода_на_100_км_летняя_6_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnНорма_расхода_на_100_км_летняя_6_");
                this._columnНорма_расхода_на_100_км_летняя_6_.ExtendedProperties.Add("Generator_UserColumnName", "Норма расхода на 100 км летняя 6%");
                base.Columns.Add(this._columnНорма_расхода_на_100_км_летняя_6_);
                this.columnМарка_двигателя = new global::System.Data.DataColumn("Марка двигателя", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМарка_двигателя);
                this.columnНорма_на_машино_час_летняя = new global::System.Data.DataColumn("Норма на машино час летняя", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНорма_на_машино_час_летняя);
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_моторное_л = new global::System.Data.DataColumn("Н-ма расх_масел на 100л р-да топлива моторное,л", typeof(double), null, global::System.Data.MappingType.Element);
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_моторное_л.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnН_ма_расх_масел_на_100л_р_да_топлива_моторное_л");
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_моторное_л.ExtendedProperties.Add("Generator_UserColumnName", "Н-ма расх_масел на 100л р-да топлива моторное,л");
                base.Columns.Add(this._columnН_ма_расх_масел_на_100л_р_да_топлива_моторное_л);
                this._columnН_ма_расх_масел_на_100л_р_да_трансмиссионное_л = new global::System.Data.DataColumn("Н-ма расх_масел на 100л р-да трансмиссионное,л", typeof(double), null, global::System.Data.MappingType.Element);
                this._columnН_ма_расх_масел_на_100л_р_да_трансмиссионное_л.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnН_ма_расх_масел_на_100л_р_да_трансмиссионное_л");
                this._columnН_ма_расх_масел_на_100л_р_да_трансмиссионное_л.ExtendedProperties.Add("Generator_UserColumnName", "Н-ма расх_масел на 100л р-да трансмиссионное,л");
                base.Columns.Add(this._columnН_ма_расх_масел_на_100л_р_да_трансмиссионное_л);
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_специальное_л = new global::System.Data.DataColumn("Н-ма расх_масел на 100л р-да топлива специальное,л", typeof(double), null, global::System.Data.MappingType.Element);
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_специальное_л.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnН_ма_расх_масел_на_100л_р_да_топлива_специальное_л");
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_специальное_л.ExtendedProperties.Add("Generator_UserColumnName", "Н-ма расх_масел на 100л р-да топлива специальное,л");
                base.Columns.Add(this._columnН_ма_расх_масел_на_100л_р_да_топлива_специальное_л);
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_л = new global::System.Data.DataColumn("Н-ма расх_масел на 100л р-да топлива пластичные смазки,л", typeof(double), null, global::System.Data.MappingType.Element);
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_л.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnН_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_л");
                this._columnН_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_л.ExtendedProperties.Add("Generator_UserColumnName", "Н-ма расх_масел на 100л р-да топлива пластичные смазки,л");
                base.Columns.Add(this._columnН_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_л);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnМарка_автомобиля.AllowDBNull = false;
                this.columnМарка_автомобиля.MaxLength = 30;
                this.columnВид_топлива.MaxLength = 10;
                this.columnМарка_двигателя.MaxLength = 30;
                this.ExtendedProperties.Add("Generator_TableVarName", "_tableНормы_расхода_ГСМ_на_авто_тракторы");
                this.ExtendedProperties.Add("Generator_UserTableName", "Нормы расхода ГСМ на авто,тракторы");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _Нормы_расхода_ГСМ_на_авто_тракторыRow New_Нормы_расхода_ГСМ_на_авто_тракторыRow() {
                return ((_Нормы_расхода_ГСМ_на_авто_тракторыRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _Нормы_расхода_ГСМ_на_авто_тракторыRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(_Нормы_расхода_ГСМ_на_авто_тракторыRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._Нормы_расхода_ГСМ_на_авто_тракторыRowChanged != null)) {
                    this._Нормы_расхода_ГСМ_на_авто_тракторыRowChanged(this, new _Нормы_расхода_ГСМ_на_авто_тракторыRowChangeEvent(((_Нормы_расхода_ГСМ_на_авто_тракторыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._Нормы_расхода_ГСМ_на_авто_тракторыRowChanging != null)) {
                    this._Нормы_расхода_ГСМ_на_авто_тракторыRowChanging(this, new _Нормы_расхода_ГСМ_на_авто_тракторыRowChangeEvent(((_Нормы_расхода_ГСМ_на_авто_тракторыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._Нормы_расхода_ГСМ_на_авто_тракторыRowDeleted != null)) {
                    this._Нормы_расхода_ГСМ_на_авто_тракторыRowDeleted(this, new _Нормы_расхода_ГСМ_на_авто_тракторыRowChangeEvent(((_Нормы_расхода_ГСМ_на_авто_тракторыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._Нормы_расхода_ГСМ_на_авто_тракторыRowDeleting != null)) {
                    this._Нормы_расхода_ГСМ_на_авто_тракторыRowDeleting(this, new _Нормы_расхода_ГСМ_на_авто_тракторыRowChangeEvent(((_Нормы_расхода_ГСМ_на_авто_тракторыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Remove_Нормы_расхода_ГСМ_на_авто_тракторыRow(_Нормы_расхода_ГСМ_на_авто_тракторыRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Путевые_листыDataSet ds = new Путевые_листыDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_Нормы_расхода_ГСМ_на_авто_тракторыDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Подвижной_составDataTable : global::System.Data.TypedTableBase<Подвижной_составRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnМарка_и_модель;
            
            private global::System.Data.DataColumn columnГос_номер;
            
            private global::System.Data.DataColumn columnГаражный_номер;
            
            private global::System.Data.DataColumn columnТип_двигателя;
            
            private global::System.Data.DataColumn columnГод_выпуска;
            
            private global::System.Data.DataColumn columnИнвентарный_номер;
            
            private global::System.Data.DataColumn columnВид_топлива;
            
            private global::System.Data.DataColumn columnдата_окончания_страховки;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Подвижной_составDataTable() {
                this.TableName = "Подвижной состав";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Подвижной_составDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Подвижной_составDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Марка_и_модельColumn {
                get {
                    return this.columnМарка_и_модель;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Гос_номерColumn {
                get {
                    return this.columnГос_номер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Гаражный_номерColumn {
                get {
                    return this.columnГаражный_номер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Тип_двигателяColumn {
                get {
                    return this.columnТип_двигателя;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Год_выпускаColumn {
                get {
                    return this.columnГод_выпуска;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Инвентарный_номерColumn {
                get {
                    return this.columnИнвентарный_номер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Вид_топливаColumn {
                get {
                    return this.columnВид_топлива;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn дата_окончания_страховкиColumn {
                get {
                    return this.columnдата_окончания_страховки;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Подвижной_составRow this[int index] {
                get {
                    return ((Подвижной_составRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Подвижной_составRowChangeEventHandler Подвижной_составRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Подвижной_составRowChangeEventHandler Подвижной_составRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Подвижной_составRowChangeEventHandler Подвижной_составRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Подвижной_составRowChangeEventHandler Подвижной_составRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddПодвижной_составRow(Подвижной_составRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Подвижной_составRow AddПодвижной_составRow(string Марка_и_модель, string Гос_номер, string Гаражный_номер, string Тип_двигателя, System.DateTime Год_выпуска, string Инвентарный_номер, string Вид_топлива, System.DateTime дата_окончания_страховки) {
                Подвижной_составRow rowПодвижной_составRow = ((Подвижной_составRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Марка_и_модель,
                        Гос_номер,
                        Гаражный_номер,
                        Тип_двигателя,
                        Год_выпуска,
                        Инвентарный_номер,
                        Вид_топлива,
                        дата_окончания_страховки};
                rowПодвижной_составRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowПодвижной_составRow);
                return rowПодвижной_составRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Подвижной_составRow FindByID(int ID) {
                return ((Подвижной_составRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Подвижной_составDataTable cln = ((Подвижной_составDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Подвижной_составDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnМарка_и_модель = base.Columns["Марка и модель"];
                this.columnГос_номер = base.Columns["Гос_номер"];
                this.columnГаражный_номер = base.Columns["Гаражный номер"];
                this.columnТип_двигателя = base.Columns["Тип двигателя"];
                this.columnГод_выпуска = base.Columns["Год выпуска"];
                this.columnИнвентарный_номер = base.Columns["Инвентарный номер"];
                this.columnВид_топлива = base.Columns["Вид топлива"];
                this.columnдата_окончания_страховки = base.Columns["дата окончания страховки"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnМарка_и_модель = new global::System.Data.DataColumn("Марка и модель", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМарка_и_модель);
                this.columnГос_номер = new global::System.Data.DataColumn("Гос_номер", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnГос_номер);
                this.columnГаражный_номер = new global::System.Data.DataColumn("Гаражный номер", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnГаражный_номер);
                this.columnТип_двигателя = new global::System.Data.DataColumn("Тип двигателя", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТип_двигателя);
                this.columnГод_выпуска = new global::System.Data.DataColumn("Год выпуска", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnГод_выпуска);
                this.columnИнвентарный_номер = new global::System.Data.DataColumn("Инвентарный номер", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИнвентарный_номер);
                this.columnВид_топлива = new global::System.Data.DataColumn("Вид топлива", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВид_топлива);
                this.columnдата_окончания_страховки = new global::System.Data.DataColumn("дата окончания страховки", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnдата_окончания_страховки);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnМарка_и_модель.AllowDBNull = false;
                this.columnМарка_и_модель.MaxLength = 50;
                this.columnГос_номер.AllowDBNull = false;
                this.columnГос_номер.MaxLength = 50;
                this.columnГаражный_номер.MaxLength = 50;
                this.columnТип_двигателя.MaxLength = 50;
                this.columnИнвентарный_номер.MaxLength = 50;
                this.columnВид_топлива.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Подвижной_составRow NewПодвижной_составRow() {
                return ((Подвижной_составRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Подвижной_составRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Подвижной_составRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Подвижной_составRowChanged != null)) {
                    this.Подвижной_составRowChanged(this, new Подвижной_составRowChangeEvent(((Подвижной_составRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Подвижной_составRowChanging != null)) {
                    this.Подвижной_составRowChanging(this, new Подвижной_составRowChangeEvent(((Подвижной_составRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Подвижной_составRowDeleted != null)) {
                    this.Подвижной_составRowDeleted(this, new Подвижной_составRowChangeEvent(((Подвижной_составRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Подвижной_составRowDeleting != null)) {
                    this.Подвижной_составRowDeleting(this, new Подвижной_составRowChangeEvent(((Подвижной_составRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveПодвижной_составRow(Подвижной_составRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Путевые_листыDataSet ds = new Путевые_листыDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Подвижной_составDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Путевой_лист_Грузового_автоDataTable : global::System.Data.TypedTableBase<Путевой_лист_Грузового_автоRow> {
            
            private global::System.Data.DataColumn columnID_Путевого_листа;
            
            private global::System.Data.DataColumn columnНомер_путевого_листа;
            
            private global::System.Data.DataColumn columnДата_путевого_листа;
            
            private global::System.Data.DataColumn columnID_Водителя;
            
            private global::System.Data.DataColumn columnID_Автомобиля;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоDataTable() {
                this.TableName = "Путевой лист Грузового авто";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Путевой_лист_Грузового_автоDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Путевой_лист_Грузового_автоDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_Путевого_листаColumn {
                get {
                    return this.columnID_Путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Номер_путевого_листаColumn {
                get {
                    return this.columnНомер_путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Дата_путевого_листаColumn {
                get {
                    return this.columnДата_путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_ВодителяColumn {
                get {
                    return this.columnID_Водителя;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_АвтомобиляColumn {
                get {
                    return this.columnID_Автомобиля;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоRow this[int index] {
                get {
                    return ((Путевой_лист_Грузового_автоRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Путевой_лист_Грузового_автоRowChangeEventHandler Путевой_лист_Грузового_автоRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Путевой_лист_Грузового_автоRowChangeEventHandler Путевой_лист_Грузового_автоRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Путевой_лист_Грузового_автоRowChangeEventHandler Путевой_лист_Грузового_автоRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Путевой_лист_Грузового_автоRowChangeEventHandler Путевой_лист_Грузового_автоRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddПутевой_лист_Грузового_автоRow(Путевой_лист_Грузового_автоRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоRow AddПутевой_лист_Грузового_автоRow(int Номер_путевого_листа, System.DateTime Дата_путевого_листа, Личный_составRow parentЛичный_составRowByFK_Путевой_лист_Грузового_авто_личный_состав, Подвижной_составRow parentПодвижной_составRowByFK_Путевой_лист_Грузового_авто_Подвижной_состав) {
                Путевой_лист_Грузового_автоRow rowПутевой_лист_Грузового_автоRow = ((Путевой_лист_Грузового_автоRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Номер_путевого_листа,
                        Дата_путевого_листа,
                        null,
                        null};
                if ((parentЛичный_составRowByFK_Путевой_лист_Грузового_авто_личный_состав != null)) {
                    columnValuesArray[3] = parentЛичный_составRowByFK_Путевой_лист_Грузового_авто_личный_состав[0];
                }
                if ((parentПодвижной_составRowByFK_Путевой_лист_Грузового_авто_Подвижной_состав != null)) {
                    columnValuesArray[4] = parentПодвижной_составRowByFK_Путевой_лист_Грузового_авто_Подвижной_состав[0];
                }
                rowПутевой_лист_Грузового_автоRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowПутевой_лист_Грузового_автоRow);
                return rowПутевой_лист_Грузового_автоRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоRow FindByID_Путевого_листа(int ID_Путевого_листа) {
                return ((Путевой_лист_Грузового_автоRow)(this.Rows.Find(new object[] {
                            ID_Путевого_листа})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Путевой_лист_Грузового_автоDataTable cln = ((Путевой_лист_Грузового_автоDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Путевой_лист_Грузового_автоDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID_Путевого_листа = base.Columns["ID_Путевого листа"];
                this.columnНомер_путевого_листа = base.Columns["Номер путевого листа"];
                this.columnДата_путевого_листа = base.Columns["Дата путевого листа"];
                this.columnID_Водителя = base.Columns["ID_Водителя"];
                this.columnID_Автомобиля = base.Columns["ID_Автомобиля"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID_Путевого_листа = new global::System.Data.DataColumn("ID_Путевого листа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Путевого_листа);
                this.columnНомер_путевого_листа = new global::System.Data.DataColumn("Номер путевого листа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНомер_путевого_листа);
                this.columnДата_путевого_листа = new global::System.Data.DataColumn("Дата путевого листа", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_путевого_листа);
                this.columnID_Водителя = new global::System.Data.DataColumn("ID_Водителя", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Водителя);
                this.columnID_Автомобиля = new global::System.Data.DataColumn("ID_Автомобиля", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Автомобиля);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Путевого_листа}, true));
                this.columnID_Путевого_листа.AutoIncrement = true;
                this.columnID_Путевого_листа.AutoIncrementSeed = -1;
                this.columnID_Путевого_листа.AutoIncrementStep = -1;
                this.columnID_Путевого_листа.AllowDBNull = false;
                this.columnID_Путевого_листа.ReadOnly = true;
                this.columnID_Путевого_листа.Unique = true;
                this.columnНомер_путевого_листа.AllowDBNull = false;
                this.columnДата_путевого_листа.AllowDBNull = false;
                this.columnID_Водителя.AllowDBNull = false;
                this.columnID_Автомобиля.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоRow NewПутевой_лист_Грузового_автоRow() {
                return ((Путевой_лист_Грузового_автоRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Путевой_лист_Грузового_автоRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Путевой_лист_Грузового_автоRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Путевой_лист_Грузового_автоRowChanged != null)) {
                    this.Путевой_лист_Грузового_автоRowChanged(this, new Путевой_лист_Грузового_автоRowChangeEvent(((Путевой_лист_Грузового_автоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Путевой_лист_Грузового_автоRowChanging != null)) {
                    this.Путевой_лист_Грузового_автоRowChanging(this, new Путевой_лист_Грузового_автоRowChangeEvent(((Путевой_лист_Грузового_автоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Путевой_лист_Грузового_автоRowDeleted != null)) {
                    this.Путевой_лист_Грузового_автоRowDeleted(this, new Путевой_лист_Грузового_автоRowChangeEvent(((Путевой_лист_Грузового_автоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Путевой_лист_Грузового_автоRowDeleting != null)) {
                    this.Путевой_лист_Грузового_автоRowDeleting(this, new Путевой_лист_Грузового_автоRowChangeEvent(((Путевой_лист_Грузового_автоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveПутевой_лист_Грузового_автоRow(Путевой_лист_Грузового_автоRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Путевые_листыDataSet ds = new Путевые_листыDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Путевой_лист_Грузового_автоDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Путевой_лист_легкового_автомобиляDataTable : global::System.Data.TypedTableBase<Путевой_лист_легкового_автомобиляRow> {
            
            private global::System.Data.DataColumn columnID_Путевого_листа;
            
            private global::System.Data.DataColumn columnНомер_путевого_листа;
            
            private global::System.Data.DataColumn columnЗа_период_с;
            
            private global::System.Data.DataColumn columnЗа_период_по;
            
            private global::System.Data.DataColumn columnID_Автомобиль;
            
            private global::System.Data.DataColumn columnID_Водитель;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_легкового_автомобиляDataTable() {
                this.TableName = "Путевой лист легкового автомобиля";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Путевой_лист_легкового_автомобиляDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Путевой_лист_легкового_автомобиляDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_Путевого_листаColumn {
                get {
                    return this.columnID_Путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Номер_путевого_листаColumn {
                get {
                    return this.columnНомер_путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn За_период_сColumn {
                get {
                    return this.columnЗа_период_с;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn За_период_поColumn {
                get {
                    return this.columnЗа_период_по;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_АвтомобильColumn {
                get {
                    return this.columnID_Автомобиль;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_ВодительColumn {
                get {
                    return this.columnID_Водитель;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_легкового_автомобиляRow this[int index] {
                get {
                    return ((Путевой_лист_легкового_автомобиляRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Путевой_лист_легкового_автомобиляRowChangeEventHandler Путевой_лист_легкового_автомобиляRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Путевой_лист_легкового_автомобиляRowChangeEventHandler Путевой_лист_легкового_автомобиляRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Путевой_лист_легкового_автомобиляRowChangeEventHandler Путевой_лист_легкового_автомобиляRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Путевой_лист_легкового_автомобиляRowChangeEventHandler Путевой_лист_легкового_автомобиляRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddПутевой_лист_легкового_автомобиляRow(Путевой_лист_легкового_автомобиляRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_легкового_автомобиляRow AddПутевой_лист_легкового_автомобиляRow(string Номер_путевого_листа, System.DateTime За_период_с, System.DateTime За_период_по, Подвижной_составRow parentПодвижной_составRowByFK_Путевой_лист_легкового_автомобиля_Подвижной_состав, Личный_составRow parentЛичный_составRowByFK_Путевой_лист_легкового_автомобиля_личный_состав) {
                Путевой_лист_легкового_автомобиляRow rowПутевой_лист_легкового_автомобиляRow = ((Путевой_лист_легкового_автомобиляRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Номер_путевого_листа,
                        За_период_с,
                        За_период_по,
                        null,
                        null};
                if ((parentПодвижной_составRowByFK_Путевой_лист_легкового_автомобиля_Подвижной_состав != null)) {
                    columnValuesArray[4] = parentПодвижной_составRowByFK_Путевой_лист_легкового_автомобиля_Подвижной_состав[0];
                }
                if ((parentЛичный_составRowByFK_Путевой_лист_легкового_автомобиля_личный_состав != null)) {
                    columnValuesArray[5] = parentЛичный_составRowByFK_Путевой_лист_легкового_автомобиля_личный_состав[0];
                }
                rowПутевой_лист_легкового_автомобиляRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowПутевой_лист_легкового_автомобиляRow);
                return rowПутевой_лист_легкового_автомобиляRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_легкового_автомобиляRow FindByID_Путевого_листа(int ID_Путевого_листа) {
                return ((Путевой_лист_легкового_автомобиляRow)(this.Rows.Find(new object[] {
                            ID_Путевого_листа})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Путевой_лист_легкового_автомобиляDataTable cln = ((Путевой_лист_легкового_автомобиляDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Путевой_лист_легкового_автомобиляDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID_Путевого_листа = base.Columns["ID_Путевого листа"];
                this.columnНомер_путевого_листа = base.Columns["Номер путевого листа"];
                this.columnЗа_период_с = base.Columns["За период с"];
                this.columnЗа_период_по = base.Columns["За период по"];
                this.columnID_Автомобиль = base.Columns["ID_Автомобиль"];
                this.columnID_Водитель = base.Columns["ID_Водитель"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID_Путевого_листа = new global::System.Data.DataColumn("ID_Путевого листа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Путевого_листа);
                this.columnНомер_путевого_листа = new global::System.Data.DataColumn("Номер путевого листа", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНомер_путевого_листа);
                this.columnЗа_период_с = new global::System.Data.DataColumn("За период с", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗа_период_с);
                this.columnЗа_период_по = new global::System.Data.DataColumn("За период по", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗа_период_по);
                this.columnID_Автомобиль = new global::System.Data.DataColumn("ID_Автомобиль", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Автомобиль);
                this.columnID_Водитель = new global::System.Data.DataColumn("ID_Водитель", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Водитель);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Путевого_листа}, true));
                this.columnID_Путевого_листа.AutoIncrement = true;
                this.columnID_Путевого_листа.AutoIncrementSeed = -1;
                this.columnID_Путевого_листа.AutoIncrementStep = -1;
                this.columnID_Путевого_листа.AllowDBNull = false;
                this.columnID_Путевого_листа.ReadOnly = true;
                this.columnID_Путевого_листа.Unique = true;
                this.columnНомер_путевого_листа.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_легкового_автомобиляRow NewПутевой_лист_легкового_автомобиляRow() {
                return ((Путевой_лист_легкового_автомобиляRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Путевой_лист_легкового_автомобиляRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Путевой_лист_легкового_автомобиляRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Путевой_лист_легкового_автомобиляRowChanged != null)) {
                    this.Путевой_лист_легкового_автомобиляRowChanged(this, new Путевой_лист_легкового_автомобиляRowChangeEvent(((Путевой_лист_легкового_автомобиляRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Путевой_лист_легкового_автомобиляRowChanging != null)) {
                    this.Путевой_лист_легкового_автомобиляRowChanging(this, new Путевой_лист_легкового_автомобиляRowChangeEvent(((Путевой_лист_легкового_автомобиляRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Путевой_лист_легкового_автомобиляRowDeleted != null)) {
                    this.Путевой_лист_легкового_автомобиляRowDeleted(this, new Путевой_лист_легкового_автомобиляRowChangeEvent(((Путевой_лист_легкового_автомобиляRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Путевой_лист_легкового_автомобиляRowDeleting != null)) {
                    this.Путевой_лист_легкового_автомобиляRowDeleting(this, new Путевой_лист_легкового_автомобиляRowChangeEvent(((Путевой_лист_легкового_автомобиляRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveПутевой_лист_легкового_автомобиляRow(Путевой_лист_легкового_автомобиляRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Путевые_листыDataSet ds = new Путевые_листыDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Путевой_лист_легкового_автомобиляDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Работа_водителя_и_автомобиляDataTable : global::System.Data.TypedTableBase<Работа_водителя_и_автомобиляRow> {
            
            private global::System.Data.DataColumn columnID_работа_водителя_и_авто;
            
            private global::System.Data.DataColumn columnID_Путевого_листа;
            
            private global::System.Data.DataColumn columnОперации;
            
            private global::System.Data.DataColumn columnПоказания_спидометра;
            
            private global::System.Data.DataColumn columnДата_и_время_по_графику;
            
            private global::System.Data.DataColumn columnДата_и_время_фактически;
            
            private global::System.Data.DataColumn columnНулевой_пробег;
            
            private global::System.Data.DataColumn columnВремя_работы_двигателя_час;
            
            private global::System.Data.DataColumn columnВремя_работы_спецоборудования;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Работа_водителя_и_автомобиляDataTable() {
                this.TableName = "Работа водителя и автомобиля";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Работа_водителя_и_автомобиляDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Работа_водителя_и_автомобиляDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_работа_водителя_и_автоColumn {
                get {
                    return this.columnID_работа_водителя_и_авто;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_Путевого_листаColumn {
                get {
                    return this.columnID_Путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ОперацииColumn {
                get {
                    return this.columnОперации;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Показания_спидометраColumn {
                get {
                    return this.columnПоказания_спидометра;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Дата_и_время_по_графикуColumn {
                get {
                    return this.columnДата_и_время_по_графику;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Дата_и_время_фактическиColumn {
                get {
                    return this.columnДата_и_время_фактически;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Нулевой_пробегColumn {
                get {
                    return this.columnНулевой_пробег;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Время_работы_двигателя_часColumn {
                get {
                    return this.columnВремя_работы_двигателя_час;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Время_работы_спецоборудованияColumn {
                get {
                    return this.columnВремя_работы_спецоборудования;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Работа_водителя_и_автомобиляRow this[int index] {
                get {
                    return ((Работа_водителя_и_автомобиляRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Работа_водителя_и_автомобиляRowChangeEventHandler Работа_водителя_и_автомобиляRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Работа_водителя_и_автомобиляRowChangeEventHandler Работа_водителя_и_автомобиляRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Работа_водителя_и_автомобиляRowChangeEventHandler Работа_водителя_и_автомобиляRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Работа_водителя_и_автомобиляRowChangeEventHandler Работа_водителя_и_автомобиляRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddРабота_водителя_и_автомобиляRow(Работа_водителя_и_автомобиляRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Работа_водителя_и_автомобиляRow AddРабота_водителя_и_автомобиляRow(Путевой_лист_Грузового_автоRow parentПутевой_лист_Грузового_автоRowByFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_грузового_автомобиля, string Операции, int Показания_спидометра, System.DateTime Дата_и_время_по_графику, System.DateTime Дата_и_время_фактически, int Нулевой_пробег, int Время_работы_двигателя_час, int Время_работы_спецоборудования) {
                Работа_водителя_и_автомобиляRow rowРабота_водителя_и_автомобиляRow = ((Работа_водителя_и_автомобиляRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Операции,
                        Показания_спидометра,
                        Дата_и_время_по_графику,
                        Дата_и_время_фактически,
                        Нулевой_пробег,
                        Время_работы_двигателя_час,
                        Время_работы_спецоборудования};
                if ((parentПутевой_лист_Грузового_автоRowByFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_грузового_автомобиля != null)) {
                    columnValuesArray[1] = parentПутевой_лист_Грузового_автоRowByFK_Данные_Путевой_лист_легкового_авто_Путевой_лист_грузового_автомобиля[0];
                }
                rowРабота_водителя_и_автомобиляRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowРабота_водителя_и_автомобиляRow);
                return rowРабота_водителя_и_автомобиляRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Работа_водителя_и_автомобиляRow FindByID_работа_водителя_и_авто(int ID_работа_водителя_и_авто) {
                return ((Работа_водителя_и_автомобиляRow)(this.Rows.Find(new object[] {
                            ID_работа_водителя_и_авто})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Работа_водителя_и_автомобиляDataTable cln = ((Работа_водителя_и_автомобиляDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Работа_водителя_и_автомобиляDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID_работа_водителя_и_авто = base.Columns["ID_работа водителя и авто"];
                this.columnID_Путевого_листа = base.Columns["ID_Путевого листа"];
                this.columnОперации = base.Columns["Операции"];
                this.columnПоказания_спидометра = base.Columns["Показания спидометра"];
                this.columnДата_и_время_по_графику = base.Columns["Дата и время по графику"];
                this.columnДата_и_время_фактически = base.Columns["Дата и время фактически"];
                this.columnНулевой_пробег = base.Columns["Нулевой пробег"];
                this.columnВремя_работы_двигателя_час = base.Columns["Время работы двигателя час"];
                this.columnВремя_работы_спецоборудования = base.Columns["Время работы спецоборудования"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID_работа_водителя_и_авто = new global::System.Data.DataColumn("ID_работа водителя и авто", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_работа_водителя_и_авто);
                this.columnID_Путевого_листа = new global::System.Data.DataColumn("ID_Путевого листа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Путевого_листа);
                this.columnОперации = new global::System.Data.DataColumn("Операции", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОперации);
                this.columnПоказания_спидометра = new global::System.Data.DataColumn("Показания спидометра", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПоказания_спидометра);
                this.columnДата_и_время_по_графику = new global::System.Data.DataColumn("Дата и время по графику", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_и_время_по_графику);
                this.columnДата_и_время_фактически = new global::System.Data.DataColumn("Дата и время фактически", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_и_время_фактически);
                this.columnНулевой_пробег = new global::System.Data.DataColumn("Нулевой пробег", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНулевой_пробег);
                this.columnВремя_работы_двигателя_час = new global::System.Data.DataColumn("Время работы двигателя час", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВремя_работы_двигателя_час);
                this.columnВремя_работы_спецоборудования = new global::System.Data.DataColumn("Время работы спецоборудования", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВремя_работы_спецоборудования);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_работа_водителя_и_авто}, true));
                this.columnID_работа_водителя_и_авто.AutoIncrement = true;
                this.columnID_работа_водителя_и_авто.AutoIncrementSeed = -1;
                this.columnID_работа_водителя_и_авто.AutoIncrementStep = -1;
                this.columnID_работа_водителя_и_авто.AllowDBNull = false;
                this.columnID_работа_водителя_и_авто.ReadOnly = true;
                this.columnID_работа_водителя_и_авто.Unique = true;
                this.columnОперации.AllowDBNull = false;
                this.columnОперации.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Работа_водителя_и_автомобиляRow NewРабота_водителя_и_автомобиляRow() {
                return ((Работа_водителя_и_автомобиляRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Работа_водителя_и_автомобиляRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Работа_водителя_и_автомобиляRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Работа_водителя_и_автомобиляRowChanged != null)) {
                    this.Работа_водителя_и_автомобиляRowChanged(this, new Работа_водителя_и_автомобиляRowChangeEvent(((Работа_водителя_и_автомобиляRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Работа_водителя_и_автомобиляRowChanging != null)) {
                    this.Работа_водителя_и_автомобиляRowChanging(this, new Работа_водителя_и_автомобиляRowChangeEvent(((Работа_водителя_и_автомобиляRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Работа_водителя_и_автомобиляRowDeleted != null)) {
                    this.Работа_водителя_и_автомобиляRowDeleted(this, new Работа_водителя_и_автомобиляRowChangeEvent(((Работа_водителя_и_автомобиляRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Работа_водителя_и_автомобиляRowDeleting != null)) {
                    this.Работа_водителя_и_автомобиляRowDeleting(this, new Работа_водителя_и_автомобиляRowChangeEvent(((Работа_водителя_и_автомобиляRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveРабота_водителя_и_автомобиляRow(Работа_водителя_и_автомобиляRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Путевые_листыDataSet ds = new Путевые_листыDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Работа_водителя_и_автомобиляDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_Данные_путевой_лист_легкового_автоDataTable : global::System.Data.TypedTableBase<View_Данные_путевой_лист_легкового_автоRow> {
            
            private global::System.Data.DataColumn columnЧисло;
            
            private global::System.Data.DataColumn columnВремя_выезда;
            
            private global::System.Data.DataColumn columnВремя_возвращения;
            
            private global::System.Data.DataColumn columnВремя_в_наряде;
            
            private global::System.Data.DataColumn columnПоказания_спидометра_при_выезде;
            
            private global::System.Data.DataColumn columnПоказания_спидометра_при_возращении;
            
            private global::System.Data.DataColumn columnПробег_км;
            
            private global::System.Data.DataColumn columnОстаток_топлива_при_выезде;
            
            private global::System.Data.DataColumn columnОстаток_топлива_при_возвращении;
            
            private global::System.Data.DataColumn columnЗаправлено_топливо_л;
            
            private global::System.Data.DataColumn columnДата_и_номер_чека_АЗС;
            
            private global::System.Data.DataColumn columnРасход_топлива_по_норме;
            
            private global::System.Data.DataColumn columnРасход_топлива_фактически;
            
            private global::System.Data.DataColumn columnРасход_топлива_экономия_перерасход;
            
            private global::System.Data.DataColumn columnАвтомобиль_технически_исправлен_выезд_разрешен_подпись_штамп_уполномоченного_лица;
            
            private global::System.Data.DataColumn columnАвтомобиль_технически_исправлен_прнял_подпись_водителя;
            
            private global::System.Data.DataColumn columnПри_возвращении_автомобиль_сдал_подпись_водителя;
            
            private global::System.Data.DataColumn columnПри_возвращении_автомобиль_принял_подпись_штамп_уполномоченного_лица;
            
            private global::System.Data.DataColumn columnВодитель_по_состоянию_здоровья_к_управлению_допущен_подпись_штамп_уполномоченного_лица;
            
            private global::System.Data.DataColumn columnПодпись_штамп_лица_ответственного_за_оформление_путевого_листа;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_Данные_путевой_лист_легкового_автоDataTable() {
                this.TableName = "View_Данные путевой лист легкового авто";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_Данные_путевой_лист_легкового_автоDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected View_Данные_путевой_лист_легкового_автоDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ЧислоColumn {
                get {
                    return this.columnЧисло;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Время_выездаColumn {
                get {
                    return this.columnВремя_выезда;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Время_возвращенияColumn {
                get {
                    return this.columnВремя_возвращения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Время_в_нарядеColumn {
                get {
                    return this.columnВремя_в_наряде;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Показания_спидометра_при_выездеColumn {
                get {
                    return this.columnПоказания_спидометра_при_выезде;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Показания_спидометра_при_возращенииColumn {
                get {
                    return this.columnПоказания_спидометра_при_возращении;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Пробег_кмColumn {
                get {
                    return this.columnПробег_км;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Остаток_топлива_при_выездеColumn {
                get {
                    return this.columnОстаток_топлива_при_выезде;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Остаток_топлива_при_возвращенииColumn {
                get {
                    return this.columnОстаток_топлива_при_возвращении;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Заправлено_топливо_лColumn {
                get {
                    return this.columnЗаправлено_топливо_л;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Дата_и_номер_чека_АЗСColumn {
                get {
                    return this.columnДата_и_номер_чека_АЗС;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Расход_топлива_по_нормеColumn {
                get {
                    return this.columnРасход_топлива_по_норме;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Расход_топлива_фактическиColumn {
                get {
                    return this.columnРасход_топлива_фактически;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Расход_топлива_экономия_перерасходColumn {
                get {
                    return this.columnРасход_топлива_экономия_перерасход;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Автомобиль_технически_исправлен_выезд_разрешен_подпись_штамп_уполномоченного_лицаColumn {
                get {
                    return this.columnАвтомобиль_технически_исправлен_выезд_разрешен_подпись_штамп_уполномоченного_лица;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Автомобиль_технически_исправлен_прнял_подпись_водителяColumn {
                get {
                    return this.columnАвтомобиль_технически_исправлен_прнял_подпись_водителя;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn При_возвращении_автомобиль_сдал_подпись_водителяColumn {
                get {
                    return this.columnПри_возвращении_автомобиль_сдал_подпись_водителя;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn При_возвращении_автомобиль_принял_подпись_штамп_уполномоченного_лицаColumn {
                get {
                    return this.columnПри_возвращении_автомобиль_принял_подпись_штамп_уполномоченного_лица;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Водитель_по_состоянию_здоровья_к_управлению_допущен_подпись_штамп_уполномоченного_лицаColumn {
                get {
                    return this.columnВодитель_по_состоянию_здоровья_к_управлению_допущен_подпись_штамп_уполномоченного_лица;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Подпись_штамп_лица_ответственного_за_оформление_путевого_листаColumn {
                get {
                    return this.columnПодпись_штамп_лица_ответственного_за_оформление_путевого_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_Данные_путевой_лист_легкового_автоRow this[int index] {
                get {
                    return ((View_Данные_путевой_лист_легкового_автоRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_Данные_путевой_лист_легкового_автоRowChangeEventHandler View_Данные_путевой_лист_легкового_автоRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_Данные_путевой_лист_легкового_автоRowChangeEventHandler View_Данные_путевой_лист_легкового_автоRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_Данные_путевой_лист_легкового_автоRowChangeEventHandler View_Данные_путевой_лист_легкового_автоRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_Данные_путевой_лист_легкового_автоRowChangeEventHandler View_Данные_путевой_лист_легкового_автоRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddView_Данные_путевой_лист_легкового_автоRow(View_Данные_путевой_лист_легкового_автоRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_Данные_путевой_лист_легкового_автоRow AddView_Данные_путевой_лист_легкового_автоRow(
                        string Число, 
                        System.TimeSpan Время_выезда, 
                        System.TimeSpan Время_возвращения, 
                        System.TimeSpan Время_в_наряде, 
                        int Показания_спидометра_при_выезде, 
                        int Показания_спидометра_при_возращении, 
                        string Пробег_км, 
                        double Остаток_топлива_при_выезде, 
                        double Остаток_топлива_при_возвращении, 
                        double Заправлено_топливо_л, 
                        string Дата_и_номер_чека_АЗС, 
                        double Расход_топлива_по_норме, 
                        double Расход_топлива_фактически, 
                        double Расход_топлива_экономия_перерасход, 
                        string Автомобиль_технически_исправлен_выезд_разрешен_подпись_штамп_уполномоченного_лица, 
                        string Автомобиль_технически_исправлен_прнял_подпись_водителя, 
                        string При_возвращении_автомобиль_сдал_подпись_водителя, 
                        string При_возвращении_автомобиль_принял_подпись_штамп_уполномоченного_лица, 
                        string Водитель_по_состоянию_здоровья_к_управлению_допущен_подпись_штамп_уполномоченного_лица, 
                        string Подпись_штамп_лица_ответственного_за_оформление_путевого_листа) {
                View_Данные_путевой_лист_легкового_автоRow rowView_Данные_путевой_лист_легкового_автоRow = ((View_Данные_путевой_лист_легкового_автоRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Число,
                        Время_выезда,
                        Время_возвращения,
                        Время_в_наряде,
                        Показания_спидометра_при_выезде,
                        Показания_спидометра_при_возращении,
                        Пробег_км,
                        Остаток_топлива_при_выезде,
                        Остаток_топлива_при_возвращении,
                        Заправлено_топливо_л,
                        Дата_и_номер_чека_АЗС,
                        Расход_топлива_по_норме,
                        Расход_топлива_фактически,
                        Расход_топлива_экономия_перерасход,
                        Автомобиль_технически_исправлен_выезд_разрешен_подпись_штамп_уполномоченного_лица,
                        Автомобиль_технически_исправлен_прнял_подпись_водителя,
                        При_возвращении_автомобиль_сдал_подпись_водителя,
                        При_возвращении_автомобиль_принял_подпись_штамп_уполномоченного_лица,
                        Водитель_по_состоянию_здоровья_к_управлению_допущен_подпись_штамп_уполномоченного_лица,
                        Подпись_штамп_лица_ответственного_за_оформление_путевого_листа};
                rowView_Данные_путевой_лист_легкового_автоRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_Данные_путевой_лист_легкового_автоRow);
                return rowView_Данные_путевой_лист_легкового_автоRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                View_Данные_путевой_лист_легкового_автоDataTable cln = ((View_Данные_путевой_лист_легкового_автоDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_Данные_путевой_лист_легкового_автоDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnЧисло = base.Columns["Число"];
                this.columnВремя_выезда = base.Columns["Время_выезда"];
                this.columnВремя_возвращения = base.Columns["Время_возвращения"];
                this.columnВремя_в_наряде = base.Columns["Время_в_наряде"];
                this.columnПоказания_спидометра_при_выезде = base.Columns["Показания_спидометра_при_выезде"];
                this.columnПоказания_спидометра_при_возращении = base.Columns["Показания_спидометра_при_возращении"];
                this.columnПробег_км = base.Columns["Пробег_км"];
                this.columnОстаток_топлива_при_выезде = base.Columns["Остаток_топлива_при_выезде"];
                this.columnОстаток_топлива_при_возвращении = base.Columns["Остаток_топлива_при_возвращении"];
                this.columnЗаправлено_топливо_л = base.Columns["Заправлено_топливо_л"];
                this.columnДата_и_номер_чека_АЗС = base.Columns["Дата_и_номер_чека_АЗС"];
                this.columnРасход_топлива_по_норме = base.Columns["Расход_топлива_по_норме"];
                this.columnРасход_топлива_фактически = base.Columns["Расход_топлива_фактически"];
                this.columnРасход_топлива_экономия_перерасход = base.Columns["Расход_топлива_экономия_перерасход"];
                this.columnАвтомобиль_технически_исправлен_выезд_разрешен_подпись_штамп_уполномоченного_лица = base.Columns["Автомобиль_технически_исправлен_выезд_разрешен_подпись_штамп_уполномоченного_лица" +
                    ""];
                this.columnАвтомобиль_технически_исправлен_прнял_подпись_водителя = base.Columns["Автомобиль_технически_исправлен_прнял_подпись_водителя"];
                this.columnПри_возвращении_автомобиль_сдал_подпись_водителя = base.Columns["При_возвращении_автомобиль_сдал_подпись_водителя"];
                this.columnПри_возвращении_автомобиль_принял_подпись_штамп_уполномоченного_лица = base.Columns["При_возвращении_автомобиль_принял_подпись_штамп_уполномоченного_лица"];
                this.columnВодитель_по_состоянию_здоровья_к_управлению_допущен_подпись_штамп_уполномоченного_лица = base.Columns["Водитель_по_состоянию_здоровья_к_управлению_допущен_подпись_штамп_уполномоченного" +
                    "_лица"];
                this.columnПодпись_штамп_лица_ответственного_за_оформление_путевого_листа = base.Columns["Подпись_штамп_лица_ответственного_за_оформление_путевого_листа"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnЧисло = new global::System.Data.DataColumn("Число", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЧисло);
                this.columnВремя_выезда = new global::System.Data.DataColumn("Время_выезда", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                this.columnВремя_выезда.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Время_выезда");
                this.columnВремя_выезда.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Время_выездаColumn");
                this.columnВремя_выезда.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnВремя_выезда");
                this.columnВремя_выезда.ExtendedProperties.Add("Generator_UserColumnName", "Время_выезда");
                base.Columns.Add(this.columnВремя_выезда);
                this.columnВремя_возвращения = new global::System.Data.DataColumn("Время_возвращения", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                this.columnВремя_возвращения.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Время_возвращения");
                this.columnВремя_возвращения.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Время_возвращенияColumn");
                this.columnВремя_возвращения.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnВремя_возвращения");
                this.columnВремя_возвращения.ExtendedProperties.Add("Generator_UserColumnName", "Время_возвращения");
                base.Columns.Add(this.columnВремя_возвращения);
                this.columnВремя_в_наряде = new global::System.Data.DataColumn("Время_в_наряде", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                this.columnВремя_в_наряде.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Время_в_наряде");
                this.columnВремя_в_наряде.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Время_в_нарядеColumn");
                this.columnВремя_в_наряде.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnВремя_в_наряде");
                this.columnВремя_в_наряде.ExtendedProperties.Add("Generator_UserColumnName", "Время_в_наряде");
                base.Columns.Add(this.columnВремя_в_наряде);
                this.columnПоказания_спидометра_при_выезде = new global::System.Data.DataColumn("Показания_спидометра_при_выезде", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnПоказания_спидометра_при_выезде.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Показания_спидометра_при_выезде");
                this.columnПоказания_спидометра_при_выезде.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Показания_спидометра_при_выездеColumn");
                this.columnПоказания_спидометра_при_выезде.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnПоказания_спидометра_при_выезде");
                this.columnПоказания_спидометра_при_выезде.ExtendedProperties.Add("Generator_UserColumnName", "Показания_спидометра_при_выезде");
                base.Columns.Add(this.columnПоказания_спидометра_при_выезде);
                this.columnПоказания_спидометра_при_возращении = new global::System.Data.DataColumn("Показания_спидометра_при_возращении", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПоказания_спидометра_при_возращении);
                this.columnПробег_км = new global::System.Data.DataColumn("Пробег_км", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnПробег_км.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Пробег_км");
                this.columnПробег_км.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Пробег_кмColumn");
                this.columnПробег_км.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnПробег_км");
                this.columnПробег_км.ExtendedProperties.Add("Generator_UserColumnName", "Пробег_км");
                base.Columns.Add(this.columnПробег_км);
                this.columnОстаток_топлива_при_выезде = new global::System.Data.DataColumn("Остаток_топлива_при_выезде", typeof(double), null, global::System.Data.MappingType.Element);
                this.columnОстаток_топлива_при_выезде.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Остаток_топлива_при_выезде");
                this.columnОстаток_топлива_при_выезде.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Остаток_топлива_при_выездеColumn");
                this.columnОстаток_топлива_при_выезде.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnОстаток_топлива_при_выезде");
                this.columnОстаток_топлива_при_выезде.ExtendedProperties.Add("Generator_UserColumnName", "Остаток_топлива_при_выезде");
                base.Columns.Add(this.columnОстаток_топлива_при_выезде);
                this.columnОстаток_топлива_при_возвращении = new global::System.Data.DataColumn("Остаток_топлива_при_возвращении", typeof(double), null, global::System.Data.MappingType.Element);
                this.columnОстаток_топлива_при_возвращении.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Остаток_топлива_при_возвращении");
                this.columnОстаток_топлива_при_возвращении.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Остаток_топлива_при_возвращенииColumn");
                this.columnОстаток_топлива_при_возвращении.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnОстаток_топлива_при_возвращении");
                this.columnОстаток_топлива_при_возвращении.ExtendedProperties.Add("Generator_UserColumnName", "Остаток_топлива_при_возвращении");
                base.Columns.Add(this.columnОстаток_топлива_при_возвращении);
                this.columnЗаправлено_топливо_л = new global::System.Data.DataColumn("Заправлено_топливо_л", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗаправлено_топливо_л);
                this.columnДата_и_номер_чека_АЗС = new global::System.Data.DataColumn("Дата_и_номер_чека_АЗС", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_и_номер_чека_АЗС);
                this.columnРасход_топлива_по_норме = new global::System.Data.DataColumn("Расход_топлива_по_норме", typeof(double), null, global::System.Data.MappingType.Element);
                this.columnРасход_топлива_по_норме.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Расход_топлива_по_норме");
                this.columnРасход_топлива_по_норме.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Расход_топлива_по_нормеColumn");
                this.columnРасход_топлива_по_норме.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnРасход_топлива_по_норме");
                this.columnРасход_топлива_по_норме.ExtendedProperties.Add("Generator_UserColumnName", "Расход_топлива_по_норме");
                base.Columns.Add(this.columnРасход_топлива_по_норме);
                this.columnРасход_топлива_фактически = new global::System.Data.DataColumn("Расход_топлива_фактически", typeof(double), null, global::System.Data.MappingType.Element);
                this.columnРасход_топлива_фактически.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Расход_топлива_фактически");
                this.columnРасход_топлива_фактически.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Расход_топлива_фактическиColumn");
                this.columnРасход_топлива_фактически.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnРасход_топлива_фактически");
                this.columnРасход_топлива_фактически.ExtendedProperties.Add("Generator_UserColumnName", "Расход_топлива_фактически");
                base.Columns.Add(this.columnРасход_топлива_фактически);
                this.columnРасход_топлива_экономия_перерасход = new global::System.Data.DataColumn("Расход_топлива_экономия_перерасход", typeof(double), null, global::System.Data.MappingType.Element);
                this.columnРасход_топлива_экономия_перерасход.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Расход_топлива_экономия_перерасход");
                this.columnРасход_топлива_экономия_перерасход.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Расход_топлива_экономия_перерасходColumn");
                this.columnРасход_топлива_экономия_перерасход.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnРасход_топлива_экономия_перерасход");
                this.columnРасход_топлива_экономия_перерасход.ExtendedProperties.Add("Generator_UserColumnName", "Расход_топлива_экономия_перерасход");
                base.Columns.Add(this.columnРасход_топлива_экономия_перерасход);
                this.columnАвтомобиль_технически_исправлен_выезд_разрешен_подпись_штамп_уполномоченного_лица = new global::System.Data.DataColumn("Автомобиль_технически_исправлен_выезд_разрешен_подпись_штамп_уполномоченного_лица" +
                        "", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnАвтомобиль_технически_исправлен_выезд_разрешен_подпись_штамп_уполномоченного_лица);
                this.columnАвтомобиль_технически_исправлен_прнял_подпись_водителя = new global::System.Data.DataColumn("Автомобиль_технически_исправлен_прнял_подпись_водителя", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnАвтомобиль_технически_исправлен_прнял_подпись_водителя);
                this.columnПри_возвращении_автомобиль_сдал_подпись_водителя = new global::System.Data.DataColumn("При_возвращении_автомобиль_сдал_подпись_водителя", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПри_возвращении_автомобиль_сдал_подпись_водителя);
                this.columnПри_возвращении_автомобиль_принял_подпись_штамп_уполномоченного_лица = new global::System.Data.DataColumn("При_возвращении_автомобиль_принял_подпись_штамп_уполномоченного_лица", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПри_возвращении_автомобиль_принял_подпись_штамп_уполномоченного_лица);
                this.columnВодитель_по_состоянию_здоровья_к_управлению_допущен_подпись_штамп_уполномоченного_лица = new global::System.Data.DataColumn("Водитель_по_состоянию_здоровья_к_управлению_допущен_подпись_штамп_уполномоченного" +
                        "_лица", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВодитель_по_состоянию_здоровья_к_управлению_допущен_подпись_штамп_уполномоченного_лица);
                this.columnПодпись_штамп_лица_ответственного_за_оформление_путевого_листа = new global::System.Data.DataColumn("Подпись_штамп_лица_ответственного_за_оформление_путевого_листа", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПодпись_штамп_лица_ответственного_за_оформление_путевого_листа);
                this.columnЧисло.AllowDBNull = false;
                this.columnЧисло.MaxLength = 50;
                this.columnВремя_выезда.AllowDBNull = false;
                this.columnВремя_возвращения.AllowDBNull = false;
                this.columnВремя_в_наряде.AllowDBNull = false;
                this.columnПоказания_спидометра_при_выезде.AllowDBNull = false;
                this.columnПоказания_спидометра_при_возращении.AllowDBNull = false;
                this.columnПробег_км.AllowDBNull = false;
                this.columnПробег_км.MaxLength = 50;
                this.columnОстаток_топлива_при_выезде.AllowDBNull = false;
                this.columnОстаток_топлива_при_возвращении.AllowDBNull = false;
                this.columnЗаправлено_топливо_л.AllowDBNull = false;
                this.columnДата_и_номер_чека_АЗС.MaxLength = 50;
                this.columnАвтомобиль_технически_исправлен_выезд_разрешен_подпись_штамп_уполномоченного_лица.ReadOnly = true;
                this.columnАвтомобиль_технически_исправлен_выезд_разрешен_подпись_штамп_уполномоченного_лица.MaxLength = 1;
                this.columnАвтомобиль_технически_исправлен_прнял_подпись_водителя.ReadOnly = true;
                this.columnАвтомобиль_технически_исправлен_прнял_подпись_водителя.MaxLength = 1;
                this.columnПри_возвращении_автомобиль_сдал_подпись_водителя.ReadOnly = true;
                this.columnПри_возвращении_автомобиль_сдал_подпись_водителя.MaxLength = 1;
                this.columnПри_возвращении_автомобиль_принял_подпись_штамп_уполномоченного_лица.ReadOnly = true;
                this.columnПри_возвращении_автомобиль_принял_подпись_штамп_уполномоченного_лица.MaxLength = 1;
                this.columnВодитель_по_состоянию_здоровья_к_управлению_допущен_подпись_штамп_уполномоченного_лица.ReadOnly = true;
                this.columnВодитель_по_состоянию_здоровья_к_управлению_допущен_подпись_штамп_уполномоченного_лица.MaxLength = 1;
                this.columnПодпись_штамп_лица_ответственного_за_оформление_путевого_листа.ReadOnly = true;
                this.columnПодпись_штамп_лица_ответственного_за_оформление_путевого_листа.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_Данные_путевой_лист_легкового_автоRow NewView_Данные_путевой_лист_легкового_автоRow() {
                return ((View_Данные_путевой_лист_легкового_автоRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_Данные_путевой_лист_легкового_автоRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(View_Данные_путевой_лист_легкового_автоRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_Данные_путевой_лист_легкового_автоRowChanged != null)) {
                    this.View_Данные_путевой_лист_легкового_автоRowChanged(this, new View_Данные_путевой_лист_легкового_автоRowChangeEvent(((View_Данные_путевой_лист_легкового_автоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_Данные_путевой_лист_легкового_автоRowChanging != null)) {
                    this.View_Данные_путевой_лист_легкового_автоRowChanging(this, new View_Данные_путевой_лист_легкового_автоRowChangeEvent(((View_Данные_путевой_лист_легкового_автоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_Данные_путевой_лист_легкового_автоRowDeleted != null)) {
                    this.View_Данные_путевой_лист_легкового_автоRowDeleted(this, new View_Данные_путевой_лист_легкового_автоRowChangeEvent(((View_Данные_путевой_лист_легкового_автоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_Данные_путевой_лист_легкового_автоRowDeleting != null)) {
                    this.View_Данные_путевой_лист_легкового_автоRowDeleting(this, new View_Данные_путевой_лист_легкового_автоRowChangeEvent(((View_Данные_путевой_лист_легкового_автоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveView_Данные_путевой_лист_легкового_автоRow(View_Данные_путевой_лист_легкового_автоRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Путевые_листыDataSet ds = new Путевые_листыDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_Данные_путевой_лист_легкового_автоDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_Работа_водителя_и_автомобиляDataTable : global::System.Data.TypedTableBase<View_Работа_водителя_и_автомобиляRow> {
            
            private global::System.Data.DataColumn columnОперации;
            
            private global::System.Data.DataColumn columnПоказания_спидометра;
            
            private global::System.Data.DataColumn columnДата_и_время_по_графику;
            
            private global::System.Data.DataColumn columnДата_и_время_фактически;
            
            private global::System.Data.DataColumn columnНулевой_пробег;
            
            private global::System.Data.DataColumn columnВремя_работы_двигателя_час;
            
            private global::System.Data.DataColumn columnВремя_работы_спецоборудования;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_Работа_водителя_и_автомобиляDataTable() {
                this.TableName = "View_Работа водителя и автомобиля";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_Работа_водителя_и_автомобиляDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected View_Работа_водителя_и_автомобиляDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ОперацииColumn {
                get {
                    return this.columnОперации;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Показания_спидометраColumn {
                get {
                    return this.columnПоказания_спидометра;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Дата_и_время_по_графикуColumn {
                get {
                    return this.columnДата_и_время_по_графику;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Дата_и_время_фактическиColumn {
                get {
                    return this.columnДата_и_время_фактически;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Нулевой_пробегColumn {
                get {
                    return this.columnНулевой_пробег;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Время_работы_двигателя_часColumn {
                get {
                    return this.columnВремя_работы_двигателя_час;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Время_работы_спецоборудованияColumn {
                get {
                    return this.columnВремя_работы_спецоборудования;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_Работа_водителя_и_автомобиляRow this[int index] {
                get {
                    return ((View_Работа_водителя_и_автомобиляRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_Работа_водителя_и_автомобиляRowChangeEventHandler View_Работа_водителя_и_автомобиляRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_Работа_водителя_и_автомобиляRowChangeEventHandler View_Работа_водителя_и_автомобиляRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_Работа_водителя_и_автомобиляRowChangeEventHandler View_Работа_водителя_и_автомобиляRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_Работа_водителя_и_автомобиляRowChangeEventHandler View_Работа_водителя_и_автомобиляRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddView_Работа_водителя_и_автомобиляRow(View_Работа_водителя_и_автомобиляRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_Работа_водителя_и_автомобиляRow AddView_Работа_водителя_и_автомобиляRow(string Операции, int Показания_спидометра, System.DateTime Дата_и_время_по_графику, System.DateTime Дата_и_время_фактически, int Нулевой_пробег, int Время_работы_двигателя_час, int Время_работы_спецоборудования) {
                View_Работа_водителя_и_автомобиляRow rowView_Работа_водителя_и_автомобиляRow = ((View_Работа_водителя_и_автомобиляRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Операции,
                        Показания_спидометра,
                        Дата_и_время_по_графику,
                        Дата_и_время_фактически,
                        Нулевой_пробег,
                        Время_работы_двигателя_час,
                        Время_работы_спецоборудования};
                rowView_Работа_водителя_и_автомобиляRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_Работа_водителя_и_автомобиляRow);
                return rowView_Работа_водителя_и_автомобиляRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                View_Работа_водителя_и_автомобиляDataTable cln = ((View_Работа_водителя_и_автомобиляDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_Работа_водителя_и_автомобиляDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnОперации = base.Columns["Операции"];
                this.columnПоказания_спидометра = base.Columns["Показания_спидометра"];
                this.columnДата_и_время_по_графику = base.Columns["Дата_и_время_по_графику"];
                this.columnДата_и_время_фактически = base.Columns["Дата_и_время_фактически"];
                this.columnНулевой_пробег = base.Columns["Нулевой_пробег"];
                this.columnВремя_работы_двигателя_час = base.Columns["Время_работы_двигателя_час"];
                this.columnВремя_работы_спецоборудования = base.Columns["Время_работы_спецоборудования"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnОперации = new global::System.Data.DataColumn("Операции", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОперации);
                this.columnПоказания_спидометра = new global::System.Data.DataColumn("Показания_спидометра", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnПоказания_спидометра.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Показания_спидометра");
                this.columnПоказания_спидометра.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Показания_спидометраColumn");
                this.columnПоказания_спидометра.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnПоказания_спидометра");
                this.columnПоказания_спидометра.ExtendedProperties.Add("Generator_UserColumnName", "Показания_спидометра");
                base.Columns.Add(this.columnПоказания_спидометра);
                this.columnДата_и_время_по_графику = new global::System.Data.DataColumn("Дата_и_время_по_графику", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                this.columnДата_и_время_по_графику.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Дата_и_время_по_графику");
                this.columnДата_и_время_по_графику.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Дата_и_время_по_графикуColumn");
                this.columnДата_и_время_по_графику.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnДата_и_время_по_графику");
                this.columnДата_и_время_по_графику.ExtendedProperties.Add("Generator_UserColumnName", "Дата_и_время_по_графику");
                base.Columns.Add(this.columnДата_и_время_по_графику);
                this.columnДата_и_время_фактически = new global::System.Data.DataColumn("Дата_и_время_фактически", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                this.columnДата_и_время_фактически.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Дата_и_время_фактически");
                this.columnДата_и_время_фактически.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Дата_и_время_фактическиColumn");
                this.columnДата_и_время_фактически.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnДата_и_время_фактически");
                this.columnДата_и_время_фактически.ExtendedProperties.Add("Generator_UserColumnName", "Дата_и_время_фактически");
                base.Columns.Add(this.columnДата_и_время_фактически);
                this.columnНулевой_пробег = new global::System.Data.DataColumn("Нулевой_пробег", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnНулевой_пробег.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Нулевой_пробег");
                this.columnНулевой_пробег.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Нулевой_пробегColumn");
                this.columnНулевой_пробег.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnНулевой_пробег");
                this.columnНулевой_пробег.ExtendedProperties.Add("Generator_UserColumnName", "Нулевой_пробег");
                base.Columns.Add(this.columnНулевой_пробег);
                this.columnВремя_работы_двигателя_час = new global::System.Data.DataColumn("Время_работы_двигателя_час", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnВремя_работы_двигателя_час.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Время_работы_двигателя_час");
                this.columnВремя_работы_двигателя_час.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Время_работы_двигателя_часColumn");
                this.columnВремя_работы_двигателя_час.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnВремя_работы_двигателя_час");
                this.columnВремя_работы_двигателя_час.ExtendedProperties.Add("Generator_UserColumnName", "Время_работы_двигателя_час");
                base.Columns.Add(this.columnВремя_работы_двигателя_час);
                this.columnВремя_работы_спецоборудования = new global::System.Data.DataColumn("Время_работы_спецоборудования", typeof(int), null, global::System.Data.MappingType.Element);
                this.columnВремя_работы_спецоборудования.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Время_работы_спецоборудования");
                this.columnВремя_работы_спецоборудования.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Время_работы_спецоборудованияColumn");
                this.columnВремя_работы_спецоборудования.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnВремя_работы_спецоборудования");
                this.columnВремя_работы_спецоборудования.ExtendedProperties.Add("Generator_UserColumnName", "Время_работы_спецоборудования");
                base.Columns.Add(this.columnВремя_работы_спецоборудования);
                this.columnОперации.AllowDBNull = false;
                this.columnОперации.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_Работа_водителя_и_автомобиляRow NewView_Работа_водителя_и_автомобиляRow() {
                return ((View_Работа_водителя_и_автомобиляRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_Работа_водителя_и_автомобиляRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(View_Работа_водителя_и_автомобиляRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_Работа_водителя_и_автомобиляRowChanged != null)) {
                    this.View_Работа_водителя_и_автомобиляRowChanged(this, new View_Работа_водителя_и_автомобиляRowChangeEvent(((View_Работа_водителя_и_автомобиляRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_Работа_водителя_и_автомобиляRowChanging != null)) {
                    this.View_Работа_водителя_и_автомобиляRowChanging(this, new View_Работа_водителя_и_автомобиляRowChangeEvent(((View_Работа_водителя_и_автомобиляRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_Работа_водителя_и_автомобиляRowDeleted != null)) {
                    this.View_Работа_водителя_и_автомобиляRowDeleted(this, new View_Работа_водителя_и_автомобиляRowChangeEvent(((View_Работа_водителя_и_автомобиляRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_Работа_водителя_и_автомобиляRowDeleting != null)) {
                    this.View_Работа_водителя_и_автомобиляRowDeleting(this, new View_Работа_водителя_и_автомобиляRowChangeEvent(((View_Работа_водителя_и_автомобиляRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveView_Работа_водителя_и_автомобиляRow(View_Работа_водителя_и_автомобиляRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Путевые_листыDataSet ds = new Путевые_листыDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_Работа_водителя_и_автомобиляDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Водители_автоRow : global::System.Data.DataRow {
            
            private Водители_автоDataTable tableВодители_авто;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Водители_автоRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableВодители_авто = ((Водители_автоDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableВодители_авто.IDColumn]));
                }
                set {
                    this[this.tableВодители_авто.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Водитель {
                get {
                    return ((int)(this[this.tableВодители_авто.ID_ВодительColumn]));
                }
                set {
                    this[this.tableВодители_авто.ID_ВодительColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Авто {
                get {
                    return ((int)(this[this.tableВодители_авто.ID_АвтоColumn]));
                }
                set {
                    this[this.tableВодители_авто.ID_АвтоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Подвижной_составRow Подвижной_составRow {
                get {
                    return ((Подвижной_составRow)(this.GetParentRow(this.Table.ParentRelations["FK_Водители авто_id_авто"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Водители авто_id_авто"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Личный_составRow Личный_составRow {
                get {
                    return ((Личный_составRow)(this.GetParentRow(this.Table.ParentRelations["FK_Водители авто_id_водитель"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Водители авто_id_водитель"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Данные_Путевой_лист_легкового_автоRow : global::System.Data.DataRow {
            
            private Данные_Путевой_лист_легкового_автоDataTable tableДанные_Путевой_лист_легкового_авто;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Данные_Путевой_лист_легкового_автоRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableДанные_Путевой_лист_легкового_авто = ((Данные_Путевой_лист_легкового_автоDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id_Данных {
                get {
                    return ((int)(this[this.tableДанные_Путевой_лист_легкового_авто.id_ДанныхColumn]));
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.id_ДанныхColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Путевого_листа {
                get {
                    try {
                        return ((int)(this[this.tableДанные_Путевой_лист_легкового_авто.ID_Путевого_листаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ID_Путевого листа\' в таблице \'Данные Путевой лист легкового" +
                                " авто\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.ID_Путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Число {
                get {
                    return ((string)(this[this.tableДанные_Путевой_лист_легкового_авто.ЧислоColumn]));
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.ЧислоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan Время_выезда {
                get {
                    return ((global::System.TimeSpan)(this[this.tableДанные_Путевой_лист_легкового_авто.Время_выездаColumn]));
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Время_выездаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan Время_возвращения {
                get {
                    return ((global::System.TimeSpan)(this[this.tableДанные_Путевой_лист_легкового_авто.Время_возвращенияColumn]));
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Время_возвращенияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan Время_в_наряде {
                get {
                    return ((global::System.TimeSpan)(this[this.tableДанные_Путевой_лист_легкового_авто.Время_в_нарядеColumn]));
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Время_в_нарядеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Показания_спидометра_при_выезде {
                get {
                    return ((int)(this[this.tableДанные_Путевой_лист_легкового_авто.Показания_спидометра_при_выездеColumn]));
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Показания_спидометра_при_выездеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Показания_спидометра_при_возвращении {
                get {
                    return ((int)(this[this.tableДанные_Путевой_лист_легкового_авто.Показания_спидометра_при_возвращенииColumn]));
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Показания_спидометра_при_возвращенииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Пробег_км {
                get {
                    return ((string)(this[this.tableДанные_Путевой_лист_легкового_авто.Пробег_кмColumn]));
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Пробег_кмColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Остаток_топлива_при_выезде {
                get {
                    return ((double)(this[this.tableДанные_Путевой_лист_легкового_авто.Остаток_топлива_при_выездеColumn]));
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Остаток_топлива_при_выездеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Остаток_топлива_при_возвращении {
                get {
                    return ((double)(this[this.tableДанные_Путевой_лист_легкового_авто.Остаток_топлива_при_возвращенииColumn]));
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Остаток_топлива_при_возвращенииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Заправлено_топлива_л {
                get {
                    return ((double)(this[this.tableДанные_Путевой_лист_легкового_авто.Заправлено_топлива_лColumn]));
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Заправлено_топлива_лColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string _Дата_и___чека_АЗС {
                get {
                    try {
                        return ((string)(this[this.tableДанные_Путевой_лист_легкового_авто._Дата_и___чека_АЗСColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Дата и № чека АЗС\' в таблице \'Данные Путевой лист легкового" +
                                " авто\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто._Дата_и___чека_АЗСColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Расход_топлива_по_норме {
                get {
                    try {
                        return ((double)(this[this.tableДанные_Путевой_лист_легкового_авто.Расход_топлива_по_нормеColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Расход топлива по норме\' в таблице \'Данные Путевой лист лег" +
                                "кового авто\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Расход_топлива_по_нормеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Расход_топлива_фактически {
                get {
                    try {
                        return ((double)(this[this.tableДанные_Путевой_лист_легкового_авто.Расход_топлива_фактическиColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Расход топлива фактически\' в таблице \'Данные Путевой лист л" +
                                "егкового авто\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Расход_топлива_фактическиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Расход_топлива_экономия_перерасход {
                get {
                    try {
                        return ((double)(this[this.tableДанные_Путевой_лист_легкового_авто.Расход_топлива_экономия_перерасходColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Расход топлива экономия перерасход\' в таблице \'Данные Путев" +
                                "ой лист легкового авто\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДанные_Путевой_лист_легкового_авто.Расход_топлива_экономия_перерасходColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_легкового_автомобиляRow Путевой_лист_легкового_автомобиляRow {
                get {
                    return ((Путевой_лист_легкового_автомобиляRow)(this.GetParentRow(this.Table.ParentRelations["FK_Данные Путевой лист легкового авто_Путевой лист легкового автомобиля"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Данные Путевой лист легкового авто_Путевой лист легкового автомобиля"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsID_Путевого_листаNull() {
                return this.IsNull(this.tableДанные_Путевой_лист_легкового_авто.ID_Путевого_листаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetID_Путевого_листаNull() {
                this[this.tableДанные_Путевой_лист_легкового_авто.ID_Путевого_листаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_Дата_и___чека_АЗСNull() {
                return this.IsNull(this.tableДанные_Путевой_лист_легкового_авто._Дата_и___чека_АЗСColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_Дата_и___чека_АЗСNull() {
                this[this.tableДанные_Путевой_лист_легкового_авто._Дата_и___чека_АЗСColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsРасход_топлива_по_нормеNull() {
                return this.IsNull(this.tableДанные_Путевой_лист_легкового_авто.Расход_топлива_по_нормеColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetРасход_топлива_по_нормеNull() {
                this[this.tableДанные_Путевой_лист_легкового_авто.Расход_топлива_по_нормеColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsРасход_топлива_фактическиNull() {
                return this.IsNull(this.tableДанные_Путевой_лист_легкового_авто.Расход_топлива_фактическиColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetРасход_топлива_фактическиNull() {
                this[this.tableДанные_Путевой_лист_легкового_авто.Расход_топлива_фактическиColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsРасход_топлива_экономия_перерасходNull() {
                return this.IsNull(this.tableДанные_Путевой_лист_легкового_авто.Расход_топлива_экономия_перерасходColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetРасход_топлива_экономия_перерасходNull() {
                this[this.tableДанные_Путевой_лист_легкового_авто.Расход_топлива_экономия_перерасходColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Движение_ТСМRow : global::System.Data.DataRow {
            
            private Движение_ТСМDataTable tableДвижение_ТСМ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Движение_ТСМRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableДвижение_ТСМ = ((Движение_ТСМDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Движение_ТМЦ {
                get {
                    return ((int)(this[this.tableДвижение_ТСМ.ID_Движение_ТМЦColumn]));
                }
                set {
                    this[this.tableДвижение_ТСМ.ID_Движение_ТМЦColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Путевого_листа {
                get {
                    return ((int)(this[this.tableДвижение_ТСМ.ID_Путевого_листаColumn]));
                }
                set {
                    this[this.tableДвижение_ТСМ.ID_Путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Остаток_ТСМ_при_выезде {
                get {
                    return ((string)(this[this.tableДвижение_ТСМ.Остаток_ТСМ_при_выездеColumn]));
                }
                set {
                    this[this.tableДвижение_ТСМ.Остаток_ТСМ_при_выездеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Остаток_ТСМ_при_возвращении {
                get {
                    try {
                        return ((string)(this[this.tableДвижение_ТСМ.Остаток_ТСМ_при_возвращенииColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Остаток ТСМ при возвращении\' в таблице \'Движение ТСМ\' равно" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableДвижение_ТСМ.Остаток_ТСМ_при_возвращенииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоRow Путевой_лист_Грузового_автоRow {
                get {
                    return ((Путевой_лист_Грузового_автоRow)(this.GetParentRow(this.Table.ParentRelations["FK_Движение ТСМ_Путевой лист Грузового авто"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Движение ТСМ_Путевой лист Грузового авто"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsОстаток_ТСМ_при_возвращенииNull() {
                return this.IsNull(this.tableДвижение_ТСМ.Остаток_ТСМ_при_возвращенииColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetОстаток_ТСМ_при_возвращенииNull() {
                this[this.tableДвижение_ТСМ.Остаток_ТСМ_при_возвращенииColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Задание_водителюRow : global::System.Data.DataRow {
            
            private Задание_водителюDataTable tableЗадание_водителю;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Задание_водителюRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableЗадание_водителю = ((Задание_водителюDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tableЗадание_водителю.idColumn]));
                }
                set {
                    this[this.tableЗадание_водителю.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Путевого_листа {
                get {
                    return ((int)(this[this.tableЗадание_водителю.ID_Путевого_листаColumn]));
                }
                set {
                    this[this.tableЗадание_водителю.ID_Путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Заказчик {
                get {
                    try {
                        return ((string)(this[this.tableЗадание_водителю.ЗаказчикColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Заказчик\' в таблице \'Задание водителю\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗадание_водителю.ЗаказчикColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Дата_и_время_прибытия {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableЗадание_водителю.Дата_и_время_прибытияColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Дата и время прибытия\' в таблице \'Задание водителю\' равно D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableЗадание_водителю.Дата_и_время_прибытияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Дата_и_время_убытия {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableЗадание_водителю.Дата_и_время_убытияColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Дата и время убытия\' в таблице \'Задание водителю\' равно DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableЗадание_водителю.Дата_и_время_убытияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Пункт_отправления {
                get {
                    try {
                        return ((string)(this[this.tableЗадание_водителю.Пункт_отправленияColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Пункт отправления\' в таблице \'Задание водителю\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableЗадание_водителю.Пункт_отправленияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Пункт_назначения {
                get {
                    try {
                        return ((string)(this[this.tableЗадание_водителю.Пункт_назначенияColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Пункт назначения\' в таблице \'Задание водителю\' равно DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableЗадание_водителю.Пункт_назначенияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Расстояние_км {
                get {
                    try {
                        return ((double)(this[this.tableЗадание_водителю.Расстояние_кмColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Расстояние км\' в таблице \'Задание водителю\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗадание_водителю.Расстояние_кмColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Наименование_груза {
                get {
                    try {
                        return ((string)(this[this.tableЗадание_водителю.Наименование_грузаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Наименование груза\' в таблице \'Задание водителю\' равно DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableЗадание_водителю.Наименование_грузаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Вес_груза_т {
                get {
                    try {
                        return ((double)(this[this.tableЗадание_водителю.Вес_груза_тColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Вес груза т\' в таблице \'Задание водителю\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗадание_водителю.Вес_груза_тColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Количество_поездок_с_грузом_час {
                get {
                    try {
                        return ((int)(this[this.tableЗадание_водителю.Количество_поездок_с_грузом_часColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Количество поездок с грузом час\' в таблице \'Задание водител" +
                                "ю\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗадание_водителю.Количество_поездок_с_грузом_часColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоRow Путевой_лист_Грузового_автоRow {
                get {
                    return ((Путевой_лист_Грузового_автоRow)(this.GetParentRow(this.Table.ParentRelations["FK_Задание водителю_Путевой лист Грузового авто"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Задание водителю_Путевой лист Грузового авто"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsЗаказчикNull() {
                return this.IsNull(this.tableЗадание_водителю.ЗаказчикColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetЗаказчикNull() {
                this[this.tableЗадание_водителю.ЗаказчикColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsДата_и_время_прибытияNull() {
                return this.IsNull(this.tableЗадание_водителю.Дата_и_время_прибытияColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetДата_и_время_прибытияNull() {
                this[this.tableЗадание_водителю.Дата_и_время_прибытияColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsДата_и_время_убытияNull() {
                return this.IsNull(this.tableЗадание_водителю.Дата_и_время_убытияColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetДата_и_время_убытияNull() {
                this[this.tableЗадание_водителю.Дата_и_время_убытияColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsПункт_отправленияNull() {
                return this.IsNull(this.tableЗадание_водителю.Пункт_отправленияColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetПункт_отправленияNull() {
                this[this.tableЗадание_водителю.Пункт_отправленияColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsПункт_назначенияNull() {
                return this.IsNull(this.tableЗадание_водителю.Пункт_назначенияColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetПункт_назначенияNull() {
                this[this.tableЗадание_водителю.Пункт_назначенияColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsРасстояние_кмNull() {
                return this.IsNull(this.tableЗадание_водителю.Расстояние_кмColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetРасстояние_кмNull() {
                this[this.tableЗадание_водителю.Расстояние_кмColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsНаименование_грузаNull() {
                return this.IsNull(this.tableЗадание_водителю.Наименование_грузаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetНаименование_грузаNull() {
                this[this.tableЗадание_водителю.Наименование_грузаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsВес_груза_тNull() {
                return this.IsNull(this.tableЗадание_водителю.Вес_груза_тColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetВес_груза_тNull() {
                this[this.tableЗадание_водителю.Вес_груза_тColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsКоличество_поездок_с_грузом_часNull() {
                return this.IsNull(this.tableЗадание_водителю.Количество_поездок_с_грузом_часColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetКоличество_поездок_с_грузом_часNull() {
                this[this.tableЗадание_водителю.Количество_поездок_с_грузом_часColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Заправка_ТСМRow : global::System.Data.DataRow {
            
            private Заправка_ТСМDataTable tableЗаправка_ТСМ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Заправка_ТСМRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableЗаправка_ТСМ = ((Заправка_ТСМDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Заправка_ТСМ {
                get {
                    return ((int)(this[this.tableЗаправка_ТСМ.ID_Заправка_ТСМColumn]));
                }
                set {
                    this[this.tableЗаправка_ТСМ.ID_Заправка_ТСМColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Дата {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableЗаправка_ТСМ.ДатаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Дата\' в таблице \'Заправка ТСМ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаправка_ТСМ.ДатаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Марка_ТСМ {
                get {
                    try {
                        return ((string)(this[this.tableЗаправка_ТСМ.Марка_ТСМColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Марка ТСМ\' в таблице \'Заправка ТСМ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаправка_ТСМ.Марка_ТСМColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Количество {
                get {
                    try {
                        return ((double)(this[this.tableЗаправка_ТСМ.КоличествоColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Количество\' в таблице \'Заправка ТСМ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаправка_ТСМ.КоличествоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Путевого_листа {
                get {
                    try {
                        return ((int)(this[this.tableЗаправка_ТСМ.ID_Путевого_листаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ID_Путевого листа\' в таблице \'Заправка ТСМ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаправка_ТСМ.ID_Путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsДатаNull() {
                return this.IsNull(this.tableЗаправка_ТСМ.ДатаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetДатаNull() {
                this[this.tableЗаправка_ТСМ.ДатаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsМарка_ТСМNull() {
                return this.IsNull(this.tableЗаправка_ТСМ.Марка_ТСМColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetМарка_ТСМNull() {
                this[this.tableЗаправка_ТСМ.Марка_ТСМColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsКоличествоNull() {
                return this.IsNull(this.tableЗаправка_ТСМ.КоличествоColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetКоличествоNull() {
                this[this.tableЗаправка_ТСМ.КоличествоColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsID_Путевого_листаNull() {
                return this.IsNull(this.tableЗаправка_ТСМ.ID_Путевого_листаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetID_Путевого_листаNull() {
                this[this.tableЗаправка_ТСМ.ID_Путевого_листаColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Личный_составRow : global::System.Data.DataRow {
            
            private Личный_составDataTable tableЛичный_состав;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Личный_составRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableЛичный_состав = ((Личный_составDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int табельный__номер {
                get {
                    return ((int)(this[this.tableЛичный_состав.табельный__номерColumn]));
                }
                set {
                    this[this.tableЛичный_состав.табельный__номерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ФИО {
                get {
                    return ((string)(this[this.tableЛичный_состав.ФИОColumn]));
                }
                set {
                    this[this.tableЛичный_состав.ФИОColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string серия_водительского_удостоверения {
                get {
                    return ((string)(this[this.tableЛичный_состав.серия_водительского_удостоверенияColumn]));
                }
                set {
                    this[this.tableЛичный_состав.серия_водительского_удостоверенияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int номер_водительского_удостоверения {
                get {
                    return ((int)(this[this.tableЛичный_состав.номер_водительского_удостоверенияColumn]));
                }
                set {
                    this[this.tableЛичный_состав.номер_водительского_удостоверенияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int классность {
                get {
                    return ((int)(this[this.tableЛичный_состав.классностьColumn]));
                }
                set {
                    this[this.tableЛичный_состав.классностьColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime срок_действия_мед__справки {
                get {
                    return ((global::System.DateTime)(this[this.tableЛичный_состав.срок_действия_мед__справкиColumn]));
                }
                set {
                    this[this.tableЛичный_состав.срок_действия_мед__справкиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Водители_автоRow[] GetВодители_автоRows() {
                if ((this.Table.ChildRelations["FK_Водители авто_id_водитель"] == null)) {
                    return new Водители_автоRow[0];
                }
                else {
                    return ((Водители_автоRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Водители авто_id_водитель"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоRow[] GetПутевой_лист_Грузового_автоRows() {
                if ((this.Table.ChildRelations["FK_Путевой лист Грузового авто_личный состав"] == null)) {
                    return new Путевой_лист_Грузового_автоRow[0];
                }
                else {
                    return ((Путевой_лист_Грузового_автоRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Путевой лист Грузового авто_личный состав"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_легкового_автомобиляRow[] GetПутевой_лист_легкового_автомобиляRows() {
                if ((this.Table.ChildRelations["FK_Путевой лист легкового автомобиля_личный состав"] == null)) {
                    return new Путевой_лист_легкового_автомобиляRow[0];
                }
                else {
                    return ((Путевой_лист_легкового_автомобиляRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Путевой лист легкового автомобиля_личный состав"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class _Нормы_расхода_ГСМ_на_авто_тракторыRow : global::System.Data.DataRow {
            
            private _Нормы_расхода_ГСМ_на_авто_тракторыDataTable _tableНормы_расхода_ГСМ_на_авто_тракторы;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal _Нормы_расхода_ГСМ_на_авто_тракторыRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this._tableНормы_расхода_ГСМ_на_авто_тракторы = ((_Нормы_расхода_ГСМ_на_авто_тракторыDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.IDColumn]));
                }
                set {
                    this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Марка_автомобиля {
                get {
                    return ((string)(this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.Марка_автомобиляColumn]));
                }
                set {
                    this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.Марка_автомобиляColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Вид_топлива {
                get {
                    try {
                        return ((string)(this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.Вид_топливаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Вид топлива\' в таблице \'Нормы расхода ГСМ на авто,тракторы\'" +
                                " равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.Вид_топливаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double _Норма_расхода_на_100_км_летняя_6_ {
                get {
                    try {
                        return ((double)(this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Норма_расхода_на_100_км_летняя_6_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Норма расхода на 100 км летняя 6%\' в таблице \'Нормы расхода" +
                                " ГСМ на авто,тракторы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Норма_расхода_на_100_км_летняя_6_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Марка_двигателя {
                get {
                    try {
                        return ((string)(this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.Марка_двигателяColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Марка двигателя\' в таблице \'Нормы расхода ГСМ на авто,тракт" +
                                "оры\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.Марка_двигателяColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Норма_на_машино_час_летняя {
                get {
                    try {
                        return ((double)(this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.Норма_на_машино_час_летняяColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Норма на машино час летняя\' в таблице \'Нормы расхода ГСМ на" +
                                " авто,тракторы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.Норма_на_машино_час_летняяColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double _Н_ма_расх_масел_на_100л_р_да_топлива_моторное_л {
                get {
                    try {
                        return ((double)(this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_топлива_моторное_лColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Н-ма расх_масел на 100л р-да топлива моторное,л\' в таблице " +
                                "\'Нормы расхода ГСМ на авто,тракторы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_топлива_моторное_лColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double _Н_ма_расх_масел_на_100л_р_да_трансмиссионное_л {
                get {
                    try {
                        return ((double)(this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_трансмиссионное_лColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Н-ма расх_масел на 100л р-да трансмиссионное,л\' в таблице \'" +
                                "Нормы расхода ГСМ на авто,тракторы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_трансмиссионное_лColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double _Н_ма_расх_масел_на_100л_р_да_топлива_специальное_л {
                get {
                    try {
                        return ((double)(this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_топлива_специальное_лColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Н-ма расх_масел на 100л р-да топлива специальное,л\' в табли" +
                                "це \'Нормы расхода ГСМ на авто,тракторы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_топлива_специальное_лColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double _Н_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_л {
                get {
                    try {
                        return ((double)(this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_лColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Н-ма расх_масел на 100л р-да топлива пластичные смазки,л\' в" +
                                " таблице \'Нормы расхода ГСМ на авто,тракторы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_лColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsВид_топливаNull() {
                return this.IsNull(this._tableНормы_расхода_ГСМ_на_авто_тракторы.Вид_топливаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetВид_топливаNull() {
                this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.Вид_топливаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_Норма_расхода_на_100_км_летняя_6_Null() {
                return this.IsNull(this._tableНормы_расхода_ГСМ_на_авто_тракторы._Норма_расхода_на_100_км_летняя_6_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_Норма_расхода_на_100_км_летняя_6_Null() {
                this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Норма_расхода_на_100_км_летняя_6_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsМарка_двигателяNull() {
                return this.IsNull(this._tableНормы_расхода_ГСМ_на_авто_тракторы.Марка_двигателяColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetМарка_двигателяNull() {
                this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.Марка_двигателяColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsНорма_на_машино_час_летняяNull() {
                return this.IsNull(this._tableНормы_расхода_ГСМ_на_авто_тракторы.Норма_на_машино_час_летняяColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetНорма_на_машино_час_летняяNull() {
                this[this._tableНормы_расхода_ГСМ_на_авто_тракторы.Норма_на_машино_час_летняяColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_Н_ма_расх_масел_на_100л_р_да_топлива_моторное_лNull() {
                return this.IsNull(this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_топлива_моторное_лColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_Н_ма_расх_масел_на_100л_р_да_топлива_моторное_лNull() {
                this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_топлива_моторное_лColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_Н_ма_расх_масел_на_100л_р_да_трансмиссионное_лNull() {
                return this.IsNull(this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_трансмиссионное_лColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_Н_ма_расх_масел_на_100л_р_да_трансмиссионное_лNull() {
                this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_трансмиссионное_лColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_Н_ма_расх_масел_на_100л_р_да_топлива_специальное_лNull() {
                return this.IsNull(this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_топлива_специальное_лColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_Н_ма_расх_масел_на_100л_р_да_топлива_специальное_лNull() {
                this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_топлива_специальное_лColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_Н_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_лNull() {
                return this.IsNull(this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_лColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_Н_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_лNull() {
                this[this._tableНормы_расхода_ГСМ_на_авто_тракторы._Н_ма_расх_масел_на_100л_р_да_топлива_пластичные_смазки_лColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Подвижной_составRow : global::System.Data.DataRow {
            
            private Подвижной_составDataTable tableПодвижной_состав;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Подвижной_составRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableПодвижной_состав = ((Подвижной_составDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableПодвижной_состав.IDColumn]));
                }
                set {
                    this[this.tableПодвижной_состав.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Марка_и_модель {
                get {
                    return ((string)(this[this.tableПодвижной_состав.Марка_и_модельColumn]));
                }
                set {
                    this[this.tableПодвижной_состав.Марка_и_модельColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Гос_номер {
                get {
                    return ((string)(this[this.tableПодвижной_состав.Гос_номерColumn]));
                }
                set {
                    this[this.tableПодвижной_состав.Гос_номерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Гаражный_номер {
                get {
                    try {
                        return ((string)(this[this.tableПодвижной_состав.Гаражный_номерColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Гаражный номер\' в таблице \'Подвижной состав\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПодвижной_состав.Гаражный_номерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Тип_двигателя {
                get {
                    try {
                        return ((string)(this[this.tableПодвижной_состав.Тип_двигателяColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Тип двигателя\' в таблице \'Подвижной состав\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПодвижной_состав.Тип_двигателяColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Год_выпуска {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableПодвижной_состав.Год_выпускаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Год выпуска\' в таблице \'Подвижной состав\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПодвижной_состав.Год_выпускаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Инвентарный_номер {
                get {
                    try {
                        return ((string)(this[this.tableПодвижной_состав.Инвентарный_номерColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Инвентарный номер\' в таблице \'Подвижной состав\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableПодвижной_состав.Инвентарный_номерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Вид_топлива {
                get {
                    try {
                        return ((string)(this[this.tableПодвижной_состав.Вид_топливаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Вид топлива\' в таблице \'Подвижной состав\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПодвижной_состав.Вид_топливаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime дата_окончания_страховки {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableПодвижной_состав.дата_окончания_страховкиColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'дата окончания страховки\' в таблице \'Подвижной состав\' равн" +
                                "о DBNull.", e);
                    }
                }
                set {
                    this[this.tableПодвижной_состав.дата_окончания_страховкиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsГаражный_номерNull() {
                return this.IsNull(this.tableПодвижной_состав.Гаражный_номерColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetГаражный_номерNull() {
                this[this.tableПодвижной_состав.Гаражный_номерColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsТип_двигателяNull() {
                return this.IsNull(this.tableПодвижной_состав.Тип_двигателяColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetТип_двигателяNull() {
                this[this.tableПодвижной_состав.Тип_двигателяColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsГод_выпускаNull() {
                return this.IsNull(this.tableПодвижной_состав.Год_выпускаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetГод_выпускаNull() {
                this[this.tableПодвижной_состав.Год_выпускаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsИнвентарный_номерNull() {
                return this.IsNull(this.tableПодвижной_состав.Инвентарный_номерColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetИнвентарный_номерNull() {
                this[this.tableПодвижной_состав.Инвентарный_номерColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsВид_топливаNull() {
                return this.IsNull(this.tableПодвижной_состав.Вид_топливаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetВид_топливаNull() {
                this[this.tableПодвижной_состав.Вид_топливаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isдата_окончания_страховкиNull() {
                return this.IsNull(this.tableПодвижной_состав.дата_окончания_страховкиColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setдата_окончания_страховкиNull() {
                this[this.tableПодвижной_состав.дата_окончания_страховкиColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Водители_автоRow[] GetВодители_автоRows() {
                if ((this.Table.ChildRelations["FK_Водители авто_id_авто"] == null)) {
                    return new Водители_автоRow[0];
                }
                else {
                    return ((Водители_автоRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Водители авто_id_авто"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоRow[] GetПутевой_лист_Грузового_автоRows() {
                if ((this.Table.ChildRelations["FK_Путевой лист Грузового авто_Подвижной состав"] == null)) {
                    return new Путевой_лист_Грузового_автоRow[0];
                }
                else {
                    return ((Путевой_лист_Грузового_автоRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Путевой лист Грузового авто_Подвижной состав"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_легкового_автомобиляRow[] GetПутевой_лист_легкового_автомобиляRows() {
                if ((this.Table.ChildRelations["FK_Путевой лист легкового автомобиля_Подвижной состав"] == null)) {
                    return new Путевой_лист_легкового_автомобиляRow[0];
                }
                else {
                    return ((Путевой_лист_легкового_автомобиляRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Путевой лист легкового автомобиля_Подвижной состав"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Путевой_лист_Грузового_автоRow : global::System.Data.DataRow {
            
            private Путевой_лист_Грузового_автоDataTable tableПутевой_лист_Грузового_авто;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Путевой_лист_Грузового_автоRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableПутевой_лист_Грузового_авто = ((Путевой_лист_Грузового_автоDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Путевого_листа {
                get {
                    return ((int)(this[this.tableПутевой_лист_Грузового_авто.ID_Путевого_листаColumn]));
                }
                set {
                    this[this.tableПутевой_лист_Грузового_авто.ID_Путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Номер_путевого_листа {
                get {
                    return ((int)(this[this.tableПутевой_лист_Грузового_авто.Номер_путевого_листаColumn]));
                }
                set {
                    this[this.tableПутевой_лист_Грузового_авто.Номер_путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Дата_путевого_листа {
                get {
                    return ((global::System.DateTime)(this[this.tableПутевой_лист_Грузового_авто.Дата_путевого_листаColumn]));
                }
                set {
                    this[this.tableПутевой_лист_Грузового_авто.Дата_путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Водителя {
                get {
                    return ((int)(this[this.tableПутевой_лист_Грузового_авто.ID_ВодителяColumn]));
                }
                set {
                    this[this.tableПутевой_лист_Грузового_авто.ID_ВодителяColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Автомобиля {
                get {
                    return ((int)(this[this.tableПутевой_лист_Грузового_авто.ID_АвтомобиляColumn]));
                }
                set {
                    this[this.tableПутевой_лист_Грузового_авто.ID_АвтомобиляColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Личный_составRow Личный_составRow {
                get {
                    return ((Личный_составRow)(this.GetParentRow(this.Table.ParentRelations["FK_Путевой лист Грузового авто_личный состав"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Путевой лист Грузового авто_личный состав"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Подвижной_составRow Подвижной_составRow {
                get {
                    return ((Подвижной_составRow)(this.GetParentRow(this.Table.ParentRelations["FK_Путевой лист Грузового авто_Подвижной состав"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Путевой лист Грузового авто_Подвижной состав"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Движение_ТСМRow[] GetДвижение_ТСМRows() {
                if ((this.Table.ChildRelations["FK_Движение ТСМ_Путевой лист Грузового авто"] == null)) {
                    return new Движение_ТСМRow[0];
                }
                else {
                    return ((Движение_ТСМRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Движение ТСМ_Путевой лист Грузового авто"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Задание_водителюRow[] GetЗадание_водителюRows() {
                if ((this.Table.ChildRelations["FK_Задание водителю_Путевой лист Грузового авто"] == null)) {
                    return new Задание_водителюRow[0];
                }
                else {
                    return ((Задание_водителюRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Задание водителю_Путевой лист Грузового авто"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Работа_водителя_и_автомобиляRow[] GetРабота_водителя_и_автомобиляRows() {
                if ((this.Table.ChildRelations["FK_Данные Путевой лист легкового авто_Путевой лист грузового автомобиля"] == null)) {
                    return new Работа_водителя_и_автомобиляRow[0];
                }
                else {
                    return ((Работа_водителя_и_автомобиляRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Данные Путевой лист легкового авто_Путевой лист грузового автомобиля"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Путевой_лист_легкового_автомобиляRow : global::System.Data.DataRow {
            
            private Путевой_лист_легкового_автомобиляDataTable tableПутевой_лист_легкового_автомобиля;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Путевой_лист_легкового_автомобиляRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableПутевой_лист_легкового_автомобиля = ((Путевой_лист_легкового_автомобиляDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Путевого_листа {
                get {
                    return ((int)(this[this.tableПутевой_лист_легкового_автомобиля.ID_Путевого_листаColumn]));
                }
                set {
                    this[this.tableПутевой_лист_легкового_автомобиля.ID_Путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Номер_путевого_листа {
                get {
                    try {
                        return ((string)(this[this.tableПутевой_лист_легкового_автомобиля.Номер_путевого_листаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Номер путевого листа\' в таблице \'Путевой лист легкового авт" +
                                "омобиля\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПутевой_лист_легкового_автомобиля.Номер_путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime За_период_с {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableПутевой_лист_легкового_автомобиля.За_период_сColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'За период с\' в таблице \'Путевой лист легкового автомобиля\' " +
                                "равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПутевой_лист_легкового_автомобиля.За_период_сColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime За_период_по {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableПутевой_лист_легкового_автомобиля.За_период_поColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'За период по\' в таблице \'Путевой лист легкового автомобиля\'" +
                                " равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПутевой_лист_легкового_автомобиля.За_период_поColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Автомобиль {
                get {
                    try {
                        return ((int)(this[this.tableПутевой_лист_легкового_автомобиля.ID_АвтомобильColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ID_Автомобиль\' в таблице \'Путевой лист легкового автомобиля" +
                                "\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПутевой_лист_легкового_автомобиля.ID_АвтомобильColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Водитель {
                get {
                    try {
                        return ((int)(this[this.tableПутевой_лист_легкового_автомобиля.ID_ВодительColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ID_Водитель\' в таблице \'Путевой лист легкового автомобиля\' " +
                                "равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПутевой_лист_легкового_автомобиля.ID_ВодительColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Личный_составRow Личный_составRow {
                get {
                    return ((Личный_составRow)(this.GetParentRow(this.Table.ParentRelations["FK_Путевой лист легкового автомобиля_личный состав"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Путевой лист легкового автомобиля_личный состав"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Подвижной_составRow Подвижной_составRow {
                get {
                    return ((Подвижной_составRow)(this.GetParentRow(this.Table.ParentRelations["FK_Путевой лист легкового автомобиля_Подвижной состав"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Путевой лист легкового автомобиля_Подвижной состав"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsНомер_путевого_листаNull() {
                return this.IsNull(this.tableПутевой_лист_легкового_автомобиля.Номер_путевого_листаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetНомер_путевого_листаNull() {
                this[this.tableПутевой_лист_легкового_автомобиля.Номер_путевого_листаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsЗа_период_сNull() {
                return this.IsNull(this.tableПутевой_лист_легкового_автомобиля.За_период_сColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetЗа_период_сNull() {
                this[this.tableПутевой_лист_легкового_автомобиля.За_период_сColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsЗа_период_поNull() {
                return this.IsNull(this.tableПутевой_лист_легкового_автомобиля.За_период_поColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetЗа_период_поNull() {
                this[this.tableПутевой_лист_легкового_автомобиля.За_период_поColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsID_АвтомобильNull() {
                return this.IsNull(this.tableПутевой_лист_легкового_автомобиля.ID_АвтомобильColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetID_АвтомобильNull() {
                this[this.tableПутевой_лист_легкового_автомобиля.ID_АвтомобильColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsID_ВодительNull() {
                return this.IsNull(this.tableПутевой_лист_легкового_автомобиля.ID_ВодительColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetID_ВодительNull() {
                this[this.tableПутевой_лист_легкового_автомобиля.ID_ВодительColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Данные_Путевой_лист_легкового_автоRow[] GetДанные_Путевой_лист_легкового_автоRows() {
                if ((this.Table.ChildRelations["FK_Данные Путевой лист легкового авто_Путевой лист легкового автомобиля"] == null)) {
                    return new Данные_Путевой_лист_легкового_автоRow[0];
                }
                else {
                    return ((Данные_Путевой_лист_легкового_автоRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Данные Путевой лист легкового авто_Путевой лист легкового автомобиля"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Работа_водителя_и_автомобиляRow : global::System.Data.DataRow {
            
            private Работа_водителя_и_автомобиляDataTable tableРабота_водителя_и_автомобиля;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Работа_водителя_и_автомобиляRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableРабота_водителя_и_автомобиля = ((Работа_водителя_и_автомобиляDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_работа_водителя_и_авто {
                get {
                    return ((int)(this[this.tableРабота_водителя_и_автомобиля.ID_работа_водителя_и_автоColumn]));
                }
                set {
                    this[this.tableРабота_водителя_и_автомобиля.ID_работа_водителя_и_автоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_Путевого_листа {
                get {
                    try {
                        return ((int)(this[this.tableРабота_водителя_и_автомобиля.ID_Путевого_листаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ID_Путевого листа\' в таблице \'Работа водителя и автомобиля\'" +
                                " равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableРабота_водителя_и_автомобиля.ID_Путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Операции {
                get {
                    return ((string)(this[this.tableРабота_водителя_и_автомобиля.ОперацииColumn]));
                }
                set {
                    this[this.tableРабота_водителя_и_автомобиля.ОперацииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Показания_спидометра {
                get {
                    try {
                        return ((int)(this[this.tableРабота_водителя_и_автомобиля.Показания_спидометраColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Показания спидометра\' в таблице \'Работа водителя и автомоби" +
                                "ля\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableРабота_водителя_и_автомобиля.Показания_спидометраColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Дата_и_время_по_графику {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableРабота_водителя_и_автомобиля.Дата_и_время_по_графикуColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Дата и время по графику\' в таблице \'Работа водителя и автом" +
                                "обиля\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableРабота_водителя_и_автомобиля.Дата_и_время_по_графикуColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Дата_и_время_фактически {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableРабота_водителя_и_автомобиля.Дата_и_время_фактическиColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Дата и время фактически\' в таблице \'Работа водителя и автом" +
                                "обиля\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableРабота_водителя_и_автомобиля.Дата_и_время_фактическиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Нулевой_пробег {
                get {
                    try {
                        return ((int)(this[this.tableРабота_водителя_и_автомобиля.Нулевой_пробегColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Нулевой пробег\' в таблице \'Работа водителя и автомобиля\' ра" +
                                "вно DBNull.", e);
                    }
                }
                set {
                    this[this.tableРабота_водителя_и_автомобиля.Нулевой_пробегColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Время_работы_двигателя_час {
                get {
                    try {
                        return ((int)(this[this.tableРабота_водителя_и_автомобиля.Время_работы_двигателя_часColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Время работы двигателя час\' в таблице \'Работа водителя и ав" +
                                "томобиля\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableРабота_водителя_и_автомобиля.Время_работы_двигателя_часColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Время_работы_спецоборудования {
                get {
                    try {
                        return ((int)(this[this.tableРабота_водителя_и_автомобиля.Время_работы_спецоборудованияColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Время работы спецоборудования\' в таблице \'Работа водителя и" +
                                " автомобиля\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableРабота_водителя_и_автомобиля.Время_работы_спецоборудованияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоRow Путевой_лист_Грузового_автоRow {
                get {
                    return ((Путевой_лист_Грузового_автоRow)(this.GetParentRow(this.Table.ParentRelations["FK_Данные Путевой лист легкового авто_Путевой лист грузового автомобиля"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Данные Путевой лист легкового авто_Путевой лист грузового автомобиля"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsID_Путевого_листаNull() {
                return this.IsNull(this.tableРабота_водителя_и_автомобиля.ID_Путевого_листаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetID_Путевого_листаNull() {
                this[this.tableРабота_водителя_и_автомобиля.ID_Путевого_листаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsПоказания_спидометраNull() {
                return this.IsNull(this.tableРабота_водителя_и_автомобиля.Показания_спидометраColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetПоказания_спидометраNull() {
                this[this.tableРабота_водителя_и_автомобиля.Показания_спидометраColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsДата_и_время_по_графикуNull() {
                return this.IsNull(this.tableРабота_водителя_и_автомобиля.Дата_и_время_по_графикуColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetДата_и_время_по_графикуNull() {
                this[this.tableРабота_водителя_и_автомобиля.Дата_и_время_по_графикуColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsДата_и_время_фактическиNull() {
                return this.IsNull(this.tableРабота_водителя_и_автомобиля.Дата_и_время_фактическиColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetДата_и_время_фактическиNull() {
                this[this.tableРабота_водителя_и_автомобиля.Дата_и_время_фактическиColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsНулевой_пробегNull() {
                return this.IsNull(this.tableРабота_водителя_и_автомобиля.Нулевой_пробегColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetНулевой_пробегNull() {
                this[this.tableРабота_водителя_и_автомобиля.Нулевой_пробегColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsВремя_работы_двигателя_часNull() {
                return this.IsNull(this.tableРабота_водителя_и_автомобиля.Время_работы_двигателя_часColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetВремя_работы_двигателя_часNull() {
                this[this.tableРабота_водителя_и_автомобиля.Время_работы_двигателя_часColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsВремя_работы_спецоборудованияNull() {
                return this.IsNull(this.tableРабота_водителя_и_автомобиля.Время_работы_спецоборудованияColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetВремя_работы_спецоборудованияNull() {
                this[this.tableРабота_водителя_и_автомобиля.Время_работы_спецоборудованияColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class View_Данные_путевой_лист_легкового_автоRow : global::System.Data.DataRow {
            
            private View_Данные_путевой_лист_легкового_автоDataTable tableView_Данные_путевой_лист_легкового_авто;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_Данные_путевой_лист_легкового_автоRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_Данные_путевой_лист_легкового_авто = ((View_Данные_путевой_лист_легкового_автоDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Число {
                get {
                    return ((string)(this[this.tableView_Данные_путевой_лист_легкового_авто.ЧислоColumn]));
                }
                set {
                    this[this.tableView_Данные_путевой_лист_легкового_авто.ЧислоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan Время_выезда {
                get {
                    return ((global::System.TimeSpan)(this[this.tableView_Данные_путевой_лист_легкового_авто.Время_выездаColumn]));
                }
                set {
                    this[this.tableView_Данные_путевой_лист_легкового_авто.Время_выездаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan Время_возвращения {
                get {
                    return ((global::System.TimeSpan)(this[this.tableView_Данные_путевой_лист_легкового_авто.Время_возвращенияColumn]));
                }
                set {
                    this[this.tableView_Данные_путевой_лист_легкового_авто.Время_возвращенияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan Время_в_наряде {
                get {
                    return ((global::System.TimeSpan)(this[this.tableView_Данные_путевой_лист_легкового_авто.Время_в_нарядеColumn]));
                }
                set {
                    this[this.tableView_Данные_путевой_лист_легкового_авто.Время_в_нарядеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Показания_спидометра_при_выезде {
                get {
                    return ((int)(this[this.tableView_Данные_путевой_лист_легкового_авто.Показания_спидометра_при_выездеColumn]));
                }
                set {
                    this[this.tableView_Данные_путевой_лист_легкового_авто.Показания_спидометра_при_выездеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Показания_спидометра_при_возращении {
                get {
                    return ((int)(this[this.tableView_Данные_путевой_лист_легкового_авто.Показания_спидометра_при_возращенииColumn]));
                }
                set {
                    this[this.tableView_Данные_путевой_лист_легкового_авто.Показания_спидометра_при_возращенииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Пробег_км {
                get {
                    return ((string)(this[this.tableView_Данные_путевой_лист_легкового_авто.Пробег_кмColumn]));
                }
                set {
                    this[this.tableView_Данные_путевой_лист_легкового_авто.Пробег_кмColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Остаток_топлива_при_выезде {
                get {
                    return ((double)(this[this.tableView_Данные_путевой_лист_легкового_авто.Остаток_топлива_при_выездеColumn]));
                }
                set {
                    this[this.tableView_Данные_путевой_лист_легкового_авто.Остаток_топлива_при_выездеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Остаток_топлива_при_возвращении {
                get {
                    return ((double)(this[this.tableView_Данные_путевой_лист_легкового_авто.Остаток_топлива_при_возвращенииColumn]));
                }
                set {
                    this[this.tableView_Данные_путевой_лист_легкового_авто.Остаток_топлива_при_возвращенииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Заправлено_топливо_л {
                get {
                    return ((double)(this[this.tableView_Данные_путевой_лист_легкового_авто.Заправлено_топливо_лColumn]));
                }
                set {
                    this[this.tableView_Данные_путевой_лист_легкового_авто.Заправлено_топливо_лColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Дата_и_номер_чека_АЗС {
                get {
                    try {
                        return ((string)(this[this.tableView_Данные_путевой_лист_легкового_авто.Дата_и_номер_чека_АЗСColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Дата_и_номер_чека_АЗС\' в таблице \'View_Данные путевой лист " +
                                "легкового авто\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Данные_путевой_лист_легкового_авто.Дата_и_номер_чека_АЗСColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Расход_топлива_по_норме {
                get {
                    try {
                        return ((double)(this[this.tableView_Данные_путевой_лист_легкового_авто.Расход_топлива_по_нормеColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Расход_топлива_по_норме\' в таблице \'View_Данные путевой лис" +
                                "т легкового авто\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Данные_путевой_лист_легкового_авто.Расход_топлива_по_нормеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Расход_топлива_фактически {
                get {
                    try {
                        return ((double)(this[this.tableView_Данные_путевой_лист_легкового_авто.Расход_топлива_фактическиColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Расход_топлива_фактически\' в таблице \'View_Данные путевой л" +
                                "ист легкового авто\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Данные_путевой_лист_легкового_авто.Расход_топлива_фактическиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Расход_топлива_экономия_перерасход {
                get {
                    try {
                        return ((double)(this[this.tableView_Данные_путевой_лист_легкового_авто.Расход_топлива_экономия_перерасходColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Расход_топлива_экономия_перерасход\' в таблице \'View_Данные " +
                                "путевой лист легкового авто\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Данные_путевой_лист_легкового_авто.Расход_топлива_экономия_перерасходColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Автомобиль_технически_исправлен_выезд_разрешен_подпись_штамп_уполномоченного_лица {
                get {
                    try {
                        return ((string)(this[this.tableView_Данные_путевой_лист_легкового_авто.Автомобиль_технически_исправлен_выезд_разрешен_подпись_штамп_уполномоченного_лицаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Автомобиль_технически_исправлен_выезд_разрешен_подпись_штам" +
                                "п_уполномоченного_лица\' в таблице \'View_Данные путевой лист легкового авто\' равн" +
                                "о DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Данные_путевой_лист_легкового_авто.Автомобиль_технически_исправлен_выезд_разрешен_подпись_штамп_уполномоченного_лицаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Автомобиль_технически_исправлен_прнял_подпись_водителя {
                get {
                    try {
                        return ((string)(this[this.tableView_Данные_путевой_лист_легкового_авто.Автомобиль_технически_исправлен_прнял_подпись_водителяColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Автомобиль_технически_исправлен_прнял_подпись_водителя\' в т" +
                                "аблице \'View_Данные путевой лист легкового авто\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Данные_путевой_лист_легкового_авто.Автомобиль_технически_исправлен_прнял_подпись_водителяColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string При_возвращении_автомобиль_сдал_подпись_водителя {
                get {
                    try {
                        return ((string)(this[this.tableView_Данные_путевой_лист_легкового_авто.При_возвращении_автомобиль_сдал_подпись_водителяColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'При_возвращении_автомобиль_сдал_подпись_водителя\' в таблице" +
                                " \'View_Данные путевой лист легкового авто\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Данные_путевой_лист_легкового_авто.При_возвращении_автомобиль_сдал_подпись_водителяColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string При_возвращении_автомобиль_принял_подпись_штамп_уполномоченного_лица {
                get {
                    try {
                        return ((string)(this[this.tableView_Данные_путевой_лист_легкового_авто.При_возвращении_автомобиль_принял_подпись_штамп_уполномоченного_лицаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'При_возвращении_автомобиль_принял_подпись_штамп_уполномочен" +
                                "ного_лица\' в таблице \'View_Данные путевой лист легкового авто\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Данные_путевой_лист_легкового_авто.При_возвращении_автомобиль_принял_подпись_штамп_уполномоченного_лицаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Водитель_по_состоянию_здоровья_к_управлению_допущен_подпись_штамп_уполномоченного_лица {
                get {
                    try {
                        return ((string)(this[this.tableView_Данные_путевой_лист_легкового_авто.Водитель_по_состоянию_здоровья_к_управлению_допущен_подпись_штамп_уполномоченного_лицаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Водитель_по_состоянию_здоровья_к_управлению_допущен_подпись" +
                                "_штамп_уполномоченного_лица\' в таблице \'View_Данные путевой лист легкового авто\'" +
                                " равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Данные_путевой_лист_легкового_авто.Водитель_по_состоянию_здоровья_к_управлению_допущен_подпись_штамп_уполномоченного_лицаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Подпись_штамп_лица_ответственного_за_оформление_путевого_листа {
                get {
                    try {
                        return ((string)(this[this.tableView_Данные_путевой_лист_легкового_авто.Подпись_штамп_лица_ответственного_за_оформление_путевого_листаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Подпись_штамп_лица_ответственного_за_оформление_путевого_ли" +
                                "ста\' в таблице \'View_Данные путевой лист легкового авто\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Данные_путевой_лист_легкового_авто.Подпись_штамп_лица_ответственного_за_оформление_путевого_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsДата_и_номер_чека_АЗСNull() {
                return this.IsNull(this.tableView_Данные_путевой_лист_легкового_авто.Дата_и_номер_чека_АЗСColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetДата_и_номер_чека_АЗСNull() {
                this[this.tableView_Данные_путевой_лист_легкового_авто.Дата_и_номер_чека_АЗСColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsРасход_топлива_по_нормеNull() {
                return this.IsNull(this.tableView_Данные_путевой_лист_легкового_авто.Расход_топлива_по_нормеColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetРасход_топлива_по_нормеNull() {
                this[this.tableView_Данные_путевой_лист_легкового_авто.Расход_топлива_по_нормеColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsРасход_топлива_фактическиNull() {
                return this.IsNull(this.tableView_Данные_путевой_лист_легкового_авто.Расход_топлива_фактическиColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetРасход_топлива_фактическиNull() {
                this[this.tableView_Данные_путевой_лист_легкового_авто.Расход_топлива_фактическиColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsРасход_топлива_экономия_перерасходNull() {
                return this.IsNull(this.tableView_Данные_путевой_лист_легкового_авто.Расход_топлива_экономия_перерасходColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetРасход_топлива_экономия_перерасходNull() {
                this[this.tableView_Данные_путевой_лист_легкового_авто.Расход_топлива_экономия_перерасходColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsАвтомобиль_технически_исправлен_выезд_разрешен_подпись_штамп_уполномоченного_лицаNull() {
                return this.IsNull(this.tableView_Данные_путевой_лист_легкового_авто.Автомобиль_технически_исправлен_выезд_разрешен_подпись_штамп_уполномоченного_лицаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetАвтомобиль_технически_исправлен_выезд_разрешен_подпись_штамп_уполномоченного_лицаNull() {
                this[this.tableView_Данные_путевой_лист_легкового_авто.Автомобиль_технически_исправлен_выезд_разрешен_подпись_штамп_уполномоченного_лицаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsАвтомобиль_технически_исправлен_прнял_подпись_водителяNull() {
                return this.IsNull(this.tableView_Данные_путевой_лист_легкового_авто.Автомобиль_технически_исправлен_прнял_подпись_водителяColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetАвтомобиль_технически_исправлен_прнял_подпись_водителяNull() {
                this[this.tableView_Данные_путевой_лист_легкового_авто.Автомобиль_технически_исправлен_прнял_подпись_водителяColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsПри_возвращении_автомобиль_сдал_подпись_водителяNull() {
                return this.IsNull(this.tableView_Данные_путевой_лист_легкового_авто.При_возвращении_автомобиль_сдал_подпись_водителяColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetПри_возвращении_автомобиль_сдал_подпись_водителяNull() {
                this[this.tableView_Данные_путевой_лист_легкового_авто.При_возвращении_автомобиль_сдал_подпись_водителяColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsПри_возвращении_автомобиль_принял_подпись_штамп_уполномоченного_лицаNull() {
                return this.IsNull(this.tableView_Данные_путевой_лист_легкового_авто.При_возвращении_автомобиль_принял_подпись_штамп_уполномоченного_лицаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetПри_возвращении_автомобиль_принял_подпись_штамп_уполномоченного_лицаNull() {
                this[this.tableView_Данные_путевой_лист_легкового_авто.При_возвращении_автомобиль_принял_подпись_штамп_уполномоченного_лицаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsВодитель_по_состоянию_здоровья_к_управлению_допущен_подпись_штамп_уполномоченного_лицаNull() {
                return this.IsNull(this.tableView_Данные_путевой_лист_легкового_авто.Водитель_по_состоянию_здоровья_к_управлению_допущен_подпись_штамп_уполномоченного_лицаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetВодитель_по_состоянию_здоровья_к_управлению_допущен_подпись_штамп_уполномоченного_лицаNull() {
                this[this.tableView_Данные_путевой_лист_легкового_авто.Водитель_по_состоянию_здоровья_к_управлению_допущен_подпись_штамп_уполномоченного_лицаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsПодпись_штамп_лица_ответственного_за_оформление_путевого_листаNull() {
                return this.IsNull(this.tableView_Данные_путевой_лист_легкового_авто.Подпись_штамп_лица_ответственного_за_оформление_путевого_листаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetПодпись_штамп_лица_ответственного_за_оформление_путевого_листаNull() {
                this[this.tableView_Данные_путевой_лист_легкового_авто.Подпись_штамп_лица_ответственного_за_оформление_путевого_листаColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class View_Работа_водителя_и_автомобиляRow : global::System.Data.DataRow {
            
            private View_Работа_водителя_и_автомобиляDataTable tableView_Работа_водителя_и_автомобиля;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_Работа_водителя_и_автомобиляRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_Работа_водителя_и_автомобиля = ((View_Работа_водителя_и_автомобиляDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Операции {
                get {
                    return ((string)(this[this.tableView_Работа_водителя_и_автомобиля.ОперацииColumn]));
                }
                set {
                    this[this.tableView_Работа_водителя_и_автомобиля.ОперацииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Показания_спидометра {
                get {
                    try {
                        return ((int)(this[this.tableView_Работа_водителя_и_автомобиля.Показания_спидометраColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Показания_спидометра\' в таблице \'View_Работа водителя и авт" +
                                "омобиля\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Работа_водителя_и_автомобиля.Показания_спидометраColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Дата_и_время_по_графику {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_Работа_водителя_и_автомобиля.Дата_и_время_по_графикуColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Дата_и_время_по_графику\' в таблице \'View_Работа водителя и " +
                                "автомобиля\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Работа_водителя_и_автомобиля.Дата_и_время_по_графикуColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Дата_и_время_фактически {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_Работа_водителя_и_автомобиля.Дата_и_время_фактическиColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Дата_и_время_фактически\' в таблице \'View_Работа водителя и " +
                                "автомобиля\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Работа_водителя_и_автомобиля.Дата_и_время_фактическиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Нулевой_пробег {
                get {
                    try {
                        return ((int)(this[this.tableView_Работа_водителя_и_автомобиля.Нулевой_пробегColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Нулевой_пробег\' в таблице \'View_Работа водителя и автомобил" +
                                "я\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Работа_водителя_и_автомобиля.Нулевой_пробегColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Время_работы_двигателя_час {
                get {
                    try {
                        return ((int)(this[this.tableView_Работа_водителя_и_автомобиля.Время_работы_двигателя_часColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Время_работы_двигателя_час\' в таблице \'View_Работа водителя" +
                                " и автомобиля\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Работа_водителя_и_автомобиля.Время_работы_двигателя_часColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Время_работы_спецоборудования {
                get {
                    try {
                        return ((int)(this[this.tableView_Работа_водителя_и_автомобиля.Время_работы_спецоборудованияColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Время_работы_спецоборудования\' в таблице \'View_Работа водит" +
                                "еля и автомобиля\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Работа_водителя_и_автомобиля.Время_работы_спецоборудованияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsПоказания_спидометраNull() {
                return this.IsNull(this.tableView_Работа_водителя_и_автомобиля.Показания_спидометраColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetПоказания_спидометраNull() {
                this[this.tableView_Работа_водителя_и_автомобиля.Показания_спидометраColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsДата_и_время_по_графикуNull() {
                return this.IsNull(this.tableView_Работа_водителя_и_автомобиля.Дата_и_время_по_графикуColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetДата_и_время_по_графикуNull() {
                this[this.tableView_Работа_водителя_и_автомобиля.Дата_и_время_по_графикуColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsДата_и_время_фактическиNull() {
                return this.IsNull(this.tableView_Работа_водителя_и_автомобиля.Дата_и_время_фактическиColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetДата_и_время_фактическиNull() {
                this[this.tableView_Работа_водителя_и_автомобиля.Дата_и_время_фактическиColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsНулевой_пробегNull() {
                return this.IsNull(this.tableView_Работа_водителя_и_автомобиля.Нулевой_пробегColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetНулевой_пробегNull() {
                this[this.tableView_Работа_водителя_и_автомобиля.Нулевой_пробегColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsВремя_работы_двигателя_часNull() {
                return this.IsNull(this.tableView_Работа_водителя_и_автомобиля.Время_работы_двигателя_часColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetВремя_работы_двигателя_часNull() {
                this[this.tableView_Работа_водителя_и_автомобиля.Время_работы_двигателя_часColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsВремя_работы_спецоборудованияNull() {
                return this.IsNull(this.tableView_Работа_водителя_и_автомобиля.Время_работы_спецоборудованияColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetВремя_работы_спецоборудованияNull() {
                this[this.tableView_Работа_водителя_и_автомобиля.Время_работы_спецоборудованияColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Водители_автоRowChangeEvent : global::System.EventArgs {
            
            private Водители_автоRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Водители_автоRowChangeEvent(Водители_автоRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Водители_автоRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Данные_Путевой_лист_легкового_автоRowChangeEvent : global::System.EventArgs {
            
            private Данные_Путевой_лист_легкового_автоRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Данные_Путевой_лист_легкового_автоRowChangeEvent(Данные_Путевой_лист_легкового_автоRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Данные_Путевой_лист_легкового_автоRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Движение_ТСМRowChangeEvent : global::System.EventArgs {
            
            private Движение_ТСМRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Движение_ТСМRowChangeEvent(Движение_ТСМRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Движение_ТСМRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Задание_водителюRowChangeEvent : global::System.EventArgs {
            
            private Задание_водителюRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Задание_водителюRowChangeEvent(Задание_водителюRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Задание_водителюRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Заправка_ТСМRowChangeEvent : global::System.EventArgs {
            
            private Заправка_ТСМRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Заправка_ТСМRowChangeEvent(Заправка_ТСМRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Заправка_ТСМRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Личный_составRowChangeEvent : global::System.EventArgs {
            
            private Личный_составRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Личный_составRowChangeEvent(Личный_составRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Личный_составRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class _Нормы_расхода_ГСМ_на_авто_тракторыRowChangeEvent : global::System.EventArgs {
            
            private _Нормы_расхода_ГСМ_на_авто_тракторыRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _Нормы_расхода_ГСМ_на_авто_тракторыRowChangeEvent(_Нормы_расхода_ГСМ_на_авто_тракторыRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public _Нормы_расхода_ГСМ_на_авто_тракторыRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Подвижной_составRowChangeEvent : global::System.EventArgs {
            
            private Подвижной_составRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Подвижной_составRowChangeEvent(Подвижной_составRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Подвижной_составRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Путевой_лист_Грузового_автоRowChangeEvent : global::System.EventArgs {
            
            private Путевой_лист_Грузового_автоRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоRowChangeEvent(Путевой_лист_Грузового_автоRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_Грузового_автоRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Путевой_лист_легкового_автомобиляRowChangeEvent : global::System.EventArgs {
            
            private Путевой_лист_легкового_автомобиляRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_легкового_автомобиляRowChangeEvent(Путевой_лист_легкового_автомобиляRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Путевой_лист_легкового_автомобиляRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Работа_водителя_и_автомобиляRowChangeEvent : global::System.EventArgs {
            
            private Работа_водителя_и_автомобиляRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Работа_водителя_и_автомобиляRowChangeEvent(Работа_водителя_и_автомобиляRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Работа_водителя_и_автомобиляRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class View_Данные_путевой_лист_легкового_автоRowChangeEvent : global::System.EventArgs {
            
            private View_Данные_путевой_лист_легкового_автоRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_Данные_путевой_лист_легкового_автоRowChangeEvent(View_Данные_путевой_лист_легкового_автоRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_Данные_путевой_лист_легкового_автоRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class View_Работа_водителя_и_автомобиляRowChangeEvent : global::System.EventArgs {
            
            private View_Работа_водителя_и_автомобиляRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_Работа_водителя_и_автомобиляRowChangeEvent(View_Работа_водителя_и_автомобиляRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_Работа_водителя_и_автомобиляRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace AUTOPARK.Путевые_листыDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Водители_автоTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Водители_автоTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Водители авто";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("ID_Водитель", "ID_Водитель");
            tableMapping.ColumnMappings.Add("ID_Авто", "ID_Авто");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Водители авто] WHERE (([ID] = @Original_ID) AND ([ID_Водитель]" +
                " = @Original_ID_Водитель) AND ([ID_Авто] = @Original_ID_Авто))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Водитель", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водитель", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Авто", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Авто", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Водители авто] ([ID_Водитель], [ID_Авто]) VALUES (@ID_Водитель" +
                ", @ID_Авто);\r\nSELECT ID, ID_Водитель, ID_Авто FROM [Водители авто] WHERE (ID = S" +
                "COPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Водитель", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водитель", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Авто", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Авто", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Водители авто] SET [ID_Водитель] = @ID_Водитель, [ID_Авто] = @ID_Авто WHERE (([ID] = @Original_ID) AND ([ID_Водитель] = @Original_ID_Водитель) AND ([ID_Авто] = @Original_ID_Авто));
SELECT ID, ID_Водитель, ID_Авто FROM [Водители авто] WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Водитель", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водитель", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Авто", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Авто", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Водитель", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водитель", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Авто", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Авто", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, ID_Водитель, ID_Авто FROM dbo.[Водители авто]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Путевые_листыDataSet.Водители_автоDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Путевые_листыDataSet.Водители_автоDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Путевые_листыDataSet.Водители_автоDataTable dataTable = new Путевые_листыDataSet.Водители_автоDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Путевые_листыDataSet.Водители_автоDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Путевые_листыDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Водители авто");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, int Original_ID_Водитель, int Original_ID_Авто) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Водитель));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_Авто));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Водитель, int ID_Авто) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Водитель));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_Авто));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Водитель, int ID_Авто, int Original_ID, int Original_ID_Водитель, int Original_ID_Авто, int ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Водитель));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_Авто));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_Водитель));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_Авто));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Водитель, int ID_Авто, int Original_ID, int Original_ID_Водитель, int Original_ID_Авто) {
            return this.Update(ID_Водитель, ID_Авто, Original_ID, Original_ID_Водитель, Original_ID_Авто, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Данные_Путевой_лист_легкового_автоTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Данные_Путевой_лист_легкового_автоTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Данные Путевой лист легкового авто";
            tableMapping.ColumnMappings.Add("id_Данных", "id_Данных");
            tableMapping.ColumnMappings.Add("ID_Путевого листа", "ID_Путевого листа");
            tableMapping.ColumnMappings.Add("Число", "Число");
            tableMapping.ColumnMappings.Add("Время выезда", "Время выезда");
            tableMapping.ColumnMappings.Add("Время возвращения", "Время возвращения");
            tableMapping.ColumnMappings.Add("Время в наряде", "Время в наряде");
            tableMapping.ColumnMappings.Add("Показания спидометра при выезде", "Показания спидометра при выезде");
            tableMapping.ColumnMappings.Add("Показания спидометра при возвращении", "Показания спидометра при возвращении");
            tableMapping.ColumnMappings.Add("Пробег км", "Пробег км");
            tableMapping.ColumnMappings.Add("Остаток топлива при выезде", "Остаток топлива при выезде");
            tableMapping.ColumnMappings.Add("Остаток топлива при возвращении", "Остаток топлива при возвращении");
            tableMapping.ColumnMappings.Add("Заправлено топлива л", "Заправлено топлива л");
            tableMapping.ColumnMappings.Add("Дата и № чека АЗС", "Дата и № чека АЗС");
            tableMapping.ColumnMappings.Add("Расход топлива по норме", "Расход топлива по норме");
            tableMapping.ColumnMappings.Add("Расход топлива фактически", "Расход топлива фактически");
            tableMapping.ColumnMappings.Add("Расход топлива экономия перерасход", "Расход топлива экономия перерасход");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Данные Путевой лист легкового авто] WHERE (([id_Данных] = @Original_id_Данных) AND ((@IsNull_ID_Путевого_листа = 1 AND [ID_Путевого листа] IS NULL) OR ([ID_Путевого листа] = @Original_ID_Путевого_листа)) AND ([Число] = @Original_Число) AND ([Время выезда] = @Original_Время_выезда) AND ([Время возвращения] = @Original_Время_возвращения) AND ([Время в наряде] = @Original_Время_в_наряде) AND ([Показания спидометра при выезде] = @Original_Показания_спидометра_при_выезде) AND ([Показания спидометра при возвращении] = @Original_Показания_спидометра_при_возвращении) AND ([Пробег км] = @Original_Пробег_км) AND ([Остаток топлива при выезде] = @Original_Остаток_топлива_при_выезде) AND ([Остаток топлива при возвращении] = @Original_Остаток_топлива_при_возвращении) AND ([Заправлено топлива л] = @Original_Заправлено_топлива_л) AND ((@p3 = 1 AND [Дата и № чека АЗС] IS NULL) OR ([Дата и № чека АЗС] = @p2)) AND ((@IsNull_Расход_топлива_по_норме = 1 AND [Расход топлива по норме] IS NULL) OR ([Расход топлива по норме] = @Original_Расход_топлива_по_норме)) AND ((@IsNull_Расход_топлива_фактически = 1 AND [Расход топлива фактически] IS NULL) OR ([Расход топлива фактически] = @Original_Расход_топлива_фактически)) AND ((@IsNull_Расход_топлива_экономия_перерасход = 1 AND [Расход топлива экономия перерасход] IS NULL) OR ([Расход топлива экономия перерасход] = @Original_Расход_топлива_экономия_перерасход)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_Данных", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_Данных", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Число", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Число", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Время_выезда", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время выезда", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Время_возвращения", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время возвращения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Время_в_наряде", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время в наряде", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Показания_спидометра_при_выезде", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра при выезде", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Показания_спидометра_при_возвращении", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра при возвращении", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Пробег_км", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пробег км", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Остаток_топлива_при_выезде", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток топлива при выезде", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Остаток_топлива_при_возвращении", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток топлива при возвращении", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Заправлено_топлива_л", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заправлено топлива л", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и № чека АЗС", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и № чека АЗС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Расход_топлива_по_норме", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива по норме", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Расход_топлива_по_норме", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива по норме", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Расход_топлива_фактически", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива фактически", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Расход_топлива_фактически", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива фактически", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Расход_топлива_экономия_перерасход", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива экономия перерасход", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Расход_топлива_экономия_перерасход", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива экономия перерасход", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Данные Путевой лист легкового авто] ([id_Данных], [ID_Путевого листа], [Число], [Время выезда], [Время возвращения], [Время в наряде], [Показания спидометра при выезде], [Показания спидометра при возвращении], [Пробег км], [Остаток топлива при выезде], [Остаток топлива при возвращении], [Заправлено топлива л], [Дата и № чека АЗС], [Расход топлива по норме], [Расход топлива фактически], [Расход топлива экономия перерасход]) VALUES (@id_Данных, @ID_Путевого_листа, @Число, @Время_выезда, @Время_возвращения, @Время_в_наряде, @Показания_спидометра_при_выезде, @Показания_спидометра_при_возвращении, @Пробег_км, @Остаток_топлива_при_выезде, @Остаток_топлива_при_возвращении, @Заправлено_топлива_л, @p1, @Расход_топлива_по_норме, @Расход_топлива_фактически, @Расход_топлива_экономия_перерасход);
SELECT id_Данных, [ID_Путевого листа], Число, [Время выезда], [Время возвращения], [Время в наряде], [Показания спидометра при выезде], [Показания спидометра при возвращении], [Пробег км], [Остаток топлива при выезде], [Остаток топлива при возвращении], [Заправлено топлива л], [Дата и № чека АЗС], [Расход топлива по норме], [Расход топлива фактически], [Расход топлива экономия перерасход] FROM [Данные Путевой лист легкового авто] WHERE (id_Данных = @id_Данных)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id_Данных", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_Данных", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Число", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Число", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Время_выезда", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время выезда", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Время_возвращения", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время возвращения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Время_в_наряде", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время в наряде", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Показания_спидометра_при_выезде", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра при выезде", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Показания_спидометра_при_возвращении", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра при возвращении", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Пробег_км", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пробег км", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Остаток_топлива_при_выезде", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток топлива при выезде", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Остаток_топлива_при_возвращении", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток топлива при возвращении", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Заправлено_топлива_л", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заправлено топлива л", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и № чека АЗС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Расход_топлива_по_норме", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива по норме", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Расход_топлива_фактически", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива фактически", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Расход_топлива_экономия_перерасход", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива экономия перерасход", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Данные Путевой лист легкового авто] SET [id_Данных] = @id_Данных, [" +
                "ID_Путевого листа] = @ID_Путевого_листа, [Число] = @Число, [Время выезда] = @Вре" +
                "мя_выезда, [Время возвращения] = @Время_возвращения, [Время в наряде] = @Время_в" +
                "_наряде, [Показания спидометра при выезде] = @Показания_спидометра_при_выезде, [" +
                "Показания спидометра при возвращении] = @Показания_спидометра_при_возвращении, [" +
                "Пробег км] = @Пробег_км, [Остаток топлива при выезде] = @Остаток_топлива_при_вые" +
                "зде, [Остаток топлива при возвращении] = @Остаток_топлива_при_возвращении, [Запр" +
                "авлено топлива л] = @Заправлено_топлива_л, [Дата и № чека АЗС] = @p1, [Расход то" +
                "плива по норме] = @Расход_топлива_по_норме, [Расход топлива фактически] = @Расхо" +
                "д_топлива_фактически, [Расход топлива экономия перерасход] = @Расход_топлива_эко" +
                "номия_перерасход WHERE (([id_Данных] = @Original_id_Данных) AND ((@IsNull_ID_Пут" +
                "евого_листа = 1 AND [ID_Путевого листа] IS NULL) OR ([ID_Путевого листа] = @Orig" +
                "inal_ID_Путевого_листа)) AND ([Число] = @Original_Число) AND ([Время выезда] = @" +
                "Original_Время_выезда) AND ([Время возвращения] = @Original_Время_возвращения) A" +
                "ND ([Время в наряде] = @Original_Время_в_наряде) AND ([Показания спидометра при " +
                "выезде] = @Original_Показания_спидометра_при_выезде) AND ([Показания спидометра " +
                "при возвращении] = @Original_Показания_спидометра_при_возвращении) AND ([Пробег " +
                "км] = @Original_Пробег_км) AND ([Остаток топлива при выезде] = @Original_Остаток" +
                "_топлива_при_выезде) AND ([Остаток топлива при возвращении] = @Original_Остаток_" +
                "топлива_при_возвращении) AND ([Заправлено топлива л] = @Original_Заправлено_топл" +
                "ива_л) AND ((@p3 = 1 AND [Дата и № чека АЗС] IS NULL) OR ([Дата и № чека АЗС] = " +
                "@p2)) AND ((@IsNull_Расход_топлива_по_норме = 1 AND [Расход топлива по норме] IS" +
                " NULL) OR ([Расход топлива по норме] = @Original_Расход_топлива_по_норме)) AND (" +
                "(@IsNull_Расход_топлива_фактически = 1 AND [Расход топлива фактически] IS NULL) " +
                "OR ([Расход топлива фактически] = @Original_Расход_топлива_фактически)) AND ((@I" +
                "sNull_Расход_топлива_экономия_перерасход = 1 AND [Расход топлива экономия перера" +
                "сход] IS NULL) OR ([Расход топлива экономия перерасход] = @Original_Расход_топли" +
                "ва_экономия_перерасход)));\r\nSELECT id_Данных, [ID_Путевого листа], Число, [Время" +
                " выезда], [Время возвращения], [Время в наряде], [Показания спидометра при выезд" +
                "е], [Показания спидометра при возвращении], [Пробег км], [Остаток топлива при вы" +
                "езде], [Остаток топлива при возвращении], [Заправлено топлива л], [Дата и № чека" +
                " АЗС], [Расход топлива по норме], [Расход топлива фактически], [Расход топлива э" +
                "кономия перерасход] FROM [Данные Путевой лист легкового авто] WHERE (id_Данных =" +
                " @id_Данных)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id_Данных", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_Данных", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Число", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Число", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Время_выезда", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время выезда", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Время_возвращения", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время возвращения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Время_в_наряде", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время в наряде", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Показания_спидометра_при_выезде", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра при выезде", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Показания_спидометра_при_возвращении", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра при возвращении", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Пробег_км", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пробег км", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Остаток_топлива_при_выезде", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток топлива при выезде", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Остаток_топлива_при_возвращении", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток топлива при возвращении", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Заправлено_топлива_л", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заправлено топлива л", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и № чека АЗС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Расход_топлива_по_норме", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива по норме", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Расход_топлива_фактически", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива фактически", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Расход_топлива_экономия_перерасход", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива экономия перерасход", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_Данных", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_Данных", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Число", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Число", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Время_выезда", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время выезда", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Время_возвращения", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время возвращения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Время_в_наряде", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время в наряде", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Показания_спидометра_при_выезде", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра при выезде", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Показания_спидометра_при_возвращении", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра при возвращении", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Пробег_км", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пробег км", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Остаток_топлива_при_выезде", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток топлива при выезде", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Остаток_топлива_при_возвращении", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток топлива при возвращении", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Заправлено_топлива_л", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заправлено топлива л", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и № чека АЗС", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и № чека АЗС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Расход_топлива_по_норме", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива по норме", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Расход_топлива_по_норме", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива по норме", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Расход_топлива_фактически", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива фактически", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Расход_топлива_фактически", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива фактически", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Расход_топлива_экономия_перерасход", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива экономия перерасход", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Расход_топлива_экономия_перерасход", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расход топлива экономия перерасход", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT id_Данных, [ID_Путевого листа], Число, [Время выезда], [Время возвращения], [Время в наряде], [Показания спидометра при выезде], [Показания спидометра при возвращении], [Пробег км], [Остаток топлива при выезде], [Остаток топлива при возвращении], [Заправлено топлива л], [Дата и № чека АЗС], [Расход топлива по норме], [Расход топлива фактически], [Расход топлива экономия перерасход] FROM dbo.[Данные Путевой лист легкового авто]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Путевые_листыDataSet.Данные_Путевой_лист_легкового_автоDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Путевые_листыDataSet.Данные_Путевой_лист_легкового_автоDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Путевые_листыDataSet.Данные_Путевой_лист_легкового_автоDataTable dataTable = new Путевые_листыDataSet.Данные_Путевой_лист_легкового_автоDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Путевые_листыDataSet.Данные_Путевой_лист_легкового_автоDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Путевые_листыDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Данные Путевой лист легкового авто");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_id_Данных, 
                    global::System.Nullable<int> Original_ID_Путевого_листа, 
                    string Original_Число, 
                    System.TimeSpan Original_Время_выезда, 
                    System.TimeSpan Original_Время_возвращения, 
                    System.TimeSpan Original_Время_в_наряде, 
                    int Original_Показания_спидометра_при_выезде, 
                    int Original_Показания_спидометра_при_возвращении, 
                    string Original_Пробег_км, 
                    double Original_Остаток_топлива_при_выезде, 
                    double Original_Остаток_топлива_при_возвращении, 
                    double Original_Заправлено_топлива_л, 
                    string p2, 
                    global::System.Nullable<double> Original_Расход_топлива_по_норме, 
                    global::System.Nullable<double> Original_Расход_топлива_фактически, 
                    global::System.Nullable<double> Original_Расход_топлива_экономия_перерасход) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id_Данных));
            if ((Original_ID_Путевого_листа.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_Путевого_листа.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Число == null)) {
                throw new global::System.ArgumentNullException("Original_Число");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Число));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.TimeSpan)(Original_Время_выезда));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.TimeSpan)(Original_Время_возвращения));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.TimeSpan)(Original_Время_в_наряде));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_Показания_спидометра_при_выезде));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_Показания_спидометра_при_возвращении));
            if ((Original_Пробег_км == null)) {
                throw new global::System.ArgumentNullException("Original_Пробег_км");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Пробег_км));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_Остаток_топлива_при_выезде));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((double)(Original_Остаток_топлива_при_возвращении));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((double)(Original_Заправлено_топлива_л));
            if ((p2 == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(p2));
            }
            if ((Original_Расход_топлива_по_норме.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((double)(Original_Расход_топлива_по_норме.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_Расход_топлива_фактически.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((double)(Original_Расход_топлива_фактически.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Расход_топлива_экономия_перерасход.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((double)(Original_Расход_топлива_экономия_перерасход.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int id_Данных, 
                    global::System.Nullable<int> ID_Путевого_листа, 
                    string Число, 
                    System.TimeSpan Время_выезда, 
                    System.TimeSpan Время_возвращения, 
                    System.TimeSpan Время_в_наряде, 
                    int Показания_спидометра_при_выезде, 
                    int Показания_спидометра_при_возвращении, 
                    string Пробег_км, 
                    double Остаток_топлива_при_выезде, 
                    double Остаток_топлива_при_возвращении, 
                    double Заправлено_топлива_л, 
                    string p1, 
                    global::System.Nullable<double> Расход_топлива_по_норме, 
                    global::System.Nullable<double> Расход_топлива_фактически, 
                    global::System.Nullable<double> Расход_топлива_экономия_перерасход) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(id_Данных));
            if ((ID_Путевого_листа.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_Путевого_листа.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Число == null)) {
                throw new global::System.ArgumentNullException("Число");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Число));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.TimeSpan)(Время_выезда));
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.TimeSpan)(Время_возвращения));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.TimeSpan)(Время_в_наряде));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Показания_спидометра_при_выезде));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Показания_спидометра_при_возвращении));
            if ((Пробег_км == null)) {
                throw new global::System.ArgumentNullException("Пробег_км");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Пробег_км));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((double)(Остаток_топлива_при_выезде));
            this.Adapter.InsertCommand.Parameters[10].Value = ((double)(Остаток_топлива_при_возвращении));
            this.Adapter.InsertCommand.Parameters[11].Value = ((double)(Заправлено_топлива_л));
            if ((p1 == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(p1));
            }
            if ((Расход_топлива_по_норме.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(Расход_топлива_по_норме.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Расход_топлива_фактически.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(Расход_топлива_фактически.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Расход_топлива_экономия_перерасход.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((double)(Расход_топлива_экономия_перерасход.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int id_Данных, 
                    global::System.Nullable<int> ID_Путевого_листа, 
                    string Число, 
                    System.TimeSpan Время_выезда, 
                    System.TimeSpan Время_возвращения, 
                    System.TimeSpan Время_в_наряде, 
                    int Показания_спидометра_при_выезде, 
                    int Показания_спидометра_при_возвращении, 
                    string Пробег_км, 
                    double Остаток_топлива_при_выезде, 
                    double Остаток_топлива_при_возвращении, 
                    double Заправлено_топлива_л, 
                    string p1, 
                    global::System.Nullable<double> Расход_топлива_по_норме, 
                    global::System.Nullable<double> Расход_топлива_фактически, 
                    global::System.Nullable<double> Расход_топлива_экономия_перерасход, 
                    int Original_id_Данных, 
                    global::System.Nullable<int> Original_ID_Путевого_листа, 
                    string Original_Число, 
                    System.TimeSpan Original_Время_выезда, 
                    System.TimeSpan Original_Время_возвращения, 
                    System.TimeSpan Original_Время_в_наряде, 
                    int Original_Показания_спидометра_при_выезде, 
                    int Original_Показания_спидометра_при_возвращении, 
                    string Original_Пробег_км, 
                    double Original_Остаток_топлива_при_выезде, 
                    double Original_Остаток_топлива_при_возвращении, 
                    double Original_Заправлено_топлива_л, 
                    string p2, 
                    global::System.Nullable<double> Original_Расход_топлива_по_норме, 
                    global::System.Nullable<double> Original_Расход_топлива_фактически, 
                    global::System.Nullable<double> Original_Расход_топлива_экономия_перерасход) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(id_Данных));
            if ((ID_Путевого_листа.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_Путевого_листа.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Число == null)) {
                throw new global::System.ArgumentNullException("Число");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Число));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.TimeSpan)(Время_выезда));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.TimeSpan)(Время_возвращения));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.TimeSpan)(Время_в_наряде));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Показания_спидометра_при_выезде));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Показания_спидометра_при_возвращении));
            if ((Пробег_км == null)) {
                throw new global::System.ArgumentNullException("Пробег_км");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Пробег_км));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Остаток_топлива_при_выезде));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(Остаток_топлива_при_возвращении));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(Заправлено_топлива_л));
            if ((p1 == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(p1));
            }
            if ((Расход_топлива_по_норме.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(Расход_топлива_по_норме.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Расход_топлива_фактически.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(Расход_топлива_фактически.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Расход_топлива_экономия_перерасход.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(Расход_топлива_экономия_перерасход.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_id_Данных));
            if ((Original_ID_Путевого_листа.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_ID_Путевого_листа.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Число == null)) {
                throw new global::System.ArgumentNullException("Original_Число");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Число));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.TimeSpan)(Original_Время_выезда));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.TimeSpan)(Original_Время_возвращения));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((System.TimeSpan)(Original_Время_в_наряде));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_Показания_спидометра_при_выезде));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Original_Показания_спидометра_при_возвращении));
            if ((Original_Пробег_км == null)) {
                throw new global::System.ArgumentNullException("Original_Пробег_км");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Пробег_км));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((double)(Original_Остаток_топлива_при_выезде));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(Original_Остаток_топлива_при_возвращении));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((double)(Original_Заправлено_топлива_л));
            if ((p2 == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(p2));
            }
            if ((Original_Расход_топлива_по_норме.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((double)(Original_Расход_топлива_по_норме.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_Расход_топлива_фактически.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((double)(Original_Расход_топлива_фактически.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_Расход_топлива_экономия_перерасход.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((double)(Original_Расход_топлива_экономия_перерасход.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> ID_Путевого_листа, 
                    string Число, 
                    System.TimeSpan Время_выезда, 
                    System.TimeSpan Время_возвращения, 
                    System.TimeSpan Время_в_наряде, 
                    int Показания_спидометра_при_выезде, 
                    int Показания_спидометра_при_возвращении, 
                    string Пробег_км, 
                    double Остаток_топлива_при_выезде, 
                    double Остаток_топлива_при_возвращении, 
                    double Заправлено_топлива_л, 
                    string p1, 
                    global::System.Nullable<double> Расход_топлива_по_норме, 
                    global::System.Nullable<double> Расход_топлива_фактически, 
                    global::System.Nullable<double> Расход_топлива_экономия_перерасход, 
                    int Original_id_Данных, 
                    global::System.Nullable<int> Original_ID_Путевого_листа, 
                    string Original_Число, 
                    System.TimeSpan Original_Время_выезда, 
                    System.TimeSpan Original_Время_возвращения, 
                    System.TimeSpan Original_Время_в_наряде, 
                    int Original_Показания_спидометра_при_выезде, 
                    int Original_Показания_спидометра_при_возвращении, 
                    string Original_Пробег_км, 
                    double Original_Остаток_топлива_при_выезде, 
                    double Original_Остаток_топлива_при_возвращении, 
                    double Original_Заправлено_топлива_л, 
                    string p2, 
                    global::System.Nullable<double> Original_Расход_топлива_по_норме, 
                    global::System.Nullable<double> Original_Расход_топлива_фактически, 
                    global::System.Nullable<double> Original_Расход_топлива_экономия_перерасход) {
            return this.Update(Original_id_Данных, ID_Путевого_листа, Число, Время_выезда, Время_возвращения, Время_в_наряде, Показания_спидометра_при_выезде, Показания_спидометра_при_возвращении, Пробег_км, Остаток_топлива_при_выезде, Остаток_топлива_при_возвращении, Заправлено_топлива_л, p1, Расход_топлива_по_норме, Расход_топлива_фактически, Расход_топлива_экономия_перерасход, Original_id_Данных, Original_ID_Путевого_листа, Original_Число, Original_Время_выезда, Original_Время_возвращения, Original_Время_в_наряде, Original_Показания_спидометра_при_выезде, Original_Показания_спидометра_при_возвращении, Original_Пробег_км, Original_Остаток_топлива_при_выезде, Original_Остаток_топлива_при_возвращении, Original_Заправлено_топлива_л, p2, Original_Расход_топлива_по_норме, Original_Расход_топлива_фактически, Original_Расход_топлива_экономия_перерасход);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Движение_ТСМTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Движение_ТСМTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Движение ТСМ";
            tableMapping.ColumnMappings.Add("ID_Движение ТМЦ", "ID_Движение ТМЦ");
            tableMapping.ColumnMappings.Add("ID_Путевого листа", "ID_Путевого листа");
            tableMapping.ColumnMappings.Add("Остаток ТСМ при выезде", "Остаток ТСМ при выезде");
            tableMapping.ColumnMappings.Add("Остаток ТСМ при возвращении", "Остаток ТСМ при возвращении");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Движение ТСМ] WHERE (([ID_Движение ТМЦ] = @Original_ID_Движение_ТМЦ) AND ([ID_Путевого листа] = @Original_ID_Путевого_листа) AND ([Остаток ТСМ при выезде] = @Original_Остаток_ТСМ_при_выезде) AND ((@IsNull_Остаток_ТСМ_при_возвращении = 1 AND [Остаток ТСМ при возвращении] IS NULL) OR ([Остаток ТСМ при возвращении] = @Original_Остаток_ТСМ_при_возвращении)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Движение_ТМЦ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Движение ТМЦ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Остаток_ТСМ_при_выезде", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток ТСМ при выезде", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Остаток_ТСМ_при_возвращении", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток ТСМ при возвращении", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Остаток_ТСМ_при_возвращении", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток ТСМ при возвращении", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Движение ТСМ] ([ID_Движение ТМЦ], [ID_Путевого листа], [Остаток ТСМ при выезде], [Остаток ТСМ при возвращении]) VALUES (@ID_Движение_ТМЦ, @ID_Путевого_листа, @Остаток_ТСМ_при_выезде, @Остаток_ТСМ_при_возвращении);
SELECT [ID_Движение ТМЦ], [ID_Путевого листа], [Остаток ТСМ при выезде], [Остаток ТСМ при возвращении] FROM [Движение ТСМ] WHERE ([ID_Движение ТМЦ] = @ID_Движение_ТМЦ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Движение_ТМЦ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Движение ТМЦ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Остаток_ТСМ_при_выезде", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток ТСМ при выезде", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Остаток_ТСМ_при_возвращении", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток ТСМ при возвращении", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Движение ТСМ] SET [ID_Движение ТМЦ] = @ID_Движение_ТМЦ, [ID_Путевого листа] = @ID_Путевого_листа, [Остаток ТСМ при выезде] = @Остаток_ТСМ_при_выезде, [Остаток ТСМ при возвращении] = @Остаток_ТСМ_при_возвращении WHERE (([ID_Движение ТМЦ] = @Original_ID_Движение_ТМЦ) AND ([ID_Путевого листа] = @Original_ID_Путевого_листа) AND ([Остаток ТСМ при выезде] = @Original_Остаток_ТСМ_при_выезде) AND ((@IsNull_Остаток_ТСМ_при_возвращении = 1 AND [Остаток ТСМ при возвращении] IS NULL) OR ([Остаток ТСМ при возвращении] = @Original_Остаток_ТСМ_при_возвращении)));
SELECT [ID_Движение ТМЦ], [ID_Путевого листа], [Остаток ТСМ при выезде], [Остаток ТСМ при возвращении] FROM [Движение ТСМ] WHERE ([ID_Движение ТМЦ] = @ID_Движение_ТМЦ)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Движение_ТМЦ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Движение ТМЦ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Остаток_ТСМ_при_выезде", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток ТСМ при выезде", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Остаток_ТСМ_при_возвращении", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток ТСМ при возвращении", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Движение_ТМЦ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Движение ТМЦ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Остаток_ТСМ_при_выезде", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток ТСМ при выезде", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Остаток_ТСМ_при_возвращении", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток ТСМ при возвращении", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Остаток_ТСМ_при_возвращении", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Остаток ТСМ при возвращении", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [ID_Движение ТМЦ], [ID_Путевого листа], [Остаток ТСМ при выезде], [Остаток" +
                " ТСМ при возвращении] FROM dbo.[Движение ТСМ]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Путевые_листыDataSet.Движение_ТСМDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Путевые_листыDataSet.Движение_ТСМDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Путевые_листыDataSet.Движение_ТСМDataTable dataTable = new Путевые_листыDataSet.Движение_ТСМDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Путевые_листыDataSet.Движение_ТСМDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Путевые_листыDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Движение ТСМ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Движение_ТМЦ, int Original_ID_Путевого_листа, string Original_Остаток_ТСМ_при_выезде, string Original_Остаток_ТСМ_при_возвращении) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Движение_ТМЦ));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Путевого_листа));
            if ((Original_Остаток_ТСМ_при_выезде == null)) {
                throw new global::System.ArgumentNullException("Original_Остаток_ТСМ_при_выезде");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Остаток_ТСМ_при_выезде));
            }
            if ((Original_Остаток_ТСМ_при_возвращении == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Остаток_ТСМ_при_возвращении));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Движение_ТМЦ, int ID_Путевого_листа, string Остаток_ТСМ_при_выезде, string Остаток_ТСМ_при_возвращении) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Движение_ТМЦ));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_Путевого_листа));
            if ((Остаток_ТСМ_при_выезде == null)) {
                throw new global::System.ArgumentNullException("Остаток_ТСМ_при_выезде");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Остаток_ТСМ_при_выезде));
            }
            if ((Остаток_ТСМ_при_возвращении == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Остаток_ТСМ_при_возвращении));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Движение_ТМЦ, int ID_Путевого_листа, string Остаток_ТСМ_при_выезде, string Остаток_ТСМ_при_возвращении, int Original_ID_Движение_ТМЦ, int Original_ID_Путевого_листа, string Original_Остаток_ТСМ_при_выезде, string Original_Остаток_ТСМ_при_возвращении) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Движение_ТМЦ));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_Путевого_листа));
            if ((Остаток_ТСМ_при_выезде == null)) {
                throw new global::System.ArgumentNullException("Остаток_ТСМ_при_выезде");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Остаток_ТСМ_при_выезде));
            }
            if ((Остаток_ТСМ_при_возвращении == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Остаток_ТСМ_при_возвращении));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_Движение_ТМЦ));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_Путевого_листа));
            if ((Original_Остаток_ТСМ_при_выезде == null)) {
                throw new global::System.ArgumentNullException("Original_Остаток_ТСМ_при_выезде");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Остаток_ТСМ_при_выезде));
            }
            if ((Original_Остаток_ТСМ_при_возвращении == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Остаток_ТСМ_при_возвращении));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Путевого_листа, string Остаток_ТСМ_при_выезде, string Остаток_ТСМ_при_возвращении, int Original_ID_Движение_ТМЦ, int Original_ID_Путевого_листа, string Original_Остаток_ТСМ_при_выезде, string Original_Остаток_ТСМ_при_возвращении) {
            return this.Update(Original_ID_Движение_ТМЦ, ID_Путевого_листа, Остаток_ТСМ_при_выезде, Остаток_ТСМ_при_возвращении, Original_ID_Движение_ТМЦ, Original_ID_Путевого_листа, Original_Остаток_ТСМ_при_выезде, Original_Остаток_ТСМ_при_возвращении);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Задание_водителюTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Задание_водителюTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Задание водителю";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("ID_Путевого листа", "ID_Путевого листа");
            tableMapping.ColumnMappings.Add("Заказчик", "Заказчик");
            tableMapping.ColumnMappings.Add("Дата и время прибытия", "Дата и время прибытия");
            tableMapping.ColumnMappings.Add("Дата и время убытия", "Дата и время убытия");
            tableMapping.ColumnMappings.Add("Пункт отправления", "Пункт отправления");
            tableMapping.ColumnMappings.Add("Пункт назначения", "Пункт назначения");
            tableMapping.ColumnMappings.Add("Расстояние км", "Расстояние км");
            tableMapping.ColumnMappings.Add("Наименование груза", "Наименование груза");
            tableMapping.ColumnMappings.Add("Вес груза т", "Вес груза т");
            tableMapping.ColumnMappings.Add("Количество поездок с грузом час", "Количество поездок с грузом час");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Задание водителю] WHERE (([id] = @Original_id) AND ([ID_Путевого листа] = @Original_ID_Путевого_листа) AND ((@IsNull_Заказчик = 1 AND [Заказчик] IS NULL) OR ([Заказчик] = @Original_Заказчик)) AND ((@IsNull_Дата_и_время_прибытия = 1 AND [Дата и время прибытия] IS NULL) OR ([Дата и время прибытия] = @Original_Дата_и_время_прибытия)) AND ((@IsNull_Дата_и_время_убытия = 1 AND [Дата и время убытия] IS NULL) OR ([Дата и время убытия] = @Original_Дата_и_время_убытия)) AND ((@IsNull_Пункт_отправления = 1 AND [Пункт отправления] IS NULL) OR ([Пункт отправления] = @Original_Пункт_отправления)) AND ((@IsNull_Пункт_назначения = 1 AND [Пункт назначения] IS NULL) OR ([Пункт назначения] = @Original_Пункт_назначения)) AND ((@IsNull_Расстояние_км = 1 AND [Расстояние км] IS NULL) OR ([Расстояние км] = @Original_Расстояние_км)) AND ((@IsNull_Наименование_груза = 1 AND [Наименование груза] IS NULL) OR ([Наименование груза] = @Original_Наименование_груза)) AND ((@IsNull_Вес_груза_т = 1 AND [Вес груза т] IS NULL) OR ([Вес груза т] = @Original_Вес_груза_т)) AND ((@IsNull_Количество_поездок_с_грузом_час = 1 AND [Количество поездок с грузом час] IS NULL) OR ([Количество поездок с грузом час] = @Original_Количество_поездок_с_грузом_час)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Заказчик", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заказчик", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Заказчик", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заказчик", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Дата_и_время_прибытия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время прибытия", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_и_время_прибытия", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время прибытия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Дата_и_время_убытия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время убытия", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_и_время_убытия", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время убытия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Пункт_отправления", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пункт отправления", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Пункт_отправления", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пункт отправления", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Пункт_назначения", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пункт назначения", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Пункт_назначения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пункт назначения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Расстояние_км", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расстояние км", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Расстояние_км", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расстояние км", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Наименование_груза", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование груза", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование_груза", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование груза", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Вес_груза_т", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вес груза т", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Вес_груза_т", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вес груза т", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Количество_поездок_с_грузом_час", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество поездок с грузом час", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество_поездок_с_грузом_час", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество поездок с грузом час", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Задание водителю] ([id], [ID_Путевого листа], [Заказчик], [Дата и время прибытия], [Дата и время убытия], [Пункт отправления], [Пункт назначения], [Расстояние км], [Наименование груза], [Вес груза т], [Количество поездок с грузом час]) VALUES (@id, @ID_Путевого_листа, @Заказчик, @Дата_и_время_прибытия, @Дата_и_время_убытия, @Пункт_отправления, @Пункт_назначения, @Расстояние_км, @Наименование_груза, @Вес_груза_т, @Количество_поездок_с_грузом_час);
SELECT id, [ID_Путевого листа], Заказчик, [Дата и время прибытия], [Дата и время убытия], [Пункт отправления], [Пункт назначения], [Расстояние км], [Наименование груза], [Вес груза т], [Количество поездок с грузом час] FROM [Задание водителю] WHERE (id = @id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Заказчик", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заказчик", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_и_время_прибытия", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время прибытия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_и_время_убытия", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время убытия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Пункт_отправления", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пункт отправления", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Пункт_назначения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пункт назначения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Расстояние_км", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расстояние км", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование_груза", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование груза", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Вес_груза_т", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вес груза т", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество_поездок_с_грузом_час", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество поездок с грузом час", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Задание водителю] SET [id] = @id, [ID_Путевого листа] = @ID_Путевог" +
                "о_листа, [Заказчик] = @Заказчик, [Дата и время прибытия] = @Дата_и_время_прибыти" +
                "я, [Дата и время убытия] = @Дата_и_время_убытия, [Пункт отправления] = @Пункт_от" +
                "правления, [Пункт назначения] = @Пункт_назначения, [Расстояние км] = @Расстояние" +
                "_км, [Наименование груза] = @Наименование_груза, [Вес груза т] = @Вес_груза_т, [" +
                "Количество поездок с грузом час] = @Количество_поездок_с_грузом_час WHERE (([id]" +
                " = @Original_id) AND ([ID_Путевого листа] = @Original_ID_Путевого_листа) AND ((@" +
                "IsNull_Заказчик = 1 AND [Заказчик] IS NULL) OR ([Заказчик] = @Original_Заказчик)" +
                ") AND ((@IsNull_Дата_и_время_прибытия = 1 AND [Дата и время прибытия] IS NULL) O" +
                "R ([Дата и время прибытия] = @Original_Дата_и_время_прибытия)) AND ((@IsNull_Дат" +
                "а_и_время_убытия = 1 AND [Дата и время убытия] IS NULL) OR ([Дата и время убытия" +
                "] = @Original_Дата_и_время_убытия)) AND ((@IsNull_Пункт_отправления = 1 AND [Пун" +
                "кт отправления] IS NULL) OR ([Пункт отправления] = @Original_Пункт_отправления))" +
                " AND ((@IsNull_Пункт_назначения = 1 AND [Пункт назначения] IS NULL) OR ([Пункт н" +
                "азначения] = @Original_Пункт_назначения)) AND ((@IsNull_Расстояние_км = 1 AND [Р" +
                "асстояние км] IS NULL) OR ([Расстояние км] = @Original_Расстояние_км)) AND ((@Is" +
                "Null_Наименование_груза = 1 AND [Наименование груза] IS NULL) OR ([Наименование " +
                "груза] = @Original_Наименование_груза)) AND ((@IsNull_Вес_груза_т = 1 AND [Вес г" +
                "руза т] IS NULL) OR ([Вес груза т] = @Original_Вес_груза_т)) AND ((@IsNull_Колич" +
                "ество_поездок_с_грузом_час = 1 AND [Количество поездок с грузом час] IS NULL) OR" +
                " ([Количество поездок с грузом час] = @Original_Количество_поездок_с_грузом_час)" +
                "));\r\nSELECT id, [ID_Путевого листа], Заказчик, [Дата и время прибытия], [Дата и " +
                "время убытия], [Пункт отправления], [Пункт назначения], [Расстояние км], [Наимен" +
                "ование груза], [Вес груза т], [Количество поездок с грузом час] FROM [Задание во" +
                "дителю] WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Заказчик", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заказчик", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_и_время_прибытия", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время прибытия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_и_время_убытия", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время убытия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Пункт_отправления", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пункт отправления", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Пункт_назначения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пункт назначения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Расстояние_км", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расстояние км", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование_груза", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование груза", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Вес_груза_т", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вес груза т", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество_поездок_с_грузом_час", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество поездок с грузом час", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Заказчик", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заказчик", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Заказчик", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заказчик", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Дата_и_время_прибытия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время прибытия", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_и_время_прибытия", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время прибытия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Дата_и_время_убытия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время убытия", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_и_время_убытия", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время убытия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Пункт_отправления", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пункт отправления", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Пункт_отправления", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пункт отправления", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Пункт_назначения", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пункт назначения", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Пункт_назначения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пункт назначения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Расстояние_км", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расстояние км", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Расстояние_км", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Расстояние км", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Наименование_груза", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование груза", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование_груза", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование груза", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Вес_груза_т", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вес груза т", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Вес_груза_т", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вес груза т", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Количество_поездок_с_грузом_час", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество поездок с грузом час", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество_поездок_с_грузом_час", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество поездок с грузом час", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, [ID_Путевого листа], Заказчик, [Дата и время прибытия], [Дата и время " +
                "убытия], [Пункт отправления], [Пункт назначения], [Расстояние км], [Наименование" +
                " груза], [Вес груза т], [Количество поездок с грузом час] FROM dbo.[Задание води" +
                "телю]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Путевые_листыDataSet.Задание_водителюDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Путевые_листыDataSet.Задание_водителюDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Путевые_листыDataSet.Задание_водителюDataTable dataTable = new Путевые_листыDataSet.Задание_водителюDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Путевые_листыDataSet.Задание_водителюDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Путевые_листыDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Задание водителю");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, int Original_ID_Путевого_листа, string Original_Заказчик, global::System.Nullable<global::System.DateTime> Original_Дата_и_время_прибытия, global::System.Nullable<global::System.DateTime> Original_Дата_и_время_убытия, string Original_Пункт_отправления, string Original_Пункт_назначения, global::System.Nullable<double> Original_Расстояние_км, string Original_Наименование_груза, global::System.Nullable<double> Original_Вес_груза_т, global::System.Nullable<int> Original_Количество_поездок_с_грузом_час) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Путевого_листа));
            if ((Original_Заказчик == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Заказчик));
            }
            if ((Original_Дата_и_время_прибытия.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_Дата_и_время_прибытия.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_Дата_и_время_убытия.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_Дата_и_время_убытия.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_Пункт_отправления == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Пункт_отправления));
            }
            if ((Original_Пункт_назначения == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Пункт_назначения));
            }
            if ((Original_Расстояние_км.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((double)(Original_Расстояние_км.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_Наименование_груза == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_Наименование_груза));
            }
            if ((Original_Вес_груза_т.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((double)(Original_Вес_груза_т.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Количество_поездок_с_грузом_час.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_Количество_поездок_с_грузом_час.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int id, int ID_Путевого_листа, string Заказчик, global::System.Nullable<global::System.DateTime> Дата_и_время_прибытия, global::System.Nullable<global::System.DateTime> Дата_и_время_убытия, string Пункт_отправления, string Пункт_назначения, global::System.Nullable<double> Расстояние_км, string Наименование_груза, global::System.Nullable<double> Вес_груза_т, global::System.Nullable<int> Количество_поездок_с_грузом_час) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_Путевого_листа));
            if ((Заказчик == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Заказчик));
            }
            if ((Дата_и_время_прибытия.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Дата_и_время_прибытия.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Дата_и_время_убытия.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Дата_и_время_убытия.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Пункт_отправления == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Пункт_отправления));
            }
            if ((Пункт_назначения == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Пункт_назначения));
            }
            if ((Расстояние_км.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(Расстояние_км.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Наименование_груза == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Наименование_груза));
            }
            if ((Вес_груза_т.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(Вес_груза_т.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Количество_поездок_с_грузом_час.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(Количество_поездок_с_грузом_час.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int id, 
                    int ID_Путевого_листа, 
                    string Заказчик, 
                    global::System.Nullable<global::System.DateTime> Дата_и_время_прибытия, 
                    global::System.Nullable<global::System.DateTime> Дата_и_время_убытия, 
                    string Пункт_отправления, 
                    string Пункт_назначения, 
                    global::System.Nullable<double> Расстояние_км, 
                    string Наименование_груза, 
                    global::System.Nullable<double> Вес_груза_т, 
                    global::System.Nullable<int> Количество_поездок_с_грузом_час, 
                    int Original_id, 
                    int Original_ID_Путевого_листа, 
                    string Original_Заказчик, 
                    global::System.Nullable<global::System.DateTime> Original_Дата_и_время_прибытия, 
                    global::System.Nullable<global::System.DateTime> Original_Дата_и_время_убытия, 
                    string Original_Пункт_отправления, 
                    string Original_Пункт_назначения, 
                    global::System.Nullable<double> Original_Расстояние_км, 
                    string Original_Наименование_груза, 
                    global::System.Nullable<double> Original_Вес_груза_т, 
                    global::System.Nullable<int> Original_Количество_поездок_с_грузом_час) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_Путевого_листа));
            if ((Заказчик == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Заказчик));
            }
            if ((Дата_и_время_прибытия.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Дата_и_время_прибытия.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Дата_и_время_убытия.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Дата_и_время_убытия.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Пункт_отправления == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Пункт_отправления));
            }
            if ((Пункт_назначения == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Пункт_назначения));
            }
            if ((Расстояние_км.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(Расстояние_км.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Наименование_груза == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Наименование_груза));
            }
            if ((Вес_груза_т.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Вес_груза_т.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Количество_поездок_с_грузом_час.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Количество_поездок_с_грузом_час.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_id));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_ID_Путевого_листа));
            if ((Original_Заказчик == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Заказчик));
            }
            if ((Original_Дата_и_время_прибытия.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_Дата_и_время_прибытия.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_Дата_и_время_убытия.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_Дата_и_время_убытия.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Пункт_отправления == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Пункт_отправления));
            }
            if ((Original_Пункт_назначения == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Пункт_назначения));
            }
            if ((Original_Расстояние_км.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(Original_Расстояние_км.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_Наименование_груза == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Наименование_груза));
            }
            if ((Original_Вес_груза_т.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((double)(Original_Вес_груза_т.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_Количество_поездок_с_грузом_час.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(Original_Количество_поездок_с_грузом_час.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID_Путевого_листа, 
                    string Заказчик, 
                    global::System.Nullable<global::System.DateTime> Дата_и_время_прибытия, 
                    global::System.Nullable<global::System.DateTime> Дата_и_время_убытия, 
                    string Пункт_отправления, 
                    string Пункт_назначения, 
                    global::System.Nullable<double> Расстояние_км, 
                    string Наименование_груза, 
                    global::System.Nullable<double> Вес_груза_т, 
                    global::System.Nullable<int> Количество_поездок_с_грузом_час, 
                    int Original_id, 
                    int Original_ID_Путевого_листа, 
                    string Original_Заказчик, 
                    global::System.Nullable<global::System.DateTime> Original_Дата_и_время_прибытия, 
                    global::System.Nullable<global::System.DateTime> Original_Дата_и_время_убытия, 
                    string Original_Пункт_отправления, 
                    string Original_Пункт_назначения, 
                    global::System.Nullable<double> Original_Расстояние_км, 
                    string Original_Наименование_груза, 
                    global::System.Nullable<double> Original_Вес_груза_т, 
                    global::System.Nullable<int> Original_Количество_поездок_с_грузом_час) {
            return this.Update(Original_id, ID_Путевого_листа, Заказчик, Дата_и_время_прибытия, Дата_и_время_убытия, Пункт_отправления, Пункт_назначения, Расстояние_км, Наименование_груза, Вес_груза_т, Количество_поездок_с_грузом_час, Original_id, Original_ID_Путевого_листа, Original_Заказчик, Original_Дата_и_время_прибытия, Original_Дата_и_время_убытия, Original_Пункт_отправления, Original_Пункт_назначения, Original_Расстояние_км, Original_Наименование_груза, Original_Вес_груза_т, Original_Количество_поездок_с_грузом_час);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Заправка_ТСМTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Заправка_ТСМTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Заправка ТСМ";
            tableMapping.ColumnMappings.Add("ID_Заправка ТСМ", "ID_Заправка ТСМ");
            tableMapping.ColumnMappings.Add("Дата", "Дата");
            tableMapping.ColumnMappings.Add("Марка ТСМ", "Марка ТСМ");
            tableMapping.ColumnMappings.Add("Количество", "Количество");
            tableMapping.ColumnMappings.Add("ID_Путевого листа", "ID_Путевого листа");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Заправка ТСМ] WHERE (([ID_Заправка ТСМ] = @Original_ID_Заправка_ТСМ) AND ((@IsNull_Дата = 1 AND [Дата] IS NULL) OR ([Дата] = @Original_Дата)) AND ((@IsNull_Марка_ТСМ = 1 AND [Марка ТСМ] IS NULL) OR ([Марка ТСМ] = @Original_Марка_ТСМ)) AND ((@IsNull_Количество = 1 AND [Количество] IS NULL) OR ([Количество] = @Original_Количество)) AND ((@IsNull_ID_Путевого_листа = 1 AND [ID_Путевого листа] IS NULL) OR ([ID_Путевого листа] = @Original_ID_Путевого_листа)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Заправка_ТСМ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Заправка ТСМ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Дата", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Марка_ТСМ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка ТСМ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Марка_ТСМ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка ТСМ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Заправка ТСМ] ([Дата], [Марка ТСМ], [Количество], [ID_Путевого листа]) VALUES (@Дата, @Марка_ТСМ, @Количество, @ID_Путевого_листа);
SELECT [ID_Заправка ТСМ], Дата, [Марка ТСМ], Количество, [ID_Путевого листа] FROM [Заправка ТСМ] WHERE ([ID_Заправка ТСМ] = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Марка_ТСМ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка ТСМ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Заправка ТСМ] SET [Дата] = @Дата, [Марка ТСМ] = @Марка_ТСМ, [Количество] = @Количество, [ID_Путевого листа] = @ID_Путевого_листа WHERE (([ID_Заправка ТСМ] = @Original_ID_Заправка_ТСМ) AND ((@IsNull_Дата = 1 AND [Дата] IS NULL) OR ([Дата] = @Original_Дата)) AND ((@IsNull_Марка_ТСМ = 1 AND [Марка ТСМ] IS NULL) OR ([Марка ТСМ] = @Original_Марка_ТСМ)) AND ((@IsNull_Количество = 1 AND [Количество] IS NULL) OR ([Количество] = @Original_Количество)) AND ((@IsNull_ID_Путевого_листа = 1 AND [ID_Путевого листа] IS NULL) OR ([ID_Путевого листа] = @Original_ID_Путевого_листа)));
SELECT [ID_Заправка ТСМ], Дата, [Марка ТСМ], Количество, [ID_Путевого листа] FROM [Заправка ТСМ] WHERE ([ID_Заправка ТСМ] = @ID_Заправка_ТСМ)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Марка_ТСМ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка ТСМ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Заправка_ТСМ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Заправка ТСМ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Дата", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Марка_ТСМ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка ТСМ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Марка_ТСМ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка ТСМ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Заправка_ТСМ", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Заправка ТСМ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [ID_Заправка ТСМ], Дата, [Марка ТСМ], Количество, [ID_Путевого листа] FROM" +
                " dbo.[Заправка ТСМ]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Путевые_листыDataSet.Заправка_ТСМDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Путевые_листыDataSet.Заправка_ТСМDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Путевые_листыDataSet.Заправка_ТСМDataTable dataTable = new Путевые_листыDataSet.Заправка_ТСМDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Путевые_листыDataSet.Заправка_ТСМDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Путевые_листыDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Заправка ТСМ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Заправка_ТСМ, global::System.Nullable<global::System.DateTime> Original_Дата, string Original_Марка_ТСМ, global::System.Nullable<double> Original_Количество, global::System.Nullable<int> Original_ID_Путевого_листа) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Заправка_ТСМ));
            if ((Original_Дата.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_Дата.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Марка_ТСМ == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Марка_ТСМ));
            }
            if ((Original_Количество.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_Количество.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_Путевого_листа.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_ID_Путевого_листа.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<global::System.DateTime> Дата, string Марка_ТСМ, global::System.Nullable<double> Количество, global::System.Nullable<int> ID_Путевого_листа) {
            if ((Дата.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Дата.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Марка_ТСМ == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Марка_ТСМ));
            }
            if ((Количество.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(Количество.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ID_Путевого_листа.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(ID_Путевого_листа.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.DateTime> Дата, string Марка_ТСМ, global::System.Nullable<double> Количество, global::System.Nullable<int> ID_Путевого_листа, int Original_ID_Заправка_ТСМ, global::System.Nullable<global::System.DateTime> Original_Дата, string Original_Марка_ТСМ, global::System.Nullable<double> Original_Количество, global::System.Nullable<int> Original_ID_Путевого_листа, int ID_Заправка_ТСМ) {
            if ((Дата.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Дата.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Марка_ТСМ == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Марка_ТСМ));
            }
            if ((Количество.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(Количество.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ID_Путевого_листа.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ID_Путевого_листа.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_Заправка_ТСМ));
            if ((Original_Дата.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_Дата.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_Марка_ТСМ == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Марка_ТСМ));
            }
            if ((Original_Количество.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(Original_Количество.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_Путевого_листа.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_ID_Путевого_листа.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(ID_Заправка_ТСМ));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.DateTime> Дата, string Марка_ТСМ, global::System.Nullable<double> Количество, global::System.Nullable<int> ID_Путевого_листа, int Original_ID_Заправка_ТСМ, global::System.Nullable<global::System.DateTime> Original_Дата, string Original_Марка_ТСМ, global::System.Nullable<double> Original_Количество, global::System.Nullable<int> Original_ID_Путевого_листа) {
            return this.Update(Дата, Марка_ТСМ, Количество, ID_Путевого_листа, Original_ID_Заправка_ТСМ, Original_Дата, Original_Марка_ТСМ, Original_Количество, Original_ID_Путевого_листа, Original_ID_Заправка_ТСМ);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Личный_составTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Личный_составTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Личный состав";
            tableMapping.ColumnMappings.Add("табельный  номер", "табельный  номер");
            tableMapping.ColumnMappings.Add("ФИО", "ФИО");
            tableMapping.ColumnMappings.Add("серия водительского удостоверения", "серия водительского удостоверения");
            tableMapping.ColumnMappings.Add("номер водительского удостоверения", "номер водительского удостоверения");
            tableMapping.ColumnMappings.Add("классность", "классность");
            tableMapping.ColumnMappings.Add("срок действия мед. справки", "срок действия мед_ справки");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Личный состав] WHERE (([табельный  номер] = @Original_табельный__номер) AND ([ФИО] = @Original_ФИО) AND ([серия водительского удостоверения] = @Original_серия_водительского_удостоверения) AND ([номер водительского удостоверения] = @Original_номер_водительского_удостоверения) AND ([классность] = @Original_классность) AND ([срок действия мед. справки] = @p2))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_табельный__номер", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "табельный  номер", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ФИО", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФИО", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_серия_водительского_удостоверения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "серия водительского удостоверения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_номер_водительского_удостоверения", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "номер водительского удостоверения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_классность", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "классность", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "срок действия мед. справки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Личный состав] ([табельный  номер], [ФИО], [серия водительского удостоверения], [номер водительского удостоверения], [классность], [срок действия мед. справки]) VALUES (@табельный__номер, @ФИО, @серия_водительского_удостоверения, @номер_водительского_удостоверения, @классность, @p1);
SELECT [табельный  номер], ФИО, [серия водительского удостоверения], [номер водительского удостоверения], классность, [срок действия мед. справки] FROM [Личный состав] WHERE ([табельный  номер] = @табельный__номер)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@табельный__номер", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "табельный  номер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ФИО", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФИО", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@серия_водительского_удостоверения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "серия водительского удостоверения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@номер_водительского_удостоверения", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "номер водительского удостоверения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@классность", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "классность", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "срок действия мед. справки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Личный состав] SET [табельный  номер] = @табельный__номер, [ФИО] = @ФИО, [серия водительского удостоверения] = @серия_водительского_удостоверения, [номер водительского удостоверения] = @номер_водительского_удостоверения, [классность] = @классность, [срок действия мед. справки] = @p1 WHERE (([табельный  номер] = @Original_табельный__номер) AND ([ФИО] = @Original_ФИО) AND ([серия водительского удостоверения] = @Original_серия_водительского_удостоверения) AND ([номер водительского удостоверения] = @Original_номер_водительского_удостоверения) AND ([классность] = @Original_классность) AND ([срок действия мед. справки] = @p2));
SELECT [табельный  номер], ФИО, [серия водительского удостоверения], [номер водительского удостоверения], классность, [срок действия мед. справки] FROM [Личный состав] WHERE ([табельный  номер] = @табельный__номер)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@табельный__номер", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "табельный  номер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ФИО", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФИО", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@серия_водительского_удостоверения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "серия водительского удостоверения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@номер_водительского_удостоверения", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "номер водительского удостоверения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@классность", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "классность", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "срок действия мед. справки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_табельный__номер", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "табельный  номер", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ФИО", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФИО", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_серия_водительского_удостоверения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "серия водительского удостоверения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_номер_водительского_удостоверения", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "номер водительского удостоверения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_классность", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "классность", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "срок действия мед. справки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [табельный  номер], ФИО, [серия водительского удостоверения], [номер водит" +
                "ельского удостоверения], классность, [срок действия мед. справки] FROM dbo.[Личн" +
                "ый состав]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Путевые_листыDataSet.Личный_составDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Путевые_листыDataSet.Личный_составDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Путевые_листыDataSet.Личный_составDataTable dataTable = new Путевые_листыDataSet.Личный_составDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Путевые_листыDataSet.Личный_составDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Путевые_листыDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Личный состав");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_табельный__номер, string Original_ФИО, string Original_серия_водительского_удостоверения, int Original_номер_водительского_удостоверения, int Original_классность, System.DateTime p2) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_табельный__номер));
            if ((Original_ФИО == null)) {
                throw new global::System.ArgumentNullException("Original_ФИО");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ФИО));
            }
            if ((Original_серия_водительского_удостоверения == null)) {
                throw new global::System.ArgumentNullException("Original_серия_водительского_удостоверения");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_серия_водительского_удостоверения));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_номер_водительского_удостоверения));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_классность));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(p2));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int табельный__номер, string ФИО, string серия_водительского_удостоверения, int номер_водительского_удостоверения, int классность, System.DateTime p1) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(табельный__номер));
            if ((ФИО == null)) {
                throw new global::System.ArgumentNullException("ФИО");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ФИО));
            }
            if ((серия_водительского_удостоверения == null)) {
                throw new global::System.ArgumentNullException("серия_водительского_удостоверения");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(серия_водительского_удостоверения));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(номер_водительского_удостоверения));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(классность));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(p1));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int табельный__номер, string ФИО, string серия_водительского_удостоверения, int номер_водительского_удостоверения, int классность, System.DateTime p1, int Original_табельный__номер, string Original_ФИО, string Original_серия_водительского_удостоверения, int Original_номер_водительского_удостоверения, int Original_классность, System.DateTime p2) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(табельный__номер));
            if ((ФИО == null)) {
                throw new global::System.ArgumentNullException("ФИО");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ФИО));
            }
            if ((серия_водительского_удостоверения == null)) {
                throw new global::System.ArgumentNullException("серия_водительского_удостоверения");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(серия_водительского_удостоверения));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(номер_водительского_удостоверения));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(классность));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(p1));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_табельный__номер));
            if ((Original_ФИО == null)) {
                throw new global::System.ArgumentNullException("Original_ФИО");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_ФИО));
            }
            if ((Original_серия_водительского_удостоверения == null)) {
                throw new global::System.ArgumentNullException("Original_серия_водительского_удостоверения");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_серия_водительского_удостоверения));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_номер_водительского_удостоверения));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_классность));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(p2));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ФИО, string серия_водительского_удостоверения, int номер_водительского_удостоверения, int классность, System.DateTime p1, int Original_табельный__номер, string Original_ФИО, string Original_серия_водительского_удостоверения, int Original_номер_водительского_удостоверения, int Original_классность, System.DateTime p2) {
            return this.Update(Original_табельный__номер, ФИО, серия_водительского_удостоверения, номер_водительского_удостоверения, классность, p1, Original_табельный__номер, Original_ФИО, Original_серия_водительского_удостоверения, Original_номер_водительского_удостоверения, Original_классность, p2);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Нормы_расхода_ГСМ_на_авто_тракторыTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Нормы_расхода_ГСМ_на_авто_тракторыTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Нормы расхода ГСМ на авто,тракторы";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Марка автомобиля", "Марка автомобиля");
            tableMapping.ColumnMappings.Add("Вид топлива", "Вид топлива");
            tableMapping.ColumnMappings.Add("Норма расхода на 100 км летняя 6%", "Норма расхода на 100 км летняя 6%");
            tableMapping.ColumnMappings.Add("Марка двигателя", "Марка двигателя");
            tableMapping.ColumnMappings.Add("Норма на машино час летняя", "Норма на машино час летняя");
            tableMapping.ColumnMappings.Add("Н-ма расх.масел на 100л р-да топлива моторное,л", "Н-ма расх_масел на 100л р-да топлива моторное,л");
            tableMapping.ColumnMappings.Add("Н-ма расх.масел на 100л р-да трансмиссионное,л", "Н-ма расх_масел на 100л р-да трансмиссионное,л");
            tableMapping.ColumnMappings.Add("Н-ма расх.масел на 100л р-да топлива специальное,л", "Н-ма расх_масел на 100л р-да топлива специальное,л");
            tableMapping.ColumnMappings.Add("Н-ма расх.масел на 100л р-да топлива пластичные смазки,л", "Н-ма расх_масел на 100л р-да топлива пластичные смазки,л");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Нормы расхода ГСМ на авто,тракторы] WHERE (([ID] = @Original_ID) AND ([Марка автомобиля] = @Original_Марка_автомобиля) AND ((@IsNull_Вид_топлива = 1 AND [Вид топлива] IS NULL) OR ([Вид топлива] = @Original_Вид_топлива)) AND ((@p3 = 1 AND [Норма расхода на 100 км летняя 6%] IS NULL) OR ([Норма расхода на 100 км летняя 6%] = @p2)) AND ((@IsNull_Марка_двигателя = 1 AND [Марка двигателя] IS NULL) OR ([Марка двигателя] = @Original_Марка_двигателя)) AND ((@IsNull_Норма_на_машино_час_летняя = 1 AND [Норма на машино час летняя] IS NULL) OR ([Норма на машино час летняя] = @Original_Норма_на_машино_час_летняя)) AND ((@p6 = 1 AND [Н-ма расх.масел на 100л р-да топлива моторное,л] IS NULL) OR ([Н-ма расх.масел на 100л р-да топлива моторное,л] = @p5)) AND ((@p9 = 1 AND [Н-ма расх.масел на 100л р-да трансмиссионное,л] IS NULL) OR ([Н-ма расх.масел на 100л р-да трансмиссионное,л] = @p8)) AND ((@p12 = 1 AND [Н-ма расх.масел на 100л р-да топлива специальное,л] IS NULL) OR ([Н-ма расх.масел на 100л р-да топлива специальное,л] = @p11)) AND ((@p15 = 1 AND [Н-ма расх.масел на 100л р-да топлива пластичные смазки,л] IS NULL) OR ([Н-ма расх.масел на 100л р-да топлива пластичные смазки,л] = @p14)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Марка_автомобиля", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка автомобиля", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Вид_топлива", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид топлива", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Вид_топлива", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид топлива", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма расхода на 100 км летняя 6%", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма расхода на 100 км летняя 6%", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Марка_двигателя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка двигателя", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Марка_двигателя", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка двигателя", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Норма_на_машино_час_летняя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма на машино час летняя", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Норма_на_машино_час_летняя", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма на машино час летняя", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива моторное,л", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива моторное,л", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да трансмиссионное,л", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да трансмиссионное,л", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p12", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива специальное,л", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива специальное,л", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p15", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива пластичные смазки,л", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p14", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива пластичные смазки,л", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Нормы расхода ГСМ на авто,тракторы] ([Марка автомобиля], [Вид топлива], [Норма расхода на 100 км летняя 6%], [Марка двигателя], [Норма на машино час летняя], [Н-ма расх.масел на 100л р-да топлива моторное,л], [Н-ма расх.масел на 100л р-да трансмиссионное,л], [Н-ма расх.масел на 100л р-да топлива специальное,л], [Н-ма расх.масел на 100л р-да топлива пластичные смазки,л]) VALUES (@Марка_автомобиля, @Вид_топлива, @p1, @Марка_двигателя, @Норма_на_машино_час_летняя, @p4, @p7, @p10, @p13);
SELECT ID, [Марка автомобиля], [Вид топлива], [Норма расхода на 100 км летняя 6%], [Марка двигателя], [Норма на машино час летняя], [Н-ма расх.масел на 100л р-да топлива моторное,л], [Н-ма расх.масел на 100л р-да трансмиссионное,л], [Н-ма расх.масел на 100л р-да топлива специальное,л], [Н-ма расх.масел на 100л р-да топлива пластичные смазки,л] FROM [Нормы расхода ГСМ на авто,тракторы] WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Марка_автомобиля", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка автомобиля", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Вид_топлива", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид топлива", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма расхода на 100 км летняя 6%", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Марка_двигателя", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка двигателя", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Норма_на_машино_час_летняя", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма на машино час летняя", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p4", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива моторное,л", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да трансмиссионное,л", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива специальное,л", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p13", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива пластичные смазки,л", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Нормы расхода ГСМ на авто,тракторы] SET [Марка автомобиля] = @Марка" +
                "_автомобиля, [Вид топлива] = @Вид_топлива, [Норма расхода на 100 км летняя 6%] =" +
                " @p1, [Марка двигателя] = @Марка_двигателя, [Норма на машино час летняя] = @Норм" +
                "а_на_машино_час_летняя, [Н-ма расх.масел на 100л р-да топлива моторное,л] = @p4," +
                " [Н-ма расх.масел на 100л р-да трансмиссионное,л] = @p7, [Н-ма расх.масел на 100" +
                "л р-да топлива специальное,л] = @p10, [Н-ма расх.масел на 100л р-да топлива плас" +
                "тичные смазки,л] = @p13 WHERE (([ID] = @Original_ID) AND ([Марка автомобиля] = @" +
                "Original_Марка_автомобиля) AND ((@IsNull_Вид_топлива = 1 AND [Вид топлива] IS NU" +
                "LL) OR ([Вид топлива] = @Original_Вид_топлива)) AND ((@p3 = 1 AND [Норма расхода" +
                " на 100 км летняя 6%] IS NULL) OR ([Норма расхода на 100 км летняя 6%] = @p2)) A" +
                "ND ((@IsNull_Марка_двигателя = 1 AND [Марка двигателя] IS NULL) OR ([Марка двига" +
                "теля] = @Original_Марка_двигателя)) AND ((@IsNull_Норма_на_машино_час_летняя = 1" +
                " AND [Норма на машино час летняя] IS NULL) OR ([Норма на машино час летняя] = @O" +
                "riginal_Норма_на_машино_час_летняя)) AND ((@p6 = 1 AND [Н-ма расх.масел на 100л " +
                "р-да топлива моторное,л] IS NULL) OR ([Н-ма расх.масел на 100л р-да топлива мото" +
                "рное,л] = @p5)) AND ((@p9 = 1 AND [Н-ма расх.масел на 100л р-да трансмиссионное," +
                "л] IS NULL) OR ([Н-ма расх.масел на 100л р-да трансмиссионное,л] = @p8)) AND ((@" +
                "p12 = 1 AND [Н-ма расх.масел на 100л р-да топлива специальное,л] IS NULL) OR ([Н" +
                "-ма расх.масел на 100л р-да топлива специальное,л] = @p11)) AND ((@p15 = 1 AND [" +
                "Н-ма расх.масел на 100л р-да топлива пластичные смазки,л] IS NULL) OR ([Н-ма рас" +
                "х.масел на 100л р-да топлива пластичные смазки,л] = @p14)));\r\nSELECT ID, [Марка " +
                "автомобиля], [Вид топлива], [Норма расхода на 100 км летняя 6%], [Марка двигател" +
                "я], [Норма на машино час летняя], [Н-ма расх.масел на 100л р-да топлива моторное" +
                ",л], [Н-ма расх.масел на 100л р-да трансмиссионное,л], [Н-ма расх.масел на 100л " +
                "р-да топлива специальное,л], [Н-ма расх.масел на 100л р-да топлива пластичные см" +
                "азки,л] FROM [Нормы расхода ГСМ на авто,тракторы] WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Марка_автомобиля", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка автомобиля", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Вид_топлива", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид топлива", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма расхода на 100 км летняя 6%", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Марка_двигателя", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка двигателя", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Норма_на_машино_час_летняя", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма на машино час летняя", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p4", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива моторное,л", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да трансмиссионное,л", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива специальное,л", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p13", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива пластичные смазки,л", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Марка_автомобиля", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка автомобиля", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Вид_топлива", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид топлива", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Вид_топлива", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид топлива", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма расхода на 100 км летняя 6%", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма расхода на 100 км летняя 6%", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Марка_двигателя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка двигателя", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Марка_двигателя", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка двигателя", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Норма_на_машино_час_летняя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма на машино час летняя", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Норма_на_машино_час_летняя", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма на машино час летняя", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива моторное,л", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива моторное,л", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да трансмиссионное,л", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да трансмиссионное,л", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p12", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива специальное,л", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива специальное,л", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p15", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива пластичные смазки,л", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p14", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Н-ма расх.масел на 100л р-да топлива пластичные смазки,л", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, [Марка автомобиля], [Вид топлива], [Норма расхода на 100 км летняя 6%], [Марка двигателя], [Норма на машино час летняя], [Н-ма расх.масел на 100л р-да топлива моторное,л], [Н-ма расх.масел на 100л р-да трансмиссионное,л], [Н-ма расх.масел на 100л р-да топлива специальное,л], [Н-ма расх.масел на 100л р-да топлива пластичные смазки,л] FROM dbo.[Нормы расхода ГСМ на авто,тракторы]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Путевые_листыDataSet._Нормы_расхода_ГСМ_на_авто_тракторыDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Путевые_листыDataSet._Нормы_расхода_ГСМ_на_авто_тракторыDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Путевые_листыDataSet._Нормы_расхода_ГСМ_на_авто_тракторыDataTable dataTable = new Путевые_листыDataSet._Нормы_расхода_ГСМ_на_авто_тракторыDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Путевые_листыDataSet._Нормы_расхода_ГСМ_на_авто_тракторыDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Путевые_листыDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Нормы расхода ГСМ на авто,тракторы");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_Марка_автомобиля, string Original_Вид_топлива, global::System.Nullable<double> p2, string Original_Марка_двигателя, global::System.Nullable<double> Original_Норма_на_машино_час_летняя, global::System.Nullable<double> p5, global::System.Nullable<double> p8, global::System.Nullable<double> p11, global::System.Nullable<double> p14) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_Марка_автомобиля == null)) {
                throw new global::System.ArgumentNullException("Original_Марка_автомобиля");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Марка_автомобиля));
            }
            if ((Original_Вид_топлива == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Вид_топлива));
            }
            if ((p2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(p2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_Марка_двигателя == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Марка_двигателя));
            }
            if ((Original_Норма_на_машино_час_летняя.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((double)(Original_Норма_на_машино_час_летняя.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((p5.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((double)(p5.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((p8.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((double)(p8.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((p11.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((double)(p11.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((p14.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((double)(p14.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Марка_автомобиля, string Вид_топлива, global::System.Nullable<double> p1, string Марка_двигателя, global::System.Nullable<double> Норма_на_машино_час_летняя, global::System.Nullable<double> p4, global::System.Nullable<double> p7, global::System.Nullable<double> p10, global::System.Nullable<double> p13) {
            if ((Марка_автомобиля == null)) {
                throw new global::System.ArgumentNullException("Марка_автомобиля");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Марка_автомобиля));
            }
            if ((Вид_топлива == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Вид_топлива));
            }
            if ((p1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(p1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Марка_двигателя == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Марка_двигателя));
            }
            if ((Норма_на_машино_час_летняя.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(Норма_на_машино_час_летняя.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(p4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((p7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(p7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((p10.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(p10.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((p13.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(p13.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Марка_автомобиля, 
                    string Вид_топлива, 
                    global::System.Nullable<double> p1, 
                    string Марка_двигателя, 
                    global::System.Nullable<double> Норма_на_машино_час_летняя, 
                    global::System.Nullable<double> p4, 
                    global::System.Nullable<double> p7, 
                    global::System.Nullable<double> p10, 
                    global::System.Nullable<double> p13, 
                    int Original_ID, 
                    string Original_Марка_автомобиля, 
                    string Original_Вид_топлива, 
                    global::System.Nullable<double> p2, 
                    string Original_Марка_двигателя, 
                    global::System.Nullable<double> Original_Норма_на_машино_час_летняя, 
                    global::System.Nullable<double> p5, 
                    global::System.Nullable<double> p8, 
                    global::System.Nullable<double> p11, 
                    global::System.Nullable<double> p14, 
                    int ID) {
            if ((Марка_автомобиля == null)) {
                throw new global::System.ArgumentNullException("Марка_автомобиля");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Марка_автомобиля));
            }
            if ((Вид_топлива == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Вид_топлива));
            }
            if ((p1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(p1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Марка_двигателя == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Марка_двигателя));
            }
            if ((Норма_на_машино_час_летняя.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(Норма_на_машино_час_летняя.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(p4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((p7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(p7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((p10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(p10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((p13.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(p13.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ID));
            if ((Original_Марка_автомобиля == null)) {
                throw new global::System.ArgumentNullException("Original_Марка_автомобиля");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Марка_автомобиля));
            }
            if ((Original_Вид_топлива == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Вид_топлива));
            }
            if ((p2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(p2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Марка_двигателя == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Марка_двигателя));
            }
            if ((Original_Норма_на_машино_час_летняя.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(Original_Норма_на_машино_час_летняя.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((p5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(p5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((p8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(p8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((p11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(p11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((p14.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((double)(p14.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Марка_автомобиля, 
                    string Вид_топлива, 
                    global::System.Nullable<double> p1, 
                    string Марка_двигателя, 
                    global::System.Nullable<double> Норма_на_машино_час_летняя, 
                    global::System.Nullable<double> p4, 
                    global::System.Nullable<double> p7, 
                    global::System.Nullable<double> p10, 
                    global::System.Nullable<double> p13, 
                    int Original_ID, 
                    string Original_Марка_автомобиля, 
                    string Original_Вид_топлива, 
                    global::System.Nullable<double> p2, 
                    string Original_Марка_двигателя, 
                    global::System.Nullable<double> Original_Норма_на_машино_час_летняя, 
                    global::System.Nullable<double> p5, 
                    global::System.Nullable<double> p8, 
                    global::System.Nullable<double> p11, 
                    global::System.Nullable<double> p14) {
            return this.Update(Марка_автомобиля, Вид_топлива, p1, Марка_двигателя, Норма_на_машино_час_летняя, p4, p7, p10, p13, Original_ID, Original_Марка_автомобиля, Original_Вид_топлива, p2, Original_Марка_двигателя, Original_Норма_на_машино_час_летняя, p5, p8, p11, p14, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Подвижной_составTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Подвижной_составTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Подвижной состав";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Марка и модель", "Марка и модель");
            tableMapping.ColumnMappings.Add("Гос.номер", "Гос_номер");
            tableMapping.ColumnMappings.Add("Гаражный номер", "Гаражный номер");
            tableMapping.ColumnMappings.Add("Тип двигателя", "Тип двигателя");
            tableMapping.ColumnMappings.Add("Год выпуска", "Год выпуска");
            tableMapping.ColumnMappings.Add("Инвентарный номер", "Инвентарный номер");
            tableMapping.ColumnMappings.Add("Вид топлива", "Вид топлива");
            tableMapping.ColumnMappings.Add("дата окончания страховки", "дата окончания страховки");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Подвижной состав] WHERE (([ID] = @Original_ID) AND ([Марка и модель] = @Original_Марка_и_модель) AND ([Гос.номер] = @p2) AND ((@IsNull_Гаражный_номер = 1 AND [Гаражный номер] IS NULL) OR ([Гаражный номер] = @Original_Гаражный_номер)) AND ((@IsNull_Тип_двигателя = 1 AND [Тип двигателя] IS NULL) OR ([Тип двигателя] = @Original_Тип_двигателя)) AND ((@IsNull_Год_выпуска = 1 AND [Год выпуска] IS NULL) OR ([Год выпуска] = @Original_Год_выпуска)) AND ((@IsNull_Инвентарный_номер = 1 AND [Инвентарный номер] IS NULL) OR ([Инвентарный номер] = @Original_Инвентарный_номер)) AND ((@IsNull_Вид_топлива = 1 AND [Вид топлива] IS NULL) OR ([Вид топлива] = @Original_Вид_топлива)) AND ((@IsNull_дата_окончания_страховки = 1 AND [дата окончания страховки] IS NULL) OR ([дата окончания страховки] = @Original_дата_окончания_страховки)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Марка_и_модель", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка и модель", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Гос.номер", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Гаражный_номер", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Гаражный номер", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Гаражный_номер", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Гаражный номер", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Тип_двигателя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип двигателя", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Тип_двигателя", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип двигателя", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Год_выпуска", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Год выпуска", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Год_выпуска", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Год выпуска", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Инвентарный_номер", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Инвентарный номер", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Инвентарный_номер", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Инвентарный номер", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Вид_топлива", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид топлива", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Вид_топлива", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид топлива", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_дата_окончания_страховки", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "дата окончания страховки", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_дата_окончания_страховки", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "дата окончания страховки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Подвижной состав] ([Марка и модель], [Гос.номер], [Гаражный номер], [Тип двигателя], [Год выпуска], [Инвентарный номер], [Вид топлива], [дата окончания страховки]) VALUES (@Марка_и_модель, @p1, @Гаражный_номер, @Тип_двигателя, @Год_выпуска, @Инвентарный_номер, @Вид_топлива, @дата_окончания_страховки);
SELECT ID, [Марка и модель], [Гос.номер], [Гаражный номер], [Тип двигателя], [Год выпуска], [Инвентарный номер], [Вид топлива], [дата окончания страховки] FROM [Подвижной состав] WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Марка_и_модель", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка и модель", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Гос.номер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Гаражный_номер", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Гаражный номер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Тип_двигателя", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип двигателя", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Год_выпуска", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Год выпуска", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Инвентарный_номер", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Инвентарный номер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Вид_топлива", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид топлива", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@дата_окончания_страховки", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "дата окончания страховки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Подвижной состав] SET [Марка и модель] = @Марка_и_модель, [Гос.номер] = @p1, [Гаражный номер] = @Гаражный_номер, [Тип двигателя] = @Тип_двигателя, [Год выпуска] = @Год_выпуска, [Инвентарный номер] = @Инвентарный_номер, [Вид топлива] = @Вид_топлива, [дата окончания страховки] = @дата_окончания_страховки WHERE (([ID] = @Original_ID) AND ([Марка и модель] = @Original_Марка_и_модель) AND ([Гос.номер] = @p2) AND ((@IsNull_Гаражный_номер = 1 AND [Гаражный номер] IS NULL) OR ([Гаражный номер] = @Original_Гаражный_номер)) AND ((@IsNull_Тип_двигателя = 1 AND [Тип двигателя] IS NULL) OR ([Тип двигателя] = @Original_Тип_двигателя)) AND ((@IsNull_Год_выпуска = 1 AND [Год выпуска] IS NULL) OR ([Год выпуска] = @Original_Год_выпуска)) AND ((@IsNull_Инвентарный_номер = 1 AND [Инвентарный номер] IS NULL) OR ([Инвентарный номер] = @Original_Инвентарный_номер)) AND ((@IsNull_Вид_топлива = 1 AND [Вид топлива] IS NULL) OR ([Вид топлива] = @Original_Вид_топлива)) AND ((@IsNull_дата_окончания_страховки = 1 AND [дата окончания страховки] IS NULL) OR ([дата окончания страховки] = @Original_дата_окончания_страховки)));
SELECT ID, [Марка и модель], [Гос.номер], [Гаражный номер], [Тип двигателя], [Год выпуска], [Инвентарный номер], [Вид топлива], [дата окончания страховки] FROM [Подвижной состав] WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Марка_и_модель", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка и модель", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Гос.номер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Гаражный_номер", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Гаражный номер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Тип_двигателя", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип двигателя", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Год_выпуска", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Год выпуска", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Инвентарный_номер", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Инвентарный номер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Вид_топлива", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид топлива", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@дата_окончания_страховки", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "дата окончания страховки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Марка_и_модель", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка и модель", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Гос.номер", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Гаражный_номер", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Гаражный номер", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Гаражный_номер", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Гаражный номер", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Тип_двигателя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип двигателя", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Тип_двигателя", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип двигателя", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Год_выпуска", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Год выпуска", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Год_выпуска", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Год выпуска", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Инвентарный_номер", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Инвентарный номер", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Инвентарный_номер", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Инвентарный номер", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Вид_топлива", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид топлива", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Вид_топлива", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вид топлива", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_дата_окончания_страховки", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "дата окончания страховки", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_дата_окончания_страховки", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "дата окончания страховки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, [Марка и модель], [Гос.номер], [Гаражный номер], [Тип двигателя], [Год" +
                " выпуска], [Инвентарный номер], [Вид топлива], [дата окончания страховки] FROM d" +
                "bo.[Подвижной состав]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Путевые_листыDataSet.Подвижной_составDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Путевые_листыDataSet.Подвижной_составDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Путевые_листыDataSet.Подвижной_составDataTable dataTable = new Путевые_листыDataSet.Подвижной_составDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Путевые_листыDataSet.Подвижной_составDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Путевые_листыDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Подвижной состав");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_Марка_и_модель, string p2, string Original_Гаражный_номер, string Original_Тип_двигателя, global::System.Nullable<global::System.DateTime> Original_Год_выпуска, string Original_Инвентарный_номер, string Original_Вид_топлива, global::System.Nullable<global::System.DateTime> Original_дата_окончания_страховки) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_Марка_и_модель == null)) {
                throw new global::System.ArgumentNullException("Original_Марка_и_модель");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Марка_и_модель));
            }
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(p2));
            }
            if ((Original_Гаражный_номер == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Гаражный_номер));
            }
            if ((Original_Тип_двигателя == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Тип_двигателя));
            }
            if ((Original_Год_выпуска.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_Год_выпуска.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Инвентарный_номер == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Инвентарный_номер));
            }
            if ((Original_Вид_топлива == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Вид_топлива));
            }
            if ((Original_дата_окончания_страховки.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_дата_окончания_страховки.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Марка_и_модель, string p1, string Гаражный_номер, string Тип_двигателя, global::System.Nullable<global::System.DateTime> Год_выпуска, string Инвентарный_номер, string Вид_топлива, global::System.Nullable<global::System.DateTime> дата_окончания_страховки) {
            if ((Марка_и_модель == null)) {
                throw new global::System.ArgumentNullException("Марка_и_модель");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Марка_и_модель));
            }
            if ((p1 == null)) {
                throw new global::System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(p1));
            }
            if ((Гаражный_номер == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Гаражный_номер));
            }
            if ((Тип_двигателя == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Тип_двигателя));
            }
            if ((Год_выпуска.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Год_выпуска.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Инвентарный_номер == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Инвентарный_номер));
            }
            if ((Вид_топлива == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Вид_топлива));
            }
            if ((дата_окончания_страховки.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(дата_окончания_страховки.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Марка_и_модель, 
                    string p1, 
                    string Гаражный_номер, 
                    string Тип_двигателя, 
                    global::System.Nullable<global::System.DateTime> Год_выпуска, 
                    string Инвентарный_номер, 
                    string Вид_топлива, 
                    global::System.Nullable<global::System.DateTime> дата_окончания_страховки, 
                    int Original_ID, 
                    string Original_Марка_и_модель, 
                    string p2, 
                    string Original_Гаражный_номер, 
                    string Original_Тип_двигателя, 
                    global::System.Nullable<global::System.DateTime> Original_Год_выпуска, 
                    string Original_Инвентарный_номер, 
                    string Original_Вид_топлива, 
                    global::System.Nullable<global::System.DateTime> Original_дата_окончания_страховки, 
                    int ID) {
            if ((Марка_и_модель == null)) {
                throw new global::System.ArgumentNullException("Марка_и_модель");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Марка_и_модель));
            }
            if ((p1 == null)) {
                throw new global::System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(p1));
            }
            if ((Гаражный_номер == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Гаражный_номер));
            }
            if ((Тип_двигателя == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Тип_двигателя));
            }
            if ((Год_выпуска.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Год_выпуска.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Инвентарный_номер == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Инвентарный_номер));
            }
            if ((Вид_топлива == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Вид_топлива));
            }
            if ((дата_окончания_страховки.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(дата_окончания_страховки.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ID));
            if ((Original_Марка_и_модель == null)) {
                throw new global::System.ArgumentNullException("Original_Марка_и_модель");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Марка_и_модель));
            }
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(p2));
            }
            if ((Original_Гаражный_номер == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Гаражный_номер));
            }
            if ((Original_Тип_двигателя == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Тип_двигателя));
            }
            if ((Original_Год_выпуска.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_Год_выпуска.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_Инвентарный_номер == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Инвентарный_номер));
            }
            if ((Original_Вид_топлива == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Вид_топлива));
            }
            if ((Original_дата_окончания_страховки.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_дата_окончания_страховки.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Марка_и_модель, 
                    string p1, 
                    string Гаражный_номер, 
                    string Тип_двигателя, 
                    global::System.Nullable<global::System.DateTime> Год_выпуска, 
                    string Инвентарный_номер, 
                    string Вид_топлива, 
                    global::System.Nullable<global::System.DateTime> дата_окончания_страховки, 
                    int Original_ID, 
                    string Original_Марка_и_модель, 
                    string p2, 
                    string Original_Гаражный_номер, 
                    string Original_Тип_двигателя, 
                    global::System.Nullable<global::System.DateTime> Original_Год_выпуска, 
                    string Original_Инвентарный_номер, 
                    string Original_Вид_топлива, 
                    global::System.Nullable<global::System.DateTime> Original_дата_окончания_страховки) {
            return this.Update(Марка_и_модель, p1, Гаражный_номер, Тип_двигателя, Год_выпуска, Инвентарный_номер, Вид_топлива, дата_окончания_страховки, Original_ID, Original_Марка_и_модель, p2, Original_Гаражный_номер, Original_Тип_двигателя, Original_Год_выпуска, Original_Инвентарный_номер, Original_Вид_топлива, Original_дата_окончания_страховки, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Путевой_лист_Грузового_автоTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Путевой_лист_Грузового_автоTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Путевой лист Грузового авто";
            tableMapping.ColumnMappings.Add("ID_Путевого листа", "ID_Путевого листа");
            tableMapping.ColumnMappings.Add("Номер путевого листа", "Номер путевого листа");
            tableMapping.ColumnMappings.Add("Дата путевого листа", "Дата путевого листа");
            tableMapping.ColumnMappings.Add("ID_Водителя", "ID_Водителя");
            tableMapping.ColumnMappings.Add("ID_Автомобиля", "ID_Автомобиля");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Путевой лист Грузового авто] WHERE (([ID_Путевого листа] = @Original_ID_Путевого_листа) AND ([Номер путевого листа] = @Original_Номер_путевого_листа) AND ([Дата путевого листа] = @Original_Дата_путевого_листа) AND ([ID_Водителя] = @Original_ID_Водителя) AND ([ID_Автомобиля] = @Original_ID_Автомобиля))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Номер_путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_путевого_листа", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Водителя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водителя", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Автомобиля", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиля", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Путевой лист Грузового авто] ([Номер путевого листа], [Дата путевого листа], [ID_Водителя], [ID_Автомобиля]) VALUES (@Номер_путевого_листа, @Дата_путевого_листа, @ID_Водителя, @ID_Автомобиля);
SELECT [ID_Путевого листа], [Номер путевого листа], [Дата путевого листа], ID_Водителя, ID_Автомобиля FROM [Путевой лист Грузового авто] WHERE ([ID_Путевого листа] = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Номер_путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_путевого_листа", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Водителя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водителя", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Автомобиля", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиля", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Путевой лист Грузового авто] SET [Номер путевого листа] = @Номер_путевого_листа, [Дата путевого листа] = @Дата_путевого_листа, [ID_Водителя] = @ID_Водителя, [ID_Автомобиля] = @ID_Автомобиля WHERE (([ID_Путевого листа] = @Original_ID_Путевого_листа) AND ([Номер путевого листа] = @Original_Номер_путевого_листа) AND ([Дата путевого листа] = @Original_Дата_путевого_листа) AND ([ID_Водителя] = @Original_ID_Водителя) AND ([ID_Автомобиля] = @Original_ID_Автомобиля));
SELECT [ID_Путевого листа], [Номер путевого листа], [Дата путевого листа], ID_Водителя, ID_Автомобиля FROM [Путевой лист Грузового авто] WHERE ([ID_Путевого листа] = @ID_Путевого_листа)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Номер_путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_путевого_листа", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Водителя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водителя", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Автомобиля", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиля", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Номер_путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_путевого_листа", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Водителя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водителя", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Автомобиля", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиля", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Путевого_листа", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [ID_Путевого листа], [Номер путевого листа], [Дата путевого листа], ID_Вод" +
                "ителя, ID_Автомобиля FROM dbo.[Путевой лист Грузового авто]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Путевые_листыDataSet.Путевой_лист_Грузового_автоDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Путевые_листыDataSet.Путевой_лист_Грузового_автоDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Путевые_листыDataSet.Путевой_лист_Грузового_автоDataTable dataTable = new Путевые_листыDataSet.Путевой_лист_Грузового_автоDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Путевые_листыDataSet.Путевой_лист_Грузового_автоDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Путевые_листыDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Путевой лист Грузового авто");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Путевого_листа, int Original_Номер_путевого_листа, System.DateTime Original_Дата_путевого_листа, int Original_ID_Водителя, int Original_ID_Автомобиля) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Путевого_листа));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Номер_путевого_листа));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_Дата_путевого_листа));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_ID_Водителя));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_ID_Автомобиля));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Номер_путевого_листа, System.DateTime Дата_путевого_листа, int ID_Водителя, int ID_Автомобиля) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Номер_путевого_листа));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Дата_путевого_листа));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ID_Водителя));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(ID_Автомобиля));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Номер_путевого_листа, System.DateTime Дата_путевого_листа, int ID_Водителя, int ID_Автомобиля, int Original_ID_Путевого_листа, int Original_Номер_путевого_листа, System.DateTime Original_Дата_путевого_листа, int Original_ID_Водителя, int Original_ID_Автомобиля, int ID_Путевого_листа) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Номер_путевого_листа));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Дата_путевого_листа));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(ID_Водителя));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ID_Автомобиля));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_Путевого_листа));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Номер_путевого_листа));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_Дата_путевого_листа));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_ID_Водителя));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ID_Автомобиля));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(ID_Путевого_листа));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Номер_путевого_листа, System.DateTime Дата_путевого_листа, int ID_Водителя, int ID_Автомобиля, int Original_ID_Путевого_листа, int Original_Номер_путевого_листа, System.DateTime Original_Дата_путевого_листа, int Original_ID_Водителя, int Original_ID_Автомобиля) {
            return this.Update(Номер_путевого_листа, Дата_путевого_листа, ID_Водителя, ID_Автомобиля, Original_ID_Путевого_листа, Original_Номер_путевого_листа, Original_Дата_путевого_листа, Original_ID_Водителя, Original_ID_Автомобиля, Original_ID_Путевого_листа);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Путевой_лист_легкового_автомобиляTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Путевой_лист_легкового_автомобиляTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Путевой лист легкового автомобиля";
            tableMapping.ColumnMappings.Add("ID_Путевого листа", "ID_Путевого листа");
            tableMapping.ColumnMappings.Add("Номер путевого листа", "Номер путевого листа");
            tableMapping.ColumnMappings.Add("За период с", "За период с");
            tableMapping.ColumnMappings.Add("За период по", "За период по");
            tableMapping.ColumnMappings.Add("ID_Автомобиль", "ID_Автомобиль");
            tableMapping.ColumnMappings.Add("ID_Водитель", "ID_Водитель");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Путевой лист легкового автомобиля] WHERE (([ID_Путевого листа] = @Original_ID_Путевого_листа) AND ((@IsNull_Номер_путевого_листа = 1 AND [Номер путевого листа] IS NULL) OR ([Номер путевого листа] = @Original_Номер_путевого_листа)) AND ((@IsNull_За_период_с = 1 AND [За период с] IS NULL) OR ([За период с] = @Original_За_период_с)) AND ((@IsNull_За_период_по = 1 AND [За период по] IS NULL) OR ([За период по] = @Original_За_период_по)) AND ((@IsNull_ID_Автомобиль = 1 AND [ID_Автомобиль] IS NULL) OR ([ID_Автомобиль] = @Original_ID_Автомобиль)) AND ((@IsNull_ID_Водитель = 1 AND [ID_Водитель] IS NULL) OR ([ID_Водитель] = @Original_ID_Водитель)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Номер_путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер путевого листа", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Номер_путевого_листа", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_За_период_с", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "За период с", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_За_период_с", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "За период с", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_За_период_по", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "За период по", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_За_период_по", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "За период по", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Автомобиль", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиль", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Автомобиль", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиль", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Водитель", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водитель", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Водитель", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водитель", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Путевой лист легкового автомобиля] ([Номер путевого листа], [За период с], [За период по], [ID_Автомобиль], [ID_Водитель]) VALUES (@Номер_путевого_листа, @За_период_с, @За_период_по, @ID_Автомобиль, @ID_Водитель);
SELECT [ID_Путевого листа], [Номер путевого листа], [За период с], [За период по], ID_Автомобиль, ID_Водитель FROM [Путевой лист легкового автомобиля] WHERE ([ID_Путевого листа] = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Номер_путевого_листа", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@За_период_с", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "За период с", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@За_период_по", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "За период по", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Автомобиль", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиль", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Водитель", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водитель", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Путевой лист легкового автомобиля] SET [Номер путевого листа] = @Номер_путевого_листа, [За период с] = @За_период_с, [За период по] = @За_период_по, [ID_Автомобиль] = @ID_Автомобиль, [ID_Водитель] = @ID_Водитель WHERE (([ID_Путевого листа] = @Original_ID_Путевого_листа) AND ((@IsNull_Номер_путевого_листа = 1 AND [Номер путевого листа] IS NULL) OR ([Номер путевого листа] = @Original_Номер_путевого_листа)) AND ((@IsNull_За_период_с = 1 AND [За период с] IS NULL) OR ([За период с] = @Original_За_период_с)) AND ((@IsNull_За_период_по = 1 AND [За период по] IS NULL) OR ([За период по] = @Original_За_период_по)) AND ((@IsNull_ID_Автомобиль = 1 AND [ID_Автомобиль] IS NULL) OR ([ID_Автомобиль] = @Original_ID_Автомобиль)) AND ((@IsNull_ID_Водитель = 1 AND [ID_Водитель] IS NULL) OR ([ID_Водитель] = @Original_ID_Водитель)));
SELECT [ID_Путевого листа], [Номер путевого листа], [За период с], [За период по], ID_Автомобиль, ID_Водитель FROM [Путевой лист легкового автомобиля] WHERE ([ID_Путевого листа] = @ID_Путевого_листа)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Номер_путевого_листа", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@За_период_с", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "За период с", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@За_период_по", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "За период по", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Автомобиль", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиль", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Водитель", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водитель", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Номер_путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер путевого листа", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Номер_путевого_листа", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_За_период_с", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "За период с", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_За_период_с", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "За период с", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_За_период_по", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "За период по", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_За_период_по", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "За период по", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Автомобиль", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиль", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Автомобиль", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиль", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Водитель", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водитель", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Водитель", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водитель", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Путевого_листа", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [ID_Путевого листа], [Номер путевого листа], [За период с], [За период по]" +
                ", ID_Автомобиль, ID_Водитель FROM dbo.[Путевой лист легкового автомобиля]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Путевые_листыDataSet.Путевой_лист_легкового_автомобиляDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Путевые_листыDataSet.Путевой_лист_легкового_автомобиляDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Путевые_листыDataSet.Путевой_лист_легкового_автомобиляDataTable dataTable = new Путевые_листыDataSet.Путевой_лист_легкового_автомобиляDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Путевые_листыDataSet.Путевой_лист_легкового_автомобиляDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Путевые_листыDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Путевой лист легкового автомобиля");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Путевого_листа, string Original_Номер_путевого_листа, global::System.Nullable<global::System.DateTime> Original_За_период_с, global::System.Nullable<global::System.DateTime> Original_За_период_по, global::System.Nullable<int> Original_ID_Автомобиль, global::System.Nullable<int> Original_ID_Водитель) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Путевого_листа));
            if ((Original_Номер_путевого_листа == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Номер_путевого_листа));
            }
            if ((Original_За_период_с.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_За_период_с.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_За_период_по.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_За_период_по.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_Автомобиль.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_ID_Автомобиль.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_Водитель.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_ID_Водитель.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Номер_путевого_листа, global::System.Nullable<global::System.DateTime> За_период_с, global::System.Nullable<global::System.DateTime> За_период_по, global::System.Nullable<int> ID_Автомобиль, global::System.Nullable<int> ID_Водитель) {
            if ((Номер_путевого_листа == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Номер_путевого_листа));
            }
            if ((За_период_с.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(За_период_с.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((За_период_по.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(За_период_по.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ID_Автомобиль.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(ID_Автомобиль.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ID_Водитель.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(ID_Водитель.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Номер_путевого_листа, global::System.Nullable<global::System.DateTime> За_период_с, global::System.Nullable<global::System.DateTime> За_период_по, global::System.Nullable<int> ID_Автомобиль, global::System.Nullable<int> ID_Водитель, int Original_ID_Путевого_листа, string Original_Номер_путевого_листа, global::System.Nullable<global::System.DateTime> Original_За_период_с, global::System.Nullable<global::System.DateTime> Original_За_период_по, global::System.Nullable<int> Original_ID_Автомобиль, global::System.Nullable<int> Original_ID_Водитель, int ID_Путевого_листа) {
            if ((Номер_путевого_листа == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Номер_путевого_листа));
            }
            if ((За_период_с.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(За_период_с.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((За_период_по.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(За_период_по.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ID_Автомобиль.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ID_Автомобиль.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ID_Водитель.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(ID_Водитель.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_Путевого_листа));
            if ((Original_Номер_путевого_листа == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Номер_путевого_листа));
            }
            if ((Original_За_период_с.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_За_период_с.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_За_период_по.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_За_период_по.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_Автомобиль.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_ID_Автомобиль.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_Водитель.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_ID_Водитель.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(ID_Путевого_листа));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Номер_путевого_листа, global::System.Nullable<global::System.DateTime> За_период_с, global::System.Nullable<global::System.DateTime> За_период_по, global::System.Nullable<int> ID_Автомобиль, global::System.Nullable<int> ID_Водитель, int Original_ID_Путевого_листа, string Original_Номер_путевого_листа, global::System.Nullable<global::System.DateTime> Original_За_период_с, global::System.Nullable<global::System.DateTime> Original_За_период_по, global::System.Nullable<int> Original_ID_Автомобиль, global::System.Nullable<int> Original_ID_Водитель) {
            return this.Update(Номер_путевого_листа, За_период_с, За_период_по, ID_Автомобиль, ID_Водитель, Original_ID_Путевого_листа, Original_Номер_путевого_листа, Original_За_период_с, Original_За_период_по, Original_ID_Автомобиль, Original_ID_Водитель, Original_ID_Путевого_листа);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Работа_водителя_и_автомобиляTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Работа_водителя_и_автомобиляTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Работа водителя и автомобиля";
            tableMapping.ColumnMappings.Add("ID_работа водителя и авто", "ID_работа водителя и авто");
            tableMapping.ColumnMappings.Add("ID_Путевого листа", "ID_Путевого листа");
            tableMapping.ColumnMappings.Add("Операции", "Операции");
            tableMapping.ColumnMappings.Add("Показания спидометра", "Показания спидометра");
            tableMapping.ColumnMappings.Add("Дата и время по графику", "Дата и время по графику");
            tableMapping.ColumnMappings.Add("Дата и время фактически", "Дата и время фактически");
            tableMapping.ColumnMappings.Add("Нулевой пробег", "Нулевой пробег");
            tableMapping.ColumnMappings.Add("Время работы двигателя час", "Время работы двигателя час");
            tableMapping.ColumnMappings.Add("Время работы спецоборудования", "Время работы спецоборудования");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Работа водителя и автомобиля] WHERE (([ID_работа водителя и авто] = @Original_ID_работа_водителя_и_авто) AND ((@IsNull_ID_Путевого_листа = 1 AND [ID_Путевого листа] IS NULL) OR ([ID_Путевого листа] = @Original_ID_Путевого_листа)) AND ([Операции] = @Original_Операции) AND ((@IsNull_Показания_спидометра = 1 AND [Показания спидометра] IS NULL) OR ([Показания спидометра] = @Original_Показания_спидометра)) AND ((@IsNull_Дата_и_время_по_графику = 1 AND [Дата и время по графику] IS NULL) OR ([Дата и время по графику] = @Original_Дата_и_время_по_графику)) AND ((@IsNull_Дата_и_время_фактически = 1 AND [Дата и время фактически] IS NULL) OR ([Дата и время фактически] = @Original_Дата_и_время_фактически)) AND ((@IsNull_Нулевой_пробег = 1 AND [Нулевой пробег] IS NULL) OR ([Нулевой пробег] = @Original_Нулевой_пробег)) AND ((@IsNull_Время_работы_двигателя_час = 1 AND [Время работы двигателя час] IS NULL) OR ([Время работы двигателя час] = @Original_Время_работы_двигателя_час)) AND ((@IsNull_Время_работы_спецоборудования = 1 AND [Время работы спецоборудования] IS NULL) OR ([Время работы спецоборудования] = @Original_Время_работы_спецоборудования)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_работа_водителя_и_авто", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_работа водителя и авто", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Операции", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Операции", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Показания_спидометра", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Показания_спидометра", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Дата_и_время_по_графику", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время по графику", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_и_время_по_графику", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время по графику", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Дата_и_время_фактически", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время фактически", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_и_время_фактически", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время фактически", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Нулевой_пробег", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Нулевой пробег", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Нулевой_пробег", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Нулевой пробег", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Время_работы_двигателя_час", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время работы двигателя час", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Время_работы_двигателя_час", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время работы двигателя час", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Время_работы_спецоборудования", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время работы спецоборудования", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Время_работы_спецоборудования", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время работы спецоборудования", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Работа водителя и автомобиля] ([ID_Путевого листа], [Операции], [Показания спидометра], [Дата и время по графику], [Дата и время фактически], [Нулевой пробег], [Время работы двигателя час], [Время работы спецоборудования]) VALUES (@ID_Путевого_листа, @Операции, @Показания_спидометра, @Дата_и_время_по_графику, @Дата_и_время_фактически, @Нулевой_пробег, @Время_работы_двигателя_час, @Время_работы_спецоборудования);
SELECT [ID_работа водителя и авто], [ID_Путевого листа], Операции, [Показания спидометра], [Дата и время по графику], [Дата и время фактически], [Нулевой пробег], [Время работы двигателя час], [Время работы спецоборудования] FROM [Работа водителя и автомобиля] WHERE ([ID_работа водителя и авто] = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Операции", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Операции", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Показания_спидометра", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_и_время_по_графику", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время по графику", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_и_время_фактически", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время фактически", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Нулевой_пробег", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Нулевой пробег", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Время_работы_двигателя_час", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время работы двигателя час", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Время_работы_спецоборудования", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время работы спецоборудования", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Работа водителя и автомобиля] SET [ID_Путевого листа] = @ID_Путевог" +
                "о_листа, [Операции] = @Операции, [Показания спидометра] = @Показания_спидометра," +
                " [Дата и время по графику] = @Дата_и_время_по_графику, [Дата и время фактически]" +
                " = @Дата_и_время_фактически, [Нулевой пробег] = @Нулевой_пробег, [Время работы д" +
                "вигателя час] = @Время_работы_двигателя_час, [Время работы спецоборудования] = @" +
                "Время_работы_спецоборудования WHERE (([ID_работа водителя и авто] = @Original_ID" +
                "_работа_водителя_и_авто) AND ((@IsNull_ID_Путевого_листа = 1 AND [ID_Путевого ли" +
                "ста] IS NULL) OR ([ID_Путевого листа] = @Original_ID_Путевого_листа)) AND ([Опер" +
                "ации] = @Original_Операции) AND ((@IsNull_Показания_спидометра = 1 AND [Показани" +
                "я спидометра] IS NULL) OR ([Показания спидометра] = @Original_Показания_спидомет" +
                "ра)) AND ((@IsNull_Дата_и_время_по_графику = 1 AND [Дата и время по графику] IS " +
                "NULL) OR ([Дата и время по графику] = @Original_Дата_и_время_по_графику)) AND ((" +
                "@IsNull_Дата_и_время_фактически = 1 AND [Дата и время фактически] IS NULL) OR ([" +
                "Дата и время фактически] = @Original_Дата_и_время_фактически)) AND ((@IsNull_Нул" +
                "евой_пробег = 1 AND [Нулевой пробег] IS NULL) OR ([Нулевой пробег] = @Original_Н" +
                "улевой_пробег)) AND ((@IsNull_Время_работы_двигателя_час = 1 AND [Время работы д" +
                "вигателя час] IS NULL) OR ([Время работы двигателя час] = @Original_Время_работы" +
                "_двигателя_час)) AND ((@IsNull_Время_работы_спецоборудования = 1 AND [Время рабо" +
                "ты спецоборудования] IS NULL) OR ([Время работы спецоборудования] = @Original_Вр" +
                "емя_работы_спецоборудования)));\r\nSELECT [ID_работа водителя и авто], [ID_Путевог" +
                "о листа], Операции, [Показания спидометра], [Дата и время по графику], [Дата и в" +
                "ремя фактически], [Нулевой пробег], [Время работы двигателя час], [Время работы " +
                "спецоборудования] FROM [Работа водителя и автомобиля] WHERE ([ID_работа водителя" +
                " и авто] = @ID_работа_водителя_и_авто)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Операции", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Операции", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Показания_спидометра", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_и_время_по_графику", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время по графику", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_и_время_фактически", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время фактически", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Нулевой_пробег", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Нулевой пробег", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Время_работы_двигателя_час", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время работы двигателя час", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Время_работы_спецоборудования", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время работы спецоборудования", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_работа_водителя_и_авто", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_работа водителя и авто", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Путевого_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Путевого листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Операции", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Операции", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Показания_спидометра", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Показания_спидометра", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Показания спидометра", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Дата_и_время_по_графику", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время по графику", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_и_время_по_графику", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время по графику", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Дата_и_время_фактически", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время фактически", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_и_время_фактически", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата и время фактически", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Нулевой_пробег", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Нулевой пробег", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Нулевой_пробег", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Нулевой пробег", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Время_работы_двигателя_час", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время работы двигателя час", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Время_работы_двигателя_час", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время работы двигателя час", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Время_работы_спецоборудования", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время работы спецоборудования", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Время_работы_спецоборудования", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Время работы спецоборудования", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_работа_водителя_и_авто", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_работа водителя и авто", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT [ID_работа водителя и авто], [ID_Путевого листа], Операции, [Показания спидометра], [Дата и время по графику], [Дата и время фактически], [Нулевой пробег], [Время работы двигателя час], [Время работы спецоборудования] FROM dbo.[Работа водителя и автомобиля]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Путевые_листыDataSet.Работа_водителя_и_автомобиляDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Путевые_листыDataSet.Работа_водителя_и_автомобиляDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Путевые_листыDataSet.Работа_водителя_и_автомобиляDataTable dataTable = new Путевые_листыDataSet.Работа_водителя_и_автомобиляDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Путевые_листыDataSet.Работа_водителя_и_автомобиляDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Путевые_листыDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Работа водителя и автомобиля");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_работа_водителя_и_авто, global::System.Nullable<int> Original_ID_Путевого_листа, string Original_Операции, global::System.Nullable<int> Original_Показания_спидометра, global::System.Nullable<global::System.DateTime> Original_Дата_и_время_по_графику, global::System.Nullable<global::System.DateTime> Original_Дата_и_время_фактически, global::System.Nullable<int> Original_Нулевой_пробег, global::System.Nullable<int> Original_Время_работы_двигателя_час, global::System.Nullable<int> Original_Время_работы_спецоборудования) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_работа_водителя_и_авто));
            if ((Original_ID_Путевого_листа.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_Путевого_листа.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Операции == null)) {
                throw new global::System.ArgumentNullException("Original_Операции");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Операции));
            }
            if ((Original_Показания_спидометра.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_Показания_спидометра.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_Дата_и_время_по_графику.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_Дата_и_время_по_графику.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_Дата_и_время_фактически.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_Дата_и_время_фактически.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_Нулевой_пробег.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_Нулевой_пробег.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_Время_работы_двигателя_час.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_Время_работы_двигателя_час.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_Время_работы_спецоборудования.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_Время_работы_спецоборудования.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> ID_Путевого_листа, string Операции, global::System.Nullable<int> Показания_спидометра, global::System.Nullable<global::System.DateTime> Дата_и_время_по_графику, global::System.Nullable<global::System.DateTime> Дата_и_время_фактически, global::System.Nullable<int> Нулевой_пробег, global::System.Nullable<int> Время_работы_двигателя_час, global::System.Nullable<int> Время_работы_спецоборудования) {
            if ((ID_Путевого_листа.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Путевого_листа.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Операции == null)) {
                throw new global::System.ArgumentNullException("Операции");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Операции));
            }
            if ((Показания_спидометра.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Показания_спидометра.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Дата_и_время_по_графику.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Дата_и_время_по_графику.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Дата_и_время_фактически.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Дата_и_время_фактически.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Нулевой_пробег.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Нулевой_пробег.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Время_работы_двигателя_час.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Время_работы_двигателя_час.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Время_работы_спецоборудования.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Время_работы_спецоборудования.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> ID_Путевого_листа, 
                    string Операции, 
                    global::System.Nullable<int> Показания_спидометра, 
                    global::System.Nullable<global::System.DateTime> Дата_и_время_по_графику, 
                    global::System.Nullable<global::System.DateTime> Дата_и_время_фактически, 
                    global::System.Nullable<int> Нулевой_пробег, 
                    global::System.Nullable<int> Время_работы_двигателя_час, 
                    global::System.Nullable<int> Время_работы_спецоборудования, 
                    int Original_ID_работа_водителя_и_авто, 
                    global::System.Nullable<int> Original_ID_Путевого_листа, 
                    string Original_Операции, 
                    global::System.Nullable<int> Original_Показания_спидометра, 
                    global::System.Nullable<global::System.DateTime> Original_Дата_и_время_по_графику, 
                    global::System.Nullable<global::System.DateTime> Original_Дата_и_время_фактически, 
                    global::System.Nullable<int> Original_Нулевой_пробег, 
                    global::System.Nullable<int> Original_Время_работы_двигателя_час, 
                    global::System.Nullable<int> Original_Время_работы_спецоборудования, 
                    int ID_работа_водителя_и_авто) {
            if ((ID_Путевого_листа.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Путевого_листа.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Операции == null)) {
                throw new global::System.ArgumentNullException("Операции");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Операции));
            }
            if ((Показания_спидометра.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Показания_спидометра.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Дата_и_время_по_графику.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Дата_и_время_по_графику.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Дата_и_время_фактически.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Дата_и_время_фактически.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Нулевой_пробег.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Нулевой_пробег.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Время_работы_двигателя_час.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Время_работы_двигателя_час.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Время_работы_спецоборудования.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Время_работы_спецоборудования.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ID_работа_водителя_и_авто));
            if ((Original_ID_Путевого_листа.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_ID_Путевого_листа.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Операции == null)) {
                throw new global::System.ArgumentNullException("Original_Операции");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Операции));
            }
            if ((Original_Показания_спидометра.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_Показания_спидометра.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_Дата_и_время_по_графику.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_Дата_и_время_по_графику.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_Дата_и_время_фактически.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_Дата_и_время_фактически.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Нулевой_пробег.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_Нулевой_пробег.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_Время_работы_двигателя_час.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_Время_работы_двигателя_час.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_Время_работы_спецоборудования.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_Время_работы_спецоборудования.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(ID_работа_водителя_и_авто));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> ID_Путевого_листа, 
                    string Операции, 
                    global::System.Nullable<int> Показания_спидометра, 
                    global::System.Nullable<global::System.DateTime> Дата_и_время_по_графику, 
                    global::System.Nullable<global::System.DateTime> Дата_и_время_фактически, 
                    global::System.Nullable<int> Нулевой_пробег, 
                    global::System.Nullable<int> Время_работы_двигателя_час, 
                    global::System.Nullable<int> Время_работы_спецоборудования, 
                    int Original_ID_работа_водителя_и_авто, 
                    global::System.Nullable<int> Original_ID_Путевого_листа, 
                    string Original_Операции, 
                    global::System.Nullable<int> Original_Показания_спидометра, 
                    global::System.Nullable<global::System.DateTime> Original_Дата_и_время_по_графику, 
                    global::System.Nullable<global::System.DateTime> Original_Дата_и_время_фактически, 
                    global::System.Nullable<int> Original_Нулевой_пробег, 
                    global::System.Nullable<int> Original_Время_работы_двигателя_час, 
                    global::System.Nullable<int> Original_Время_работы_спецоборудования) {
            return this.Update(ID_Путевого_листа, Операции, Показания_спидометра, Дата_и_время_по_графику, Дата_и_время_фактически, Нулевой_пробег, Время_работы_двигателя_час, Время_работы_спецоборудования, Original_ID_работа_водителя_и_авто, Original_ID_Путевого_листа, Original_Операции, Original_Показания_спидометра, Original_Дата_и_время_по_графику, Original_Дата_и_время_фактически, Original_Нулевой_пробег, Original_Время_работы_двигателя_час, Original_Время_работы_спецоборудования, Original_ID_работа_водителя_и_авто);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_Данные_путевой_лист_легкового_автоTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public View_Данные_путевой_лист_легкового_автоTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_Данные путевой лист легкового авто";
            tableMapping.ColumnMappings.Add("Число", "Число");
            tableMapping.ColumnMappings.Add("Время_выезда", "Время_выезда");
            tableMapping.ColumnMappings.Add("Время_возвращения", "Время_возвращения");
            tableMapping.ColumnMappings.Add("Время_в_наряде", "Время_в_наряде");
            tableMapping.ColumnMappings.Add("Показания_спидометра_при_выезде", "Показания_спидометра_при_выезде");
            tableMapping.ColumnMappings.Add("Показания_спидометра_при_возращении", "Показания_спидометра_при_возращении");
            tableMapping.ColumnMappings.Add("Пробег_км", "Пробег_км");
            tableMapping.ColumnMappings.Add("Остаток_топлива_при_выезде", "Остаток_топлива_при_выезде");
            tableMapping.ColumnMappings.Add("Остаток_топлива_при_возвращении", "Остаток_топлива_при_возвращении");
            tableMapping.ColumnMappings.Add("Заправлено_топливо_л", "Заправлено_топливо_л");
            tableMapping.ColumnMappings.Add("Дата_и_номер_чека_АЗС", "Дата_и_номер_чека_АЗС");
            tableMapping.ColumnMappings.Add("Расход_топлива_по_норме", "Расход_топлива_по_норме");
            tableMapping.ColumnMappings.Add("Расход_топлива_фактически", "Расход_топлива_фактически");
            tableMapping.ColumnMappings.Add("Расход_топлива_экономия_перерасход", "Расход_топлива_экономия_перерасход");
            tableMapping.ColumnMappings.Add("Автомобиль_технически_исправлен_выезд_разрешен_подпись_штамп_уполномоченного_лица" +
                    "", "Автомобиль_технически_исправлен_выезд_разрешен_подпись_штамп_уполномоченного_лица" +
                    "");
            tableMapping.ColumnMappings.Add("Автомобиль_технически_исправлен_прнял_подпись_водителя", "Автомобиль_технически_исправлен_прнял_подпись_водителя");
            tableMapping.ColumnMappings.Add("При_возвращении_автомобиль_сдал_подпись_водителя", "При_возвращении_автомобиль_сдал_подпись_водителя");
            tableMapping.ColumnMappings.Add("При_возвращении_автомобиль_принял_подпись_штамп_уполномоченного_лица", "При_возвращении_автомобиль_принял_подпись_штамп_уполномоченного_лица");
            tableMapping.ColumnMappings.Add("Водитель_по_состоянию_здоровья_к_управлению_допущен_подпись_штамп_уполномоченного" +
                    "_лица", "Водитель_по_состоянию_здоровья_к_управлению_допущен_подпись_штамп_уполномоченного" +
                    "_лица");
            tableMapping.ColumnMappings.Add("Подпись_штамп_лица_ответственного_за_оформление_путевого_листа", "Подпись_штамп_лица_ответственного_за_оформление_путевого_листа");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Число, Время_выезда, Время_возвращения, Время_в_наряде, Показания_спидометра_при_выезде, Показания_спидометра_при_возращении, Пробег_км, Остаток_топлива_при_выезде, Остаток_топлива_при_возвращении, Заправлено_топливо_л, Дата_и_номер_чека_АЗС, Расход_топлива_по_норме, Расход_топлива_фактически, Расход_топлива_экономия_перерасход, Автомобиль_технически_исправлен_выезд_разрешен_подпись_штамп_уполномоченного_лица, Автомобиль_технически_исправлен_прнял_подпись_водителя, При_возвращении_автомобиль_сдал_подпись_водителя, При_возвращении_автомобиль_принял_подпись_штамп_уполномоченного_лица, Водитель_по_состоянию_здоровья_к_управлению_допущен_подпись_штамп_уполномоченного_лица, Подпись_штамп_лица_ответственного_за_оформление_путевого_листа FROM dbo.[View_Данные путевой лист легкового авто]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Путевые_листыDataSet.View_Данные_путевой_лист_легкового_автоDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Путевые_листыDataSet.View_Данные_путевой_лист_легкового_автоDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Путевые_листыDataSet.View_Данные_путевой_лист_легкового_автоDataTable dataTable = new Путевые_листыDataSet.View_Данные_путевой_лист_легкового_автоDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_Работа_водителя_и_автомобиляTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public View_Работа_водителя_и_автомобиляTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_Работа водителя и автомобиля";
            tableMapping.ColumnMappings.Add("Операции", "Операции");
            tableMapping.ColumnMappings.Add("Показания_спидометра", "Показания_спидометра");
            tableMapping.ColumnMappings.Add("Дата_и_время_по_графику", "Дата_и_время_по_графику");
            tableMapping.ColumnMappings.Add("Дата_и_время_фактически", "Дата_и_время_фактически");
            tableMapping.ColumnMappings.Add("Нулевой_пробег", "Нулевой_пробег");
            tableMapping.ColumnMappings.Add("Время_работы_двигателя_час", "Время_работы_двигателя_час");
            tableMapping.ColumnMappings.Add("Время_работы_спецоборудования", "Время_работы_спецоборудования");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AUTOPARK.Properties.Settings.Default.Путевые_листыConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Операции, Показания_спидометра, Дата_и_время_по_графику, Дата_и_время_факт" +
                "ически, Нулевой_пробег, Время_работы_двигателя_час, Время_работы_спецоборудовани" +
                "я FROM dbo.[View_Работа водителя и автомобиля]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Путевые_листыDataSet.View_Работа_водителя_и_автомобиляDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Путевые_листыDataSet.View_Работа_водителя_и_автомобиляDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Путевые_листыDataSet.View_Работа_водителя_и_автомобиляDataTable dataTable = new Путевые_листыDataSet.View_Работа_водителя_и_автомобиляDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private Водители_автоTableAdapter _водители_автоTableAdapter;
        
        private Данные_Путевой_лист_легкового_автоTableAdapter _данные_Путевой_лист_легкового_автоTableAdapter;
        
        private Движение_ТСМTableAdapter _движение_ТСМTableAdapter;
        
        private Задание_водителюTableAdapter _задание_водителюTableAdapter;
        
        private Заправка_ТСМTableAdapter _заправка_ТСМTableAdapter;
        
        private Личный_составTableAdapter _личный_составTableAdapter;
        
        private Нормы_расхода_ГСМ_на_авто_тракторыTableAdapter _нормы_расхода_ГСМ_на_авто_тракторыTableAdapter;
        
        private Подвижной_составTableAdapter _подвижной_составTableAdapter;
        
        private Путевой_лист_Грузового_автоTableAdapter _путевой_лист_Грузового_автоTableAdapter;
        
        private Путевой_лист_легкового_автомобиляTableAdapter _путевой_лист_легкового_автомобиляTableAdapter;
        
        private Работа_водителя_и_автомобиляTableAdapter _работа_водителя_и_автомобиляTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Водители_автоTableAdapter Водители_автоTableAdapter {
            get {
                return this._водители_автоTableAdapter;
            }
            set {
                this._водители_автоTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Данные_Путевой_лист_легкового_автоTableAdapter Данные_Путевой_лист_легкового_автоTableAdapter {
            get {
                return this._данные_Путевой_лист_легкового_автоTableAdapter;
            }
            set {
                this._данные_Путевой_лист_легкового_автоTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Движение_ТСМTableAdapter Движение_ТСМTableAdapter {
            get {
                return this._движение_ТСМTableAdapter;
            }
            set {
                this._движение_ТСМTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Задание_водителюTableAdapter Задание_водителюTableAdapter {
            get {
                return this._задание_водителюTableAdapter;
            }
            set {
                this._задание_водителюTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Заправка_ТСМTableAdapter Заправка_ТСМTableAdapter {
            get {
                return this._заправка_ТСМTableAdapter;
            }
            set {
                this._заправка_ТСМTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Личный_составTableAdapter Личный_составTableAdapter {
            get {
                return this._личный_составTableAdapter;
            }
            set {
                this._личный_составTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Нормы_расхода_ГСМ_на_авто_тракторыTableAdapter Нормы_расхода_ГСМ_на_авто_тракторыTableAdapter {
            get {
                return this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter;
            }
            set {
                this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Подвижной_составTableAdapter Подвижной_составTableAdapter {
            get {
                return this._подвижной_составTableAdapter;
            }
            set {
                this._подвижной_составTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Путевой_лист_Грузового_автоTableAdapter Путевой_лист_Грузового_автоTableAdapter {
            get {
                return this._путевой_лист_Грузового_автоTableAdapter;
            }
            set {
                this._путевой_лист_Грузового_автоTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Путевой_лист_легкового_автомобиляTableAdapter Путевой_лист_легкового_автомобиляTableAdapter {
            get {
                return this._путевой_лист_легкового_автомобиляTableAdapter;
            }
            set {
                this._путевой_лист_легкового_автомобиляTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Работа_водителя_и_автомобиляTableAdapter Работа_водителя_и_автомобиляTableAdapter {
            get {
                return this._работа_водителя_и_автомобиляTableAdapter;
            }
            set {
                this._работа_водителя_и_автомобиляTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._водители_автоTableAdapter != null) 
                            && (this._водители_автоTableAdapter.Connection != null))) {
                    return this._водители_автоTableAdapter.Connection;
                }
                if (((this._данные_Путевой_лист_легкового_автоTableAdapter != null) 
                            && (this._данные_Путевой_лист_легкового_автоTableAdapter.Connection != null))) {
                    return this._данные_Путевой_лист_легкового_автоTableAdapter.Connection;
                }
                if (((this._движение_ТСМTableAdapter != null) 
                            && (this._движение_ТСМTableAdapter.Connection != null))) {
                    return this._движение_ТСМTableAdapter.Connection;
                }
                if (((this._задание_водителюTableAdapter != null) 
                            && (this._задание_водителюTableAdapter.Connection != null))) {
                    return this._задание_водителюTableAdapter.Connection;
                }
                if (((this._заправка_ТСМTableAdapter != null) 
                            && (this._заправка_ТСМTableAdapter.Connection != null))) {
                    return this._заправка_ТСМTableAdapter.Connection;
                }
                if (((this._личный_составTableAdapter != null) 
                            && (this._личный_составTableAdapter.Connection != null))) {
                    return this._личный_составTableAdapter.Connection;
                }
                if (((this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter != null) 
                            && (this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter.Connection != null))) {
                    return this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter.Connection;
                }
                if (((this._подвижной_составTableAdapter != null) 
                            && (this._подвижной_составTableAdapter.Connection != null))) {
                    return this._подвижной_составTableAdapter.Connection;
                }
                if (((this._путевой_лист_Грузового_автоTableAdapter != null) 
                            && (this._путевой_лист_Грузового_автоTableAdapter.Connection != null))) {
                    return this._путевой_лист_Грузового_автоTableAdapter.Connection;
                }
                if (((this._путевой_лист_легкового_автомобиляTableAdapter != null) 
                            && (this._путевой_лист_легкового_автомобиляTableAdapter.Connection != null))) {
                    return this._путевой_лист_легкового_автомобиляTableAdapter.Connection;
                }
                if (((this._работа_водителя_и_автомобиляTableAdapter != null) 
                            && (this._работа_водителя_и_автомобиляTableAdapter.Connection != null))) {
                    return this._работа_водителя_и_автомобиляTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._водители_автоTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._данные_Путевой_лист_легкового_автоTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._движение_ТСМTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._задание_водителюTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._заправка_ТСМTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._личный_составTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._подвижной_составTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._путевой_лист_Грузового_автоTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._путевой_лист_легкового_автомобиляTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._работа_водителя_и_автомобиляTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(Путевые_листыDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._подвижной_составTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Подвижной_состав.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._подвижной_составTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._личный_составTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Личный_состав.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._личный_составTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._путевой_лист_Грузового_автоTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Путевой_лист_Грузового_авто.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._путевой_лист_Грузового_автоTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._путевой_лист_легкового_автомобиляTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Путевой_лист_легкового_автомобиля.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._путевой_лист_легкового_автомобиляTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._работа_водителя_и_автомобиляTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Работа_водителя_и_автомобиля.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._работа_водителя_и_автомобиляTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._водители_автоTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Водители_авто.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._водители_автоTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._данные_Путевой_лист_легкового_автоTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Данные_Путевой_лист_легкового_авто.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._данные_Путевой_лист_легкового_автоTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._движение_ТСМTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Движение_ТСМ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._движение_ТСМTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._задание_водителюTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Задание_водителю.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._задание_водителюTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._заправка_ТСМTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Заправка_ТСМ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._заправка_ТСМTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet._Нормы_расхода_ГСМ_на_авто_тракторы.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(Путевые_листыDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._подвижной_составTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Подвижной_состав.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._подвижной_составTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._личный_составTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Личный_состав.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._личный_составTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._путевой_лист_Грузового_автоTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Путевой_лист_Грузового_авто.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._путевой_лист_Грузового_автоTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._путевой_лист_легкового_автомобиляTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Путевой_лист_легкового_автомобиля.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._путевой_лист_легкового_автомобиляTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._работа_водителя_и_автомобиляTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Работа_водителя_и_автомобиля.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._работа_водителя_и_автомобиляTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._водители_автоTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Водители_авто.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._водители_автоTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._данные_Путевой_лист_легкового_автоTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Данные_Путевой_лист_легкового_авто.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._данные_Путевой_лист_легкового_автоTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._движение_ТСМTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Движение_ТСМ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._движение_ТСМTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._задание_водителюTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Задание_водителю.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._задание_водителюTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._заправка_ТСМTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Заправка_ТСМ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._заправка_ТСМTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet._Нормы_расхода_ГСМ_на_авто_тракторы.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(Путевые_листыDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet._Нормы_расхода_ГСМ_на_авто_тракторы.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._заправка_ТСМTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Заправка_ТСМ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._заправка_ТСМTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._задание_водителюTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Задание_водителю.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._задание_водителюTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._движение_ТСМTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Движение_ТСМ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._движение_ТСМTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._данные_Путевой_лист_легкового_автоTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Данные_Путевой_лист_легкового_авто.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._данные_Путевой_лист_легкового_автоTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._водители_автоTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Водители_авто.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._водители_автоTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._работа_водителя_и_автомобиляTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Работа_водителя_и_автомобиля.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._работа_водителя_и_автомобиляTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._путевой_лист_легкового_автомобиляTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Путевой_лист_легкового_автомобиля.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._путевой_лист_легкового_автомобиляTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._путевой_лист_Грузового_автоTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Путевой_лист_Грузового_авто.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._путевой_лист_Грузового_автоTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._личный_составTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Личный_состав.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._личный_составTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._подвижной_составTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Подвижной_состав.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._подвижной_составTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(Путевые_листыDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._водители_автоTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._водители_автоTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._данные_Путевой_лист_легкового_автоTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._данные_Путевой_лист_легкового_автоTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._движение_ТСМTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._движение_ТСМTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._задание_водителюTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._задание_водителюTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._заправка_ТСМTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._заправка_ТСМTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._личный_составTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._личный_составTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._подвижной_составTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._подвижной_составTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._путевой_лист_Грузового_автоTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._путевой_лист_Грузового_автоTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._путевой_лист_легкового_автомобиляTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._путевой_лист_легкового_автомобиляTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._работа_водителя_и_автомобиляTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._работа_водителя_и_автомобиляTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager не содержит сведений о подключении. Укажите для каждого адапт" +
                        "ера таблицы TableAdapterManager допустимый экземпляр адаптера таблицы.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Не удается начать транзакцию. Текущее соединение данных не поддерживает транзакци" +
                        "и или текущее состояние не позволяет начать транзакцию.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._водители_автоTableAdapter != null)) {
                    revertConnections.Add(this._водители_автоTableAdapter, this._водители_автоTableAdapter.Connection);
                    this._водители_автоTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._водители_автоTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._водители_автоTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._водители_автоTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._водители_автоTableAdapter.Adapter);
                    }
                }
                if ((this._данные_Путевой_лист_легкового_автоTableAdapter != null)) {
                    revertConnections.Add(this._данные_Путевой_лист_легкового_автоTableAdapter, this._данные_Путевой_лист_легкового_автоTableAdapter.Connection);
                    this._данные_Путевой_лист_легкового_автоTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._данные_Путевой_лист_легкового_автоTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._данные_Путевой_лист_легкового_автоTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._данные_Путевой_лист_легкового_автоTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._данные_Путевой_лист_легкового_автоTableAdapter.Adapter);
                    }
                }
                if ((this._движение_ТСМTableAdapter != null)) {
                    revertConnections.Add(this._движение_ТСМTableAdapter, this._движение_ТСМTableAdapter.Connection);
                    this._движение_ТСМTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._движение_ТСМTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._движение_ТСМTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._движение_ТСМTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._движение_ТСМTableAdapter.Adapter);
                    }
                }
                if ((this._задание_водителюTableAdapter != null)) {
                    revertConnections.Add(this._задание_водителюTableAdapter, this._задание_водителюTableAdapter.Connection);
                    this._задание_водителюTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._задание_водителюTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._задание_водителюTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._задание_водителюTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._задание_водителюTableAdapter.Adapter);
                    }
                }
                if ((this._заправка_ТСМTableAdapter != null)) {
                    revertConnections.Add(this._заправка_ТСМTableAdapter, this._заправка_ТСМTableAdapter.Connection);
                    this._заправка_ТСМTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._заправка_ТСМTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._заправка_ТСМTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._заправка_ТСМTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._заправка_ТСМTableAdapter.Adapter);
                    }
                }
                if ((this._личный_составTableAdapter != null)) {
                    revertConnections.Add(this._личный_составTableAdapter, this._личный_составTableAdapter.Connection);
                    this._личный_составTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._личный_составTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._личный_составTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._личный_составTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._личный_составTableAdapter.Adapter);
                    }
                }
                if ((this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter != null)) {
                    revertConnections.Add(this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter, this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter.Connection);
                    this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter.Adapter);
                    }
                }
                if ((this._подвижной_составTableAdapter != null)) {
                    revertConnections.Add(this._подвижной_составTableAdapter, this._подвижной_составTableAdapter.Connection);
                    this._подвижной_составTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._подвижной_составTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._подвижной_составTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._подвижной_составTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._подвижной_составTableAdapter.Adapter);
                    }
                }
                if ((this._путевой_лист_Грузового_автоTableAdapter != null)) {
                    revertConnections.Add(this._путевой_лист_Грузового_автоTableAdapter, this._путевой_лист_Грузового_автоTableAdapter.Connection);
                    this._путевой_лист_Грузового_автоTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._путевой_лист_Грузового_автоTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._путевой_лист_Грузового_автоTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._путевой_лист_Грузового_автоTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._путевой_лист_Грузового_автоTableAdapter.Adapter);
                    }
                }
                if ((this._путевой_лист_легкового_автомобиляTableAdapter != null)) {
                    revertConnections.Add(this._путевой_лист_легкового_автомобиляTableAdapter, this._путевой_лист_легкового_автомобиляTableAdapter.Connection);
                    this._путевой_лист_легкового_автомобиляTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._путевой_лист_легкового_автомобиляTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._путевой_лист_легкового_автомобиляTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._путевой_лист_легкового_автомобиляTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._путевой_лист_легкового_автомобиляTableAdapter.Adapter);
                    }
                }
                if ((this._работа_водителя_и_автомобиляTableAdapter != null)) {
                    revertConnections.Add(this._работа_водителя_и_автомобиляTableAdapter, this._работа_водителя_и_автомобиляTableAdapter.Connection);
                    this._работа_водителя_и_автомобиляTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._работа_водителя_и_автомобиляTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._работа_водителя_и_автомобиляTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._работа_водителя_и_автомобиляTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._работа_водителя_и_автомобиляTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._водители_автоTableAdapter != null)) {
                    this._водители_автоTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._водители_автоTableAdapter]));
                    this._водители_автоTableAdapter.Transaction = null;
                }
                if ((this._данные_Путевой_лист_легкового_автоTableAdapter != null)) {
                    this._данные_Путевой_лист_легкового_автоTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._данные_Путевой_лист_легкового_автоTableAdapter]));
                    this._данные_Путевой_лист_легкового_автоTableAdapter.Transaction = null;
                }
                if ((this._движение_ТСМTableAdapter != null)) {
                    this._движение_ТСМTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._движение_ТСМTableAdapter]));
                    this._движение_ТСМTableAdapter.Transaction = null;
                }
                if ((this._задание_водителюTableAdapter != null)) {
                    this._задание_водителюTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._задание_водителюTableAdapter]));
                    this._задание_водителюTableAdapter.Transaction = null;
                }
                if ((this._заправка_ТСМTableAdapter != null)) {
                    this._заправка_ТСМTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._заправка_ТСМTableAdapter]));
                    this._заправка_ТСМTableAdapter.Transaction = null;
                }
                if ((this._личный_составTableAdapter != null)) {
                    this._личный_составTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._личный_составTableAdapter]));
                    this._личный_составTableAdapter.Transaction = null;
                }
                if ((this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter != null)) {
                    this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter]));
                    this._нормы_расхода_ГСМ_на_авто_тракторыTableAdapter.Transaction = null;
                }
                if ((this._подвижной_составTableAdapter != null)) {
                    this._подвижной_составTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._подвижной_составTableAdapter]));
                    this._подвижной_составTableAdapter.Transaction = null;
                }
                if ((this._путевой_лист_Грузового_автоTableAdapter != null)) {
                    this._путевой_лист_Грузового_автоTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._путевой_лист_Грузового_автоTableAdapter]));
                    this._путевой_лист_Грузового_автоTableAdapter.Transaction = null;
                }
                if ((this._путевой_лист_легкового_автомобиляTableAdapter != null)) {
                    this._путевой_лист_легкового_автомобиляTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._путевой_лист_легкового_автомобиляTableAdapter]));
                    this._путевой_лист_легкового_автомобиляTableAdapter.Transaction = null;
                }
                if ((this._работа_водителя_и_автомобиляTableAdapter != null)) {
                    this._работа_водителя_и_автомобиляTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._работа_водителя_и_автомобиляTableAdapter]));
                    this._работа_водителя_и_автомобиляTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591